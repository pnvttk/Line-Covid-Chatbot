%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2001.w013.n001.114B.p30.114__01.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: Natalya
%%CreationDate: 1/27/2020
%%BoundingBox: 0 0 660 400
%%HiResBoundingBox: 0 0 660 400
%%CropBox: 0 0 660 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.0 x430 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 15834 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45613737376137373761373737613737376137373761373737613737
%376137373761373737613737376137373761373737613737376137373761
%373737613737376137373761373737613737376137373761373737613737
%376137373761373737613737376137373761373737613737376137373761
%3737376137373761FD85373D3737373D3737373D3737373D3737373D3737
%373D3737373D3737373D3737373D3737373D3737373D3737373D3737373D
%3737373D3737373D3737373D3737373D3737373D3737373D3737373D3737
%373D3737373D3737373D3737373D3737373D3737373D3737373D3737373D
%3737373D3737373D3737373D3737373DFD83376137373761373737613737
%376137373761373737613737376137373761373737613737376137373761
%373737613737376137373761373737613737376137373761373737613737
%376137373761373737613737376137373761373737613737376137373761
%373737613737376137373761373737613737376137373761FD81373D3737
%373D3737373D3737373D3737373D3737373D3737373D3737373D3737373D
%3737373D3737373D3737373D3737373D373D373D3737373D3737373D3737
%373D3737373D3737373D3737373D3737373D3737373D3737373D3737373D
%3737373D3737373D3737373D3737373D3737373D3737373D3737373D3737
%373DFD353730FD4D37613737376137373761373737613737376137373761
%373737613737376137373761373737613737376137373761373D37372F2F
%306137373761373D37613737376137373761373737613737376137373761
%373737613737376137373761373737613737376137373761373737613737
%3761373737613737376137373761FD30373D302F072F072930FD0537362F
%30FD45373D3737373D3737373D3737373D3737373D3737373D3737373D37
%37373D3737373D3737373D3737376137372F2F29300753A27D303D373737
%362937373D3737373D3737373D3737373D3737373D3737373D3737373D37
%37373D373737613737373D3737373D3737373D3737373D3737373D373737
%3D3737373D3737373DFD2B37363007290D302F7DA8FFA830FD04370D3030
%FD2037300EFD23376137373761373737613737376137373761373D363030
%3D3761373737613737376137373761373D37302930303653CBFD04FF303D
%373737362F373761373737613737376137373761373D3737363D37613737
%37613737376137362F302F37375B373D3761373737613737376137373761
%373737613737376137373761FD1737072F2FFD10373607300E537DFFFFA2
%77FFA836FD04370D2836FD06373DFD0A37072F30FD0A373D2F3637362F2F
%0736FD1C373D3737373D3737373D3737373D3737373DFD04372F2F072F36
%37373D3737373D3737373D373D36302F362F7EFFFFA87D287DFFFF303D37
%3D373006FD04373D37370E30363D3761FD0437072F072F29303761373737
%3D37373736362F2F37302F06363737373D3737373D3737373D3737373D37
%37373D3737373DFD17372FCA772F07FD0D372F2F0D3053CAFFFF7D522852
%53FF7E303737373D072936FD0537282806302F36303737372FA153280730
%062F0DFD07373030302F0637302F07FD1B37613737376137373761373737
%6137373761373D37377D7D3761373D376137373761FD04372F30305AA8FF
%FFA84C537753287DFF7E303D376137373761FD043753FFFFA82F30293037
%3D377EFFFFA85A3036292F2F373761373737612F30373629303036373737
%613737376137373761373737613737376137373761FD14373D0E302F5228
%360E3030FD08373001302F7EFFFFA97728534C4C287EFFFF2FFD0B370EA8
%FFA87DA82F300636373759FD04FF7E2F300D2F0636FD05373D302F373730
%37303DFD1C373D3737373D3737373D3737373D37372F7EA253532953A22F
%2F2F37373DFD04372F3052FFFFFF53775253525377FFFFFF5337373D3737
%373D3737373D37367DFF530DA8A8302F293D377EFFCB7DFFFFFF7D300E30
%2F37373D37373761362F37373036373D3737373D3737373D3737373D3737
%373D3737373D3737373DFD113729A8FFA8062F067DFFFF7D2F07FD053707
%302FFFFF7E524C28522853A8FFCA7D29FD0D370E7DFF53077ECF2F072F30
%3759FFA84C287EFFFFA8530D300730FD05373D2F29072F36FD1D37613737
%376137373761FD043753FFFFFFA87D28A8FD04FFA82F0761373D3730077E
%FFA8287D7D5352A8FFFF7D53303D3737376137373761373D3761373753CA
%2F367DFF7D2F3061377EFFFF4C522877A8FFFFA82F362F3036613761373D
%0637373D3761373737613737376137373761373737613737376137373761
%FD0F3729FD0DFF7E290D3D373707367EFF7D4C285277FFFFA85330FD0A37
%302F30FD0437307D840D29CF7E0030373753FFA8524C52284C53FFFFFF77
%300E302FFD053736FD1D373D3737373D3737373D3737373D30A2FD0DFF7E
%282F3661373030A8FFA8287DA8FFFF7E2F37376137373761FD04372F3030
%303737373D3730A8FF53FF7E29363D3754FFFF2853537728524CA2FFFFA8
%59302F2937373D3737373D373D36303037373D3737373D3737373D373737
%3D3737373DFD0F371553CAFD0BFFCA530E2F0636373707307EFF7D7EFFFF
%A8530EFD07373637362F073630370DFD06372F7DFFCA4C073737370E7DFF
%A9524C285328524C537DFFFF7D06300DFD073730290630FD163761373737
%6137373761FD043753CBFD0AFFA8530E61302F3761372F29A9FD05FF7D0E
%6137373761373D372F2F3030612F2F3736373D3761373D37365353306137
%37373D2FA2FFFFA853537D4C7D4C4C53FFFF7E302F376137373761373029
%2F2F36376137373761373737613737376137373761FD0F3730777EFD07FF
%A87E533037372F540637373D2F067DFFA877A8A82FFD0837300630302F07
%2F073707FD11370E53A1FFFF7D2852285252524CFFA82F07FD07372F2F53
%CA53FD17373D3737373D3737373D373652A8FD06FFA82F0E373761373030
%283737376130537D2F2FCA53FD04373D3737373D302F302F282929372F36
%373D3737373D3737373D3737373D37373761373053FFFFFF5352537D5253
%FFFF54363637373DFD05375A7D5A373737613737373D3737373D3737373D
%3737373DFD0D3730777EFD06FF530E3DFD063700FD04373D3030075A4C30
%FD0A370D37062F30370730FD123730363737297DFFFF7E77284C4CFFFF5A
%07FD07370E36292829360E3730FD1337613737376137373761373753A8FD
%06FF2F3D2F5A375B53370629373D3761373D3736282F3761373737613737
%37613630373036373730373D3761373737613737376137373761373D362F
%3030373D3053A2FFFFA24C53FFFF5A30373D376137372F7E7D2852537D7E
%2F2F36613761373737613737376137373761FD0E375377FD05FFCA303736
%30372F7E01272F3DFD143707372F2F07300D3DFD1237072F0630373D372F
%7DFFFFFF77FFFF5A0DFD04373653A8FFA8072F077DFFA853302FFD0F373D
%3737373D3737373D3737373D307DA8FD05FF303D3761373000537D37373D
%3737373D3737373D3737373D3737373D37373730293037612930373D3737
%373D373737613737373D3737373D373D2F362F373761372FA8FD05FF5329
%3661373652FD04FFA853537DFFFFFF532F303D373D3737373D3737373DFD
%1137527DA8FFFFFFA82F15370D07007DA853FD1C3736FD0837300730FD09
%372F0D2FFD04370E53FF7D7DFFCF280637373753FD07FFA8FD05FF532930
%FD0D3761373737613737376137373761372953CBFD04FF7E28284C53FFFF
%770D61376137373761373737613737376137373761373737613737376137
%3D376137373761372F282F28303061373737613737062F373D3761373D2F
%A85A30537D293737612F53FD0EFF293037613737376137373761FD113706
%2F7D7DA2FFFFFFA8A8FFFFCA53072FFD2337367DFF7D2F0E3007FD053736
%2907FD073728530E29143D373736280E2FA8FD0CFF7E0DFD0F373D373737
%3D3737373D373737532F30537DFD06FF7D540E5327FD04373D3737373D37
%37373D3737373D3737373D3737373D373737613737373D373D30FFFFFFCA
%7E2F302F30373D37613030373D3737373D37370630373D373D3730066137
%2F7DFD0BFFA8363737373D3737373D3737373DFD0F3753A82F302F5A537E
%537E2F0E0D59A24C30FD1A37300DFD063736A8FF7DFFFFA82F300D2F30FD
%12373D072F0E3737302FA8A8FD06FFAF85842FFD0F376137373761373737
%61373737304C29285A2F300D300D3053A8AFA85330373D37613737376137
%3737613737376137373761373D3761302F062F28363761373D30FFFF2F2F
%A8FFFF7D5A30302F37373D3761373737613737376137373761372F2F3730
%613737302F7DFD05FF85857E5A373737613737376137373761FD0F37287D
%5329A2FF7E7E7DA8A8FFA98B7D7E07FD15372F3607300E2F7DFF53FD0437
%36A8FF53300E53A2FFCA7D2F3007303737363DFD0B373D062FFD05373D37
%2FA8FD04FFAF85852F3DFD0C373D3737373D3737373D373737610E7DFFFF
%287EFD06FFA9855AA87E2F36613737373D3737373D373D37613737376137
%362F2F2F302F7EFFFFFFA83637373D30CBFF7E775A0E3053FFFFFF53300E
%302F2F30613737373D3737373D37373730003737363737293D30A8FFFFFF
%AF85AFA830373D3737373D3737373DFD10373653FFFF7D7EFD06FFA9857E
%525A0DFD0B3730300E373737302F062F0E3053A8FFFFA8FF7DFD0437367D
%FF075A537D2F0E2F7DCFFF7D530D30072907FD0B37302800372F37373637
%307DFFFFAF858585A830FD0D37613737376137373761373737613754A8FF
%7DFD06FFAF85AF53302937376137373761FD04372F2F285330302F2F2936
%0E5AA2FFFFA852A8FFA8363D3761377EFF7E0E37537D53360E54A2FFFF7E
%2F36302F2930376137373761FD0437537700303761376130A8FFFFA9AF85
%AF533737613737376137373761FD10373D3052A8A8A8FD05FF858B7E2F37
%30FD0A37073053FFCF7E07290D362F7DCAFFA8532753A8FF7DFD04373D2F
%A1FFA82F0E307D77540E3053A8FFFF53300E30062F30FD083736A2A20006
%0E373730A2FFA9A985AF7E30FD10373D3737373D3737373D3737373D2F7D
%A8A8FD05FFAF8553373D37613737373D373737612F3053CAA8FFCF2F3030
%53CBFFFF7753527D2EA8FF7E0E3D3737373D2F7DCFFF7D300E5A777D2F37
%2F7DCFFFA8530E362F2F2FFD04373D373D3028FFFF534C062928FFFFAF85
%AFA94C30613737373D3737373D3737373DFD113753A152A8FFFFFFAF857D
%0DFD0B370E302FCA2F2FCAFF28547DFFFF7E284C7D7D300E53FF7DFD0737
%0E2F7DFFA8530D302F7753360E2F77FFFF7E2F3006290DFD06372F0653A8
%FFFFCBA8FFA9AF85857E530630FD10376137373761373737613737376137
%372F5377A8FFFFAFA82F3D3737376137373761373D373029A8CA302FFFA8
%7DFFFFFFA82877775A30362FFFFF5A376137373761373D373653A8FFA82F
%30307E775A30362FA8FFFF53362F2F363D3761373D2F530E307DFFFFFFAF
%AF85AF7D5A30533661373737613737376137373761FD13370E5353A8FFA2
%29FD0D37072FA8FF2F0E7DA2A8FFFFA8527D53300E307DFFFF7D30FD0B37
%0D53A8FF7D2F0E36537D2F360D53A8FF2F3006FD06372F777E0D0E2F7E7E
%7E7D5A2F300D7E7DFD0F373D3737373D3737373D3737373D3737373D373D
%30537D7D283D3737373D3737373D3737373D372828FF7D0E2FA87DFFFFA8
%52533037307DA8FFFF7D2F3D3737373D3737373D3737373D362F7DFFFF7E
%0D37307D535A0E5AFF7E062F3061FD0437537EFFA85330073007300D362F
%282F533737373D3737373D3737373DFD17370652272FFD0E370653FF7D53
%FF53A9FFFF772F0E302FA8FFFFFF530EFD10373029A8FFA82F300E535253
%2FFF7E300730FD0437145A77FFFFFFA8A87D7E7EA8A853287E2830FD0E37
%6137373761373737613737376137373761373D373000282F5B3737376137
%37376137373761373728CAFFFF53A8FFA853370E547DFFFFA27DFF533737
%6137373761FD05373D37613737373D3059A8FFA2540E3653A8FFA9303037
%613737373D54A8A2FD09FF28A9FFCA2F3D37613737376137373761FD1737
%07280630FD103729592853FFFF2F0E0D7DCFFFA8590D065259FD09373607
%3030FD06373D142F53FFFF7D0D0E2FFF7E300DFD0637307D777DFD07FFA8
%53A8FFA830FD10373D3737373D3737373D3737373D373737613630062F30
%37373D3737373D3737373D3737373D373D0E3053FFA82F53CAFFFF7D3036
%61372F28613737373D373737612F3636302FFD06376137372FA8FFFF5353
%FFA830303737373D373736542F7DA8FD06FFAF7DFFFF7E303D3737373D37
%37373D3737373DFD15372F360E30FD113730075AFFFF7DFFFFA229363737
%36FD0C3730302F0D370D2F07FD07370D53A8FFA8FF7E2F07FD0937527DFD
%05FFAF7E7EA87D2FFD113761373737613737376137373761373737613730
%3737303D3761373737613737376137373761373D302953FFFFFFA859303D
%37373761373D3761373737613737376130362F2F2F3030302F3737613737
%3761373053FFFFA800363737376137373761375477A9FD04FF85857EFF28
%373761373737613737376137373761FD153707370DFD1337074CFFFF5330
%36FD133707360629072F302F07FD09372F7E2830FD0A3730537DFFFFFF85
%857E7D7D30FD10373D3737373D3737373D3737373D3737373D373D30FD04
%2FFD04373D3737373D3737373D3737373D37372F592F3737613737373D37
%37373D3737373D3737373D373737362F362F2F2836302F3637373D373737
%3D37370EFD04373D3737373D3737373D307D7DFFFFAF857E2930373D3737
%373D3737373D3737373DFD17370730303636FD13370EFD19370736302930
%300DFD19372F537DAF7E5907FD1337613737376137373761373737613737
%3761FD063730613737376137373761373737613737376137373761373737
%613737376137373761373737613737376137373761373D295B37372FFD04
%37613737376137373761373737613737376137373761373D2F7D7D772F3D
%37373761373737613737376137373761FD18373D0736FD2F37360730072F
%36FD1A373028522830FD16373D3737373D3737373D3737373D3737373D37
%3D30363737373D3737373D3737373D3737373D3737373D3737373D373737
%3D3737373D3737373D3737373D3737373D3737373D373006FD04373D3737
%373D3737373D3737373D3737373D3737373D373737613029F8293037373D
%3737373D3737373D3737373D3737373DFD49373630FD1D373606F80636FD
%163761373737613737376137373761373737613737376137373761373737
%613737376137373761373737613737376137373761373737613737376137
%3737613737376137373761373D3761373737613737376137373761373737
%6137373761373737613737376130300030303D3761373737613737376137
%37376137373761FD68373030283030FD14373D3737373D3737373D373737
%3D3737373D3737373D3737373D3737373D3737373D3737373D3737373D37
%37373D3737373D3737373D3737373D3737373D373737613737373D373737
%3D3737373D3737373D3737373D3737373D3737373D3737373D3737373D37
%3D30373737293D3737373D3737373D3737373D3737373DFD433730FD2637
%360D3D2F2F30FD1337613737376137373761373737613737376137373761
%373737613737376137373761373737613737376137373761373737613737
%3761373737613737376137613637373D3761373737613737376137373761
%3737376137373761373737613737376137373761373D363037302F613737
%3761373737613737376137373761FD3F373636303630373037373DFD2237
%07360630FD16373D3737373D3737373D3737373D3737373D3737373D3737
%373D3737373D3737373D3737373D3737373D3737373D3737373D3737373D
%373D37363636072F2F2F292F30373037373D37613737373D3737373D3737
%373D3737373D3737373D3737373D3737373D3737292F3737373D3737373D
%3737373D3737373D3737373DFD3537FD04363030062F072F062F072F062F
%07290D3630370EFD1E373007FD1737613737376137373761373737613737
%376137373761373737613737376137373761373737613737376137373761
%373737613737305B3036303730373036303730363036303630363737373D
%3761373737613737376137373761373737613737376137373761373D2930
%303D376137373761373737613737376137373761FD38373D3737373DFD07
%373D3737373DFD223730FD15373D3737373D3737373D3737373D3737373D
%3737373D3737373D3737373D3737373D3737373D3737373D3737373D3737
%373D3737373D3737373D373737613737373D3737373D3737373D3737373D
%3737373D3737373D3737373D3737373D3737373D3737373D3737373D373D
%373D3737373D3737373D3737373D3737373DFD30375B3737373D375B365B
%FD04373637375B363736FD10375BFD2E3761373737613737376137373761
%37373761373737613737376137373761373737613737376137373761373D
%36532F5B5A5B2F5A285A535A30545453306130532F595A532F5B5A532F5A
%5353535B3753305A2F5A535A373737613737376137373761373737613737
%37613737376137373761373737613737376137373761FD2E372F2F5A2F53
%2F4C2F5A2F5328532F5A2F37373730302F5A2F5A2F532828285A3053305A
%2F532F532F2830FD2D373D3737373D3737373D3737373D3737373D373737
%3D3737373D3737373D3737373D3737373D3737373D36532F37302F2F5436
%36285A2F53365A37373637305330532F5A3054302F2F53302F2F53305A28
%5B3037373D3737373D3737373D3737373D3737373D3737373D3737373D37
%37373D3737373D3737373D3737373DFD4137363736FD07373637363736FD
%333761373737613737376137373761373737613737376137373761373737
%61373737613737376137373761373D3761373D376137373761373D376137
%373761373D376137373761373D3761373D3761373D376137373761373737
%613737376137373761373737613737376137373761373737613737376137
%37376137373761FDFC37FD05375B8561855B8561855B8561855B8561855B
%8561855B8561855B8561855B8561855B8561855B8561855B8561855B8561
%855B8561855B8561855B8561855B8561855B8561855B8561855B8561855B
%8561855B8561855B8561855B8561855B8561855B8561855B8561855B8561
%855B8561855B8561855B8561855B8561855B856185
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2001.w013.n001.114B.p30.114</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2020-01-27T18:28:59+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-01-27T18:28:59+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2020-01-27T18:28:59+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AMc9KfO3Yq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYqpvcW6SpE8qLK/2IywDN8h1OAkckiJIutlTCh2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVRu7y1s4TPdSrDECByc0qT0A8SewG&#xA;RlIRFlnDHKRqIssavPMmo30klvpURgSP++nfiroPFy4MduO/xhn/AOK++Ys88pbR2/H2fHfyc/Hp&#xA;Iwoz3vp+rrL4UP6Sc+T/AMpPOPmm9S/SRLbTmEbJrM8KhTwG3pRyq815sF/eOyL/ACttTNLqu0Y4&#xA;5bHil+Pm7vT6Lij6gYjfa99/dQj7t/NM5bW9sr2806+4G7sLiS3leMFUfgfhkVWJIDoQ1Kmnieub&#xA;vRanxsQm89r9KMGUxHLolPmO9vbWzT6m6xTTM6iV15hQkEkxotV3PpU38e+W5pEDb8bEsNLjjKXq&#xA;5D9YH6UxgcyQRu32mVWNPEiuWg7OPIUSFTCh2KuxV2KuxV2KuxVCpqmnSXj2SXMbXafagDDnsATt&#xA;7A7+GQGSN1e7YcMxHio8Peism1uxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksd80aJq8+m2nmFLVRayS&#xA;z2tjKjVlZ4JZI3XmkQaJmeFuIWetCG4MA4XS5NbGeY4wPUPx7/teh0+iOPDxmXplRI9/xo/Ee4pn&#xA;okt5Jp6C8DfWI2eMu68GdUYhJCvYulCffNtiJ4d+bpNQIifp5fjZH5Y0uxVBX+rWdkVjkLSXMgrD&#xA;axDnM/8AqoO3ixoo7nK55BH3tuPDKe45d55ITTPLHmHznqax2dl6r2xaMrE3CO35U5C6vwDwJFKx&#xA;QVf/AFhmr1muxw+vn3Dn8T+p3Oj0UyPT9J/iPL/Nj198vsehR+WPy6/L6KNvMci69rtvEbm30O1i&#xA;QQQRx1cyrbFhHGi9TcXThdqgr0zn8+ty59h6Ydw5O90+jhj3G8v5x5ov8vvzT8y+bvzAW2uFWx0q&#xA;OCUjTYlY0biGQzyvH6nPrRW9H/JWRfjGLPEIxcshjXmeeObzh5gkjPJBfulf8qNEjYfQykZ1vYwr&#xA;Tj3vH9tH9/8AAML89RXsumW0dmJfXecqrwoZCoa3lU1UdnrwrUU5VqKZl6sExFc7/QWjs4xEyZVV&#xA;dduo/t+DIYAVhjVlCsFAKjoDTp3zJHJwZc1C5u7pTJHYade6rcxKHlt7C3kuGjRiQHkKAhF2PXc9&#xA;gcxdRrceHaR3czS9n5M+8R6e9L7LzVYzRB7qN7EsrsnqlWV/TBLhHjLjkoU1Q0f/ACclj1MZC+X4&#xA;/HmubQzhIgeqvx1+/l5pwjpIiyRsHRwGR1NQQdwQRmQDbhkEGiknmTTfOMmjpr9vpV1D5fQOYtRS&#xA;UgScWKlmjgkV4o/gPGWYcPEbiumy9p4zMwBqvtd/puy5RgJSo30rl8wfkN0Jbeab22mjh1G1Ppyq&#xA;voslHkPwjdCpKXFev7uj/wDFffM6OoI+ofj9Pw38nAno4kEwPL8e+Px2/pMhs720vIBPayrNEajm&#xA;hqKjqD4EdwcyoyEhYcGeOUDUhRV8kwYnKrFZ7BrIX/DUne7jrSWKKcmWOeKhDfCG2ZTWoIHthnrG&#xA;r9W/x6uzHSXFw+jbuJGxBQaapdm3TVNM1Np7eOH1JLe4IaaKJXZSZogaSIrA1deL0H2n6ZWMhrij&#xA;Kx5/p/F+9tOGN8E40b5jkT5HofI2PKLL9PunurOKd4mgkcESRN1VlJVgD3FRs3cb5mwlYt1WWHDI&#xA;gG0Tk2DsVdirsVdirsVdirsVdiqyaaKGJ5pnEcUYLO7GgAG5JJwSkALKYxMjQ3JT7SPIXmfU9Ml1&#xA;i8YaBo0MbTmW4t5bi9kiRebMlmhRkqo+HkS//Ffjz+p7cAPDjF+Zei03YYq8p37h+v8AHveYaCtz&#xA;rOvaQ+nxyy3N5NLJMkKxyyiO8+qxRsEEfEmFElZ5eCqV29ShrlJyygTl4o3Xlz7q/S55wwlAYTGX&#xA;Dfny77/R9j0Dzp+X/nzyqkmqLLFrGlQp+/khQxLGFNTJND+9kjFOsiO6jqyqATlum7a4zUtj9n7H&#xA;Cz9ixA9H7f1H7D5pRpupQX9v6sYKOh4TQvTnG4AJVqV8agjYjcbHN/jyCQsPP5cRgaKG8w6i1lZI&#xA;qTLby3Ui28dxJTjFyBZpDXb4UViK7VpXIZ8nCOdXs2aXDxy5Xwi67/JkPkb8vfLln5b/AMVectSe&#xA;HQ7yWthbjkLq/Q1ETXEsRaedpQCYoYQCUpWtSo5bVdoT4jjxnbv6n3l6vT6KO0pj1Vy/hj7h+N0R&#xA;5p/OS+gs20HyxpR8v6U1uF0+WNUiuAhKS+pGiK8UcfpE1CBmXkDI0HXNfHF1Jv8AH4/a7IBIPJf5&#xA;a+avMzxahZ+rZW0jPLca1cvIqOZAULwsr+vPIUZg0iSVINPrUi/Dkp5BH8fj8dEksutdT8i+Ro5L&#xA;TyZAvmDzMiNBJrc3EWlsW+2qtGFiUcxyaG2XdvtsD8WZGm0OXUHug4Or1+PCPUfV3dWLW8TRRcXk&#xA;aaVmaSad6c5JZGLySNT9p3Ysfc52GHEMcBEcg8XnzHLMzPMquWtTsVZX5P8AMQ0H8tvO19ayJb61&#xA;b3MjWjupkMk81nClnSNQxasg4KtOqntXOP7UxSlqqq7p7LsycRponkBf3liesaa/mTyVqHnK6ib6&#xA;9p96LPWrqGExPdwqkRiv1iReIurWSUI7IBUI1Rsqi7Hkjp85xX+7P2H9jGcJZ8IyUBkHyPePdJj3&#xA;kyW7+pzW88bIkTVjqpVUJZkliUHoFljZlHZWUZ0GlJ4aI/H4+wvPdoRiJAg3+Nj8jXvBe4Wnmy48&#xA;q/lFoWrw2ovCkVukluS6lkYHlxMaSsGAFR8NP5uIqw4jLHiyyHmXs8Y9I9zGf8M/lp+YttNL5UuI&#xA;9I1eZDNdaJOiG3mBP941srGNlYja4tXKk7kv0zJwa3Lg2Pqh3Hk0ajRwyGztL+cObzbW/J3mHypr&#xA;MRu7eW0nZwERpax3QWh4QXjDhNsNo51EgHQoM32l1mPIbgal3Hn8+vx+BDpdVpZwiRMXH+cBy98e&#xA;cffHbvBTWw1azvS8cbGO5jFZrWUFJkrt8SHengw2PY5toZBL3ujyYZQ3PLv6LdR0m3vCstWgvIwR&#xA;BeRHjKnelf2lr1VqqfDGeMS3696cWYw25x6g8vx582P/AKSgku5vV0uSXXLe1e1u2txVQWNVXgWF&#xA;Ul+0rcTQHcjfMbjBO8fWBR/Hm5vhERFSAxmVi/xzHIhk9hC8NjbwyfbiiRHpuKqoBzLgKADr8kgZ&#xA;EjvV8kwdirsVdirsVdirsVdirsVZL+WXlu117zU9zfBJLDRAssNuxB9a9NGUla7rbIyuQR9p0PbO&#xA;b7c1ZFYx8XpexNKBE5TzOwe55zLv0LaaTpVncXFzaWcFtc3hU3c8UaI8pSvH1GUAvx5GlcJJVLvN&#xA;nnDQvK+nfXNVmo0lUtLOOjXFzIB/dwx1+JvHso3YgVOWYcMskuGIssZzEAZSNAPlk3kkXnqcW+mr&#xA;pkF4onGnW8hnjS3lZgQGKRf3E/RQKKjmnwhQOv0eOeIiEjZr7P2H7C81rp48+M5I7b/b/wAeH2gI&#xA;7zDT65pdenO4/wCoWXM7Nzj8fuLrtL9M/h/ug9g88eVtY8w/lh5Y0nRbYTSk2RZOSxxJCtm6lpCx&#xA;4CMVAIaKUHp6bduEhICRJe5CXJ5B8q+QdAh1XzZK/mC8jkjj0/TB/vMblqCNIoZWPqsgWvOZiEVa&#xA;oqKKZZj48sxGA3LDJlEImUtgGOeZfNfmXzTyi1WYWmlNsNFtGYQlfC4lor3Hyoqf5HfOl0fY0Me8&#xA;/VL7HmdX21KW2P0jv6/sSxERECIoVFFFUCgAHYAZuQKdISSbKBm17SYkLfWFkPqNCscVZHeVftIi&#xA;rUuVrvTp3ys5ojq3R00yeXS/h5pcdQvr++Sye4OllwWFtCEmuwvEsGmakkUANNhuT2bK+MyNXw/f&#xA;8egb/CjCPFXH5naPw5GX42TTRZ7ifTIHuGDzgMkkgAHJo2KFqDYcuNdstxEmItx88QJkDkikkgtp&#xA;5JLm0e/0y7RIdWsInMUskUb+pFLBIpQrPbvVo/iFasveowO0dHLIBOG2SPJ2HZmtjjJhP+7knaXP&#xA;k7y55N85/UfNsOs2vmGxa303RWQLqIvJIpIB60CUk9Rg8as3oKeKgsNqnm8ssubJHij6xzemwwx4&#xA;oek+jnz2H7GH+VdNnsNLKT8hLNLJMVkKlwHPw8yu3IqAW967nOv02MwjReO1uYZMljkAA9F062uP&#xA;Ov5US+UbKSAa7osqrLa3DBBJBHIz20ilo5lpJHxHJo2UOGHUchx+sxHDnN8i9jos4yYoyHd9ryS8&#xA;0TWdL1QWFxZ3Vrr6zpNAjFkcGvFpUo5csW4/v0uDts1ygPARBBHl+Px+hy2f+VvzjvzY3Ojed7Fd&#xA;d0eJEW7lmWP6yiOwjQSxyCJLjk1OIKpI3+6xP9vKpYusdighHax+VWh+YdNOteQdQTUrSEtx0ySV&#xA;kngkFC0dvctSaCQDrDP32JRdsz9P2pOFRyix39R7i63P2dGVmHpkf9KfeP0sC0LUtT9RbPVFo8vq&#xA;fVpG2lDQvwkguF4xhZk7gL4/y50umzGQF8jy/b5vN63TRgTw7GO0h+keX46pyLa3Fy1yI1Fw6LG8&#xA;tPiKKSVUn2LHMnhF31cHjNV0Q+rarb6ba+vKCxY8YowQCzULHdiFUKqlmYmgAJyOTIIiyzw4TklQ&#xA;UdD1eXUYpGljWJ1Ioil/skVB/eJE308cjiy8TPUYPDIrf8eRP3pnlzjuxV2KuxV2KuxV2KuxVl/5&#xA;KKP8SXTMF5CK+4mprzaSzEnX/ipLev0Zxfa9+NL4fc9t2ZX5eNfjcvac1LnPJPzL/MfX7TXrrRNE&#xA;uk0y206JG1HUjGkk3qyp6vCL1Q8SKkTKzMyNXl2pvuuzOzI5omcz6XV9odoHCRGIuZedT8Enn1LU&#xA;rmSe8AK3V/fSM8qqhPJGaQ/u1Vq/AOKr4DOm0+HFjhcK4e95vU582WfDO7vl+xi0k4HnTQbeO7+u&#xA;T+jfTTyCgpbzhXiBpXbkvw/7WUgVmiL4ieI/A8vg5nPTTJiIgcAHvHP4sg13RLbWLIW0zGNo3EsM&#xA;igEq4BANDsdmP8KGhzLzYRkFF1+m1MsUuIJtrf5r+dLTQLDQnuoNHhisngfVbQN60sluqJGokkXh&#xA;bmVWOwq1R8LDOdPY8YSJmdt6ekh2r4o/dx9Vi78+dd9K+vebJvN2owamWY6XZxCDSVao9QED1btg&#xA;f2pmHwV6IB0LNmZ2PofDjxy+qX3OB2zreKXhR5Dn7/2feg83bolC+gnns5oIJvQllQoswFSnIU5A&#xA;bbjtkZgkUNmeOQjIEiwwWJbiKy05dLpFdavbiflGP3qwsA0cKNXkiIhANFG+7OhPI68WAOHnIfgf&#xA;j5h3JIMpcfKBryvqfMn9gieSMtdK1azvbe5l/f6zMkhtoDxZECqsbyzyHpxEi7R/G3Qs/UTjjlEg&#xA;neX45/s38y1TzQnEgbYxzP20B8Ouw7ost06ySysYLRGLiBFTmerEDdjTux3OZkI8IAdXlyccjLvR&#xA;GTYNUFa036V70xVvFUDf31jY3NvcyXElnfJya1urcyLPGFpzYPECwTccq/D/ADZi6rFimKmHM0eX&#xA;NA3j+Pd+PtZhZfmJZatpsOn+e7GPXdJPGS212zT/AEiIjdZmjhowYdRLbEN/kDrnO6nsecPViPFH&#xA;8fN6LS9rQkeHJ6J/Z+z4pXrX5OLNBFrflC//AE/oErF3S3aNrtUc1m4UaKOZjT4qNG7H+99b7Oaw&#xA;Zekti7gFLvyflEX5p6XHDFJZAxyWtzAXYEvDZOWjkDfVjs681hZBw/ZtowPUyWX6fx+PxzSeSt+Z&#xA;2kWVr+a09xElJJryKTqaKZNNk5hVrxHNl5NtuevbN52MLxgnmJH7i872vIgkdDAf7sLM6F5pLNWt&#xA;dLvZ4La5LS3G5htIgZJXBILUiQO7D4aGg6EjMbUTxRHrNOZpIZjfhi/x3oDStf0q7j0uxtdNRbiC&#xA;W5pqFuk811delEqyKYEhUwp8fqzFyxMgr8IAGaLSShjzynKfp+O9vR67FkyacRjD1bbWPTXx+7om&#xA;q6zpTSRRrdRlp2KRb7F16pXpz/yevttnQxzQNURu8tLTZI3cSK5/ju80blrS7FXYq7FXYq7FXYqq&#xA;eW/Mf+G/N9pOoMr3TtJDbL9qaqJDdwJ4ySxrBJEv7UkKxjdxnNdt6f1CY6/oep7Dz8WMwP8AD+l9&#xA;H2d3bXlpBeWriW2uY1mglFaMkihlYV8Qc5oh3b52/Nq+0fS/Pev2+uyw20GpC3uYEuCoWe3a0jtm&#xA;4g/a/eW7qR/XOr7Hz4xgMZEcy892rpsss0ZYwTt077YnpH+I/Nd1a2/5faXNcrAr241aeL0dMt0Y&#xA;KjN6kqE80UfD6VHArxrUjHtDW4SAOdfL5dWzs/QZoEymeHi+Mvn0VNH8s6LpWt331K+Or3dn/oeo&#xA;6wwoLi7IV5vSUGghiXhHH8mNeLCl3ZUZTvLLmdmjtrKIiOKIoDf9H67T7Ny8+tkjSRGjkUOjghkY&#xA;VBB6gg4CLSCQbDaIqKEQBUUAKoFAAOgAxAQTe5bwq7FUjtfLtyltDYz3xOnW0awwwQIYHaNBxRZp&#xA;Q7M1F2+DjXv4ZjxwmgCfSPh8/wABzJ6oEmQj6zvZ338hX32q2OhyWWppLDNXTooZY4LZ6lomleNi&#xA;qsa1j/dbA/Z7bUAMMXDLb6a/UxyagThRHqJFnvq/t3+Kb5e4qD1LVtO0yATXs6woxogO7OfBFFWY&#xA;+wGV5MsYC5Gm3DgnlNQFofT/ADHpV9dNZpIYb1NzazDhIQRWqg7Nt4HIwzxka69zZl0k4R4iLj3j&#xA;kmmXOMknmxLOHS5dSmDCWzQ8JEmkgIWRlDBniKsUNASOu229Mx9QAI8R6fBy9EZGYgOUvIH7+v45&#xA;KPlCIpbzGF2lsXEfpTsvD1pgvGeZFJqEdgDv1bke9SNMNtuX4ss9cbIvaW+3cOg94+6mWeW/MUnl&#xA;HXF1uFCbCU8NctowSZYDQeuEX7UsFOQ2qV5L3FMDtbQDLDiiPWPtczsnXmEvDkfSeXkf2vStS85f&#xA;lnD58gk1SNbPVbOKNrLzE1I7aSO6hJET3MbUK8HqBP8ABWhX4qZy0cGQ4+ID0vT+LHi4L9Xc8n8/&#xA;6zHrf5r3baVwu9LspYjPqEbc4jItkYyiOvwNxaWhoxNQelN+g7FjLgArbiJ+ynSds8Ask+oxoD/O&#xA;v9CvpGmXGv8AmG18u2V3HZ3NwpmuLlypaO3Q0YxI325W3CDpsWOy0zO7S13gQ2+o/Y67svQDNLil&#xA;9A+3y/W900ryH5X0vQrrRbKzEdrfxPDfy8ibicSIUdpZv7xmIJ3rt2pnGTzSlLiJsvWxiIigKDzi&#xA;1/5x5ms/MVnd2fmCeLTbK4guk5JE1yxgGy7IkanZfjA7bqeuZk+0JSiQQN+fwaoaeESCL2uvK+bN&#xA;/PH5ZaF5nie5WNLHXQAYNViQcyU3RZwOPrR1/ZY1HVSp3yjTaueGVxLLNgjkjwyDwHT31PTdVuvL&#xA;msqU1CxZlUs3NiEpyQuQOfFXRlenxoynryzs9FqhliPx8Pg8n2jo/ClY/Hcfj9hB6Um2ZzrHYq7F&#xA;XYq7FXYqk2uadY3d/p7Xd3BZBRcJBPdsUtzKYvUWKVh8S+oISqMu6uVIBOx1naUjERlXELoj3u57&#xA;IAlxwvhNAg91f2pz5M/N250rVFvL+8nvoSRb3UMt0kUspSPiiv6wktriSNOPxxPHIQB6jPmlzdnw&#xA;n/dkD+jLYh3cNZOArJH/ADo7j9Yeg3/51eSL2KKS+8u310YH9SEXEWnuI5AAeSu9yUDDxVsxh2Tq&#xA;B0+1l/KWD+d9h/UxjWvzL83edYpdO8v231XSgCt0LGUsxQdRdagAkNrHT7SIS5H2SfsnIxaHFiIO&#xA;Q8UukYteTVZJj92OGPWUtq9w6sLstKm8veZdV0W5uo5lZ4mtzEvpxmZEaK4SLfdI3gaNNq8U33rm&#xA;27L1JycV7dw/Hk6vtnTCEYEb0DZ/X8T9qdZuHQuxV2KuxV2KtEhQSTQDck9AMVSN/OmgK70maS2i&#xA;YRzXiLyhR23Uchua/wAygr75jHV4+/bvc0dn5T03PTr+PtTuOSOWNZInDxuAyOpBUg7ggjqMyAQR&#xA;YcOUSDR5s1/KCxtLjzTqcs8SyvFp6RR8wGASeVvVWh/n9Na/LOZ9oJHiiHpuwR+7kfNKD5O/Ljz1&#xA;byN5IuItL1Bx9Yfy3fxmKB67rNFGKvANxSS35Iv8vLMTHqs2nqMxxQP42Ln5dPjzEyiamNrH3Hv+&#xA;LDL+080eWL4adqdrMWP93aXTL67KBubW6r6N0P8AJLBx+0a7ZvtLro5B6Tfkfq/a6LV9nmG8hw/0&#xA;h9PxHOP3Kpl03XLKW3SVhxZfVTeOaKRGDryRxVSGUEclofcZn3HIKddwzwyBr9RRGmWCWFhDZo5k&#xA;WEUDkKpO5PRQFHXoBkscOEU15cnHIy70Vk2tIx5duWuXSa9Z9KWWCW2s+ILL9XZXjiMjcv3SOtVV&#xA;QKD4a8dsw8ekESa+km6dhl15mASPWImN+Rv7aKdIiIoRFCqOiqKAfQMywKcAkncsR0trafU9U1G6&#xA;jlE82pfUrO6hrytxacUidJF+KI+tWhH7VMwBCMzLjF8UuH5bO2nOeMQGM1ww4veTuffs9n8s/nHq&#xA;mnpHZ+aLR9QhUBV1myVTLTpW4tRx38WhrX+Rc0er7EnE3j3H2u10vbGOYqfpl9j03y75o0HzHYm9&#xA;0a7W6gRzHKOLxyRyAAlJYpAkkbUINHUGmaTJjlA1IUXbRkJCwbCOvbuKztJrqWpjhUuwFK0HhUgf&#xA;jjjxmchEcyjJMQiZHo8J/M4WV15z07UBCBdz2twJ2XjxDWc/oxNszHk8dwyt/qjwGdP2RiMJEdKs&#xA;fIfref7VzceMHqDR92//ABKR50DzzsVdirsVdirsVR3kzRvL+qfmLpcPmC3hvLE2d4LO2uQHia8U&#xA;xSLyjb4X/wBHSZgGBA4165oO3jIQiRyeh7BMbmP4tv0s88q+R7LRvzT8x29jDFD5fudLtJm0rgPR&#xA;5TSyIgRCOPCNraY8f2fU2oKDOeyZjLHEHmCd3oBCiT3syHkPyOJvXHl3TBNWvqizt+VT35cK5R4k&#xA;u8sqSDzp5is7OzupROsen6fA78YwVPNYrmMooSWFiS8YRVp16Zs9Ni4I8RHq/bAj+E97rc8/Enwg&#xA;7fskD1Hc8LvL2PVtc0l4S6zWNpFJqiTD03a8l+uT3cgRvjKNc6i4DbqeNVJG53HZennAniFer7AC&#xA;P0uD2tqYSiOE2Kq+nOJ/3v2pvm8ecdiqU6j5n0jT3dJndzCQLgxRtIsXIVHquo4oadia+2UZNRCH&#xA;NysOjyZOQ58vP3d69PMugPbpcfXolhevFnbgaqASpDUIbf7J3wjUYyLBFIlo8olwmJtLLjzPc3c8&#xA;ltptu/FUbnKaJKtR8LkOCkKj7X774iOiHKpZyTUR+P0fH5N8dGIgGZ/V9m8v83b+knXk78s/NHmu&#xA;OIqTLpXLkb+8MhsNzUtGjES3ze9Vi8ONKZqdV2lDGKvjl9n7fudvg0EpHirwx/sv1R+/vt7B+Xvl&#xA;38utP1i4t9LuBrfmSwjC32rSL6vpGtDDFIq+hCQTvFGeQFOdTvmh1Ooy5TxTLuMOCGKNRFB5ddwx&#xA;Qatq8UShIk1TUVRF2CgXs1AB2A7DtnYdl/4vD3fpeR7W/wAYl8PuDLfygv4bfzndWcnwvf2HK3Ym&#xA;lWtpQXT5lZuQ9gc1PtBA+mXR2nYMxwyj1t5YskE6CWSJNKmgkq0CvObW1nBqUSWr3umyx9NzJGP5&#xA;olyyPiRxiwMuKviGyYxyynhJxZb+Ev0G2caX+Zd79VHl/wA66d/iLSpkEnp3Cwm/WLqs0TKfq97G&#xA;u3GWFww68nbMOfZ8cnr08t/5vVyI6yWM8OcV/SH0n9TtT/K/TNdtP055A1H9MW0JK/Unl9HUrU9T&#xA;FHPLxavT9zdgVHVjsMOHtOeM8OYHbr/EP1oy9nwmLxEC+nOJ+HT3hgF3qHmfT7t1m5StaDhd20sL&#xA;RSp1NbiAL60TH/fiB0PXgBvm7x6kyHFE8Q/HMcx79x5OmyaOETwyHBL8cjyPuNHzTbSvMWn6hwQN&#xA;6Ny6lkhcqeajYtE6kpIvup270OZePNGXv/HzcDNpZQ35j8c+74pplzjuxVg9te3/AJX1fVHvomfy&#xA;3d3xka/Ucha3FyBIolpUrHLuFY/tK1K0OamOpGHNKEuRN/N389H+Z08MkPrjHhrvr9LJo5dVu9KW&#xA;WCSBLtviRwC8DgGtAa14sPh5/SB0zPhKcoXsD9n4LqskMcMlbmPyP4D0D8mZpI/PWq26GkVxpkUs&#xA;yj9p4Z2VCfkJWGc/7QRFxLvewpHw5Dzej+adZ9KOaxQqtYyZ2ZoweLxSsvD99CwNYvuzW6LT2RPz&#xA;2594/onvc3WZ6Bj5b8u4/wBIdzyXz/eWd15ms4bWQs9hbXX1wBuaB7u6rGn2pAGVbYsQG6MPbN72&#xA;VGXHInkAPtA8g6jtOURiAHOUifkT5nvSTN46J2KuxV2KuxV2KoXUrFb20aGoD/aiZlDqGHTkp2ZT&#xA;0ZTsykg7HKdRgGWBiXI0upOHIJjozDyr+ZMdjrGkrc2t5cXMemCwv/U3c+hOzL6Dhf8AS3jiJYKD&#xA;zdKmnqfAeM1OhyY74hQvn0e1warHmHoPw6vY01qwudGbV9Omjv7MwtPBLA4dJFAJ+F15eGYUMfFM&#xA;RO1lsyS4Yk9zxLz9r51TVpdFtHJ0+zuDLqjqeSS3MU0skNuGrRhEZQ8m2zhV+0rAdL2bpvEImfpj&#xA;y99AfZToO0NR4UDEfXP7BZP22x9LeCOWSVI1SWYgzSKoDOVHEFiNzQbb50AA5vPGRIAJ2CphQlXm&#xA;PU/qVkirMttLdSLAlw5FIg1S8prt8CAkV2rSu2UZ8nCOdXs5Wkw8cuV8Iuu/yTBDF+X+kaLrf6Ot&#xA;bnWdRhmv9Mt9RLGG0tInjCNxJjP1y7a4UtK5/d9PHlzWSf5mUgDw44D5/wBr1OOHgCNjiyTIBP46&#xA;AdGa/nP5Vl8yeavLseh2jXV9dWdzLdyW8kcKtDG8At3muD8SIvrS8Wj+Pcha9MxOz9SMXEZXXd5t&#xA;2r05yRHDV3zPd7uvTY7LW/L/AMnfl7oEeuebozqzROq2+l2sQWwjmIMgqshSNvsGs104Su9FY459&#xA;fkzekemPcE6fRwxm/qn/ADjz/Z8GM+ZvzD8yeZ0uLPUZJtF06WEGx0TTgTcyhmQhrgP6EnpNGWo0&#xA;pgirSiXC5HT6SUzUBxH8fj9Tdm1GPELmaTn8g0u18z35tbaJNEjsXimuIk9ULcJOhjha9ZUDFUaS&#xA;sUKxxp/vte8+0MEcQA4uKfXyadNqZZbPCYx6X1Y893De3uo30BDW15f31zbSDcPDNdyyROPZ0YNn&#xA;UdmxMcEAe55XtSQOolXl9wWOknqQzwTSW13bSCa1uoTxkikXoykgjoSCCCGBIIIJGZGfBHLHhlyc&#xA;bTameGfFHmnVxr+g686jztZtZamoEcPnDSF4SBR9lbuCklVHuskfU0TOdyaHPpTxYjcfx0ekxa7B&#xA;qhwZBR7j+gpNrvknXND0/wCtw/V9Y8rXB+spqVijXGntUVM8ttG/q2klF3uLaT/WkA+HBDU4cx9X&#xA;7rL3hslhzYRUf3mP+aefwPVJrC6ura9g1DSruW11KgW1kSeNbhxWoS3vCEtr5CekFwqOeyynfMnM&#xA;TVaiPFHpMNGGIJJ08uGXWEv1dPgzaPz95d8ywrYfmDp3+k2ZaFPMdhHJBc2kndbmCn1i2buw+KM9&#xA;WVV2zAlocmP95glxR8nKjq4T/d5o8Mu48j7ix/zp+Ut3ZabJr2lzx65oEifWRq1iEduC7iW5tkIj&#xA;l4gf39uwcdaIBXL8HacZ+nIOGXf+sfp5teTQSjvjNjuPT3S/QbDGvL2tahFdR6fqasvrKpgMjCRl&#xA;LqXQeopIdHCMFNSQy8SWqpO8wZZXUnSarTwIModOfT37dCPuN7bsqzMdYlUPma60fzlGBaR32l3F&#xA;mbbVdOuApgvElkqIH5goGUKSjNsGYL+2c0faeEZZiANTrb9T0XZOQ4sJmd4cXy25/j9DLNM/J3yP&#xA;5gD3v5ceaLry5IW53mhzIt3HAehDWc7JLGS1fi5lT+ztTNNHW59OeEu4yafDqBxECXn+0Mu8ieWr&#xA;fyO+oajqesx6/rFyot5DBHDaJbxW4mkMaq8rEl5EbkeXYbCmTznNqiOIcI6bHrXcPNxsZwaaJEN9&#xA;99x59/uQ/nDzxY6Pc3UBka61MB2Fgs0gCI7XID3E0dzIsCKsit8S1I+wv8tuDGZgCAHvoUPp53Ad&#xA;x6/tqyek8WQkDu3s/VsKke8dP2cs8vX+o6lHfalqT+teXt5NNJOV4FwxHAlN+NFoAv7IAXtm+7Oi&#xA;I4qHKy6btaRObfY0Nu5Nsz3WOxV2KuxV2KuxV2Kqc8EM8ZjlUOhIND2KmoII3BBFQR0yE4CQoiwz&#xA;x5JQkJRNEMOsfzg8zmwXyst1qMdw8UdxqFytxbokkcqJJJJyS1jvDK0b/aa6NW61G2cnDQg5aPLn&#xA;8Ob3OXUgYjMc9wPfuGYwQQW8KQwRrFDGAscaAKqgdgBnWxiAKHJ4WczI2TZKpkmLsVYt56glMVpd&#xA;l5UsofVjvTCpdvSlUBth0BVStaGhI6dRr+0Iy4bHQF23ZE48fDIczGvgfwfh8HsP5maG+rata+Zb&#xA;3X7TTvJNrYRixuYT69w8kzM0gtIeJjeSdBGqN8fQBUNTnLaPVnCDwj94evc9LqdKM1CR9I6d6eeX&#xA;rjRvJOhLq/mWb9FvcwW9jpenTEzXUVhZR8LW0CR83mnozSS+mD8TEbqoOY3DLJKoiy5EpCIsmg8n&#xA;1nWfMHmzzMfqy3t7fF2l020pFJewREniY4kP1SwUAhTO7NKT/u1K8c3ENDjwx4sxr+iOZdbLXTyn&#xA;hwD/ADjy/ayvS/yz8raAltN+YWrWlkL6X9zoiXBSKWRzu1zcPxmuW3HM/Cn83Ib5j5+0pzHBiHDD&#xA;ybMPZ8Yy45njn3n9AV/zJ8x6iNTufJelmPSvL9nbwLNFZqI3mSdC3pB1oIouOxWMVP8ANTbLeydB&#xA;DNc5700dqa+WAARG8uvcxBVVFCqAqqKKo2AA7DOsAp5Im9y3hQsinhmXnDIsi1pyQhhUdqjACDyT&#xA;KJHNEaPqOs6BdPd+X7w2Mkh5T2xHqWk7eMsFVFT/ADoVf/KzX6vszFm35S73ZaTtXJi2Pqj3H9BR&#xA;80PkbzRI6XCJ5M8x3ZpICFm0a/kcivNT6aB3J7+nISf92ZpSNTo9j6sfzDvInT6sWNpj4SH4+LHv&#xA;MXl7zB5cuIbbX7JkWOkNjd+s3p8R9mOy1PizIK/ZtruNk/ljH2suwTx5DxYZeHk7uhYZRkgOHNHx&#xA;cfeOY94/SGSfk0b+LzylvY3IFhNFPJqlm7LaSt8I4STWDO8bv6lB69szqf2iteOYvaUrj64cOTv6&#xA;Fv0MQN4T4sfd3fjuYTruhJpvnuaxs2DwQ3d7FbQzAelBbQXUMiRxIBRfTQlUPX6Om27PuUIEmzXX&#xA;yIdZ2jIRlMVQ25dTKMuaf5uXn0x8i2WmS+Z5zqUMd1YXckWlahbTJzj9DUomaFmDCnxXWnRxqfFs&#xA;5Ttqxlsd1/J6/sUg6eu4llmr/kFZzTJdaFrL24SrW0d9F9d9Ko2EFwklvcIPdpHOYse1Z1WQCfvb&#xA;zoIA3AmB/on9HJB/8qZ8/TPJBc+ai1k/EcZLjVLhKDbe3kulj6E7Bsfz+EbjEL95T+WyHY5JfKP6&#xA;mFRflprtx5/u/Kug3VvJH5fSGa+mngiis1nliSaOlrxuA4YSrRZOe6s1VoOV+TX8WP1bRP8ADHZj&#xA;j0YjOxvL+dL1FRtE1qC91ay1xUGs2moXIv5IiDFJNO/1lpI+lEb16gED5Dpm97KyRlgHDyGzz/bO&#xA;Mxzkn+IA/o/Qis2LqnYq7FXYq7FXYq7FWiQBU7AdTirALXyzaxyW2qq/K4mW20hoKDrbXKxzPyNd&#xA;/Stz2zWxwAVLrtH5Hf7A7uerkQYdBxTv+tGx9snoGbJ0jsVdirsVYjrFrpWn6/Y8LeK2WaM8CkYV&#xA;fU+tW7MaqKDau58ffNTroQgDQAuJ6e53vZuTJkq5E1MdelSfQ/5keRtP1rUrHXNV1pdG0fS7eaO+&#xA;koiSMsrow43Ep4RD4KMeJPhQ75y+k1k8NiHOT0GfTQy1xbgMNk8+6fpVi2j/AJdaYml2BNZdbuoy&#xA;Zpm6GSOKWssrkf7tuDX/ACGGbPTdk5cx48pofa6/Vdq4sI4Yeo+XIfjyYdeabb3/ANYbUi+oXF2A&#xA;Lq6umMk0lDUVc7qFO6haBf2QM6HFo8UI8IGzz2XX5pzEjLccu4KOl6VJYPMWvJruNljjt1nIZooo&#xA;lKpErAAlVrRa9BQdsdNpY4b4eRTq9bLOI8Q3j9qYZlOEgtaWZtHv1hr6xt5RHTryKGlPpyvLfCa7&#xA;m3AR4kb5WGKXF7Y2d7EbdlsU+rQvHd2oAJ5J8CSRDlHKG6KGCN/JXrmHKQidtthuPxv9nk7OOOUo&#xA;m/V6jsfvB5jzqx/OTO28z3hltzOsD2chMTXUPMq0nYAfE0cldvSkUb9HJ2y2Oc2Lqvx9vkfm489J&#xA;GjV8Xca/BH9IfJP45LS+s1kTjPa3KBlqKq6OKjY9iDmSKkO8FwiJQl3SCa6L5l13Q7ZrCH09W0CQ&#xA;cJ9B1H95CYz9pIZGDtGP8hgydgo65ptX2NCfqx+mTutJ21KO2T1Dv6/tZR+XWleQbvzbaapoF7ca&#xA;Vd2scxk8p3vElDInBntmYsTGob/dbug2A49M0ernnhDwsvLo7vTxwyPiY6351+kd7zXW7+LUfzS1&#xA;lbUF4NPutRSe4BBT1HmjT09jUEGNuvhm97JJMIiuQP2l0/a8REyJO8jHb3Apnm6efQ13a3EiSm1u&#xA;5rOWUR8mhagZ7eT1rZnUghvRm+NPfMPU6KGbeXMAudo+0MmDaP0k3+Pe9Z/JvzZFfaY2jShYZoPU&#xA;nsbev2IOdJrYV3/0SZvTX/ipom/bzidTiMJEHmHtITE4iQ5F6BqN21pZS3Cp6jRrVY/i+L2+BXb7&#xA;lyvFDjkB+P0Mcs+GJP4/S8xfzSnlp/NnmmW0aa7kurHTJH9Nl5mGD1g8vFIz8MVzxX4AWPFFqzLX&#xA;Jy4rmIx/H2n70YZXC5Hv/HIPOhPd3dxdalegLfalPJd3SA8gjynaMHusSBY1PgudlotP4OIR69Xj&#xA;NfqfGymQ5ch7vxuvzLcN2KuxV2KuxV2KuxVZNEk0LwyCscilHHiGFDgIsUmMiDYYpDo17Z29qbi8&#xA;MMnqhLeERhz9adfQadWDdGiDycabciT4ZhjEYgWf7eV/Ld2Us8Zk0L23/q86+dD4Bl2ZrrHYq7FX&#xA;YqhNS0qx1KD0buPkFPKORSUkRunJHWjKflleXFGYqTdgzzxS4ondF382parPDca3qFxq09vT6u10&#xA;U4RkVHJIYkihV6GhcJyPc5i6bs7DhNxG/m5Wp7TzZhRNDuDsznXuxV2KuxV2KsW1ny9Db27ShPX0&#xA;2EMXgAInt42P7w20i7lANzCwII2H8uYeXCAL/h+0e79TscGpMjXKZ69CenEO/wDpD9qXSaStrDq7&#xA;/WoLmA6W7RPEURwqqDCzIvT7FVYHj/KF3rWcdCW4Pp/s/H3OQM3EYbEHj/t/aOfffSXaTZm0sVhJ&#xA;qS8kpFOPH1pGl4AVOy8+OZmOPCKdXmnxSv3fYKRmWNSjcWltcqqzxrIEYOhYbqw6Mp6qR4jITxxm&#xA;KkLDZjyzgbiSC3a2ttawrBbRJDCn2Y0AVR9AwxiIigKDGeSUzcjZVckxdiqnFqmoaDNcapp8jRck&#xA;5XXphDKvp0IntzIrqsyqvAgjjInwN+yy6jtPs8ZRxj6h9ruuyu0TjIxy+knbyv8AQzPzF+bunXWj&#xA;ae31Vr2eZESFykMCS3EsTRsy+p9bj4cyD+5klKrWtaZotFCpVH6z765juIPf0d7rMdi5VwR38+R6&#xA;Ee5hDQXNzdS3l/OZJri4N5JaxEx2aXBXgHjtweIKRgIrGrU6mtTnS6fQQxkSPqn3l5nU9pTyAwj6&#xA;cfcERme652KuxV2KuxV2KuxV2KuxVDyWMMt5DdyFme3BEKE/ArMCGcL/ADcTxqe3TqciYAm+5mMh&#xA;ETEdURkmDsVdirsVdirsVdirsVdirsVdirsVSK08o6ZFdTvcQxXUHNHsYpo1c24WpKoWB25MePgK&#xA;DtmPHTxBN7jp5OZPWzIFEg9aPNPcyHDdirsVdirsVdiqW+ZKDy/qJYVQW8hkFaVQKS4/4GuVZ/oP&#xA;ucjS/wB7H3h5fo2lzw+eNe9QN6VrcRiAE0Ae4v4WgP0jfNRix1mn5H75Cno9RnEtNjrqD9kDb2LN&#xA;48o7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVsjOsbMi83AJVK0qQNhU9K4Ckc&#xA;3Rs7RqzrwcgFkrWhI3FR1piFPNdhQ7FXYq7FXYq7FXYq7FVG8tkurSe2f7E8bxt8nUqf15GUbBDK&#xA;E+GQPcWKX86PpOnSwhLfVNSeEXU4QF/Wt14IX2PL07ngm/jmHM+kVtKVfMftp2eOJE5A7whdDyP6&#xA;42WY5nOqdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqGkl1Aerwt0bjIiw1lI5Rtx5u3&#xA;wHiVq1F3rTtXIEy7mwRjtZ+z9qWTnzVNPE8caWsShRLGk6OCS0RY1eAnZfUXY7099qj4hPd8fd5e&#xA;9yI+CAbN/D3/ANL3JNJ5Z1yadpZ4o3eSjSsZIalysYY7W4NfhP8AtZQcEybP6P1OWNXjAoE/I+f9&#xA;J0flnXIZ1lgijR46tEwkhqHCyBTvbk1+If7WIwTBsfo/Up1eMiiT8j5f0k5gPmqGeV5I0uomDCKN&#xA;50QAhpSpqkAO6+mu52r7b3jxAe/4+/y9ziS8EgUa+Hu/pe9M45dQPpc7dF5SOs1JSeMa8uDr8A5F&#xA;qLVdqV70y0GXc45jHej9n7UTk2t2KuxV2KuxV2KuxVi1xpap5rSWGxkaONVuI3q3otLLIRMeXxJH&#xA;wH7wrSrtQ9swzj/ebDz/AF/r83YxzXgoy8vOgNvM3yvoPeynMx1zsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqyaaKCF5pW4xRKXkahNFUVJoN+mQnMRiSejPHAzkIjmTSCl12zghaW7jmsOMUk/C89&#xA;GFmEIUsqfvWVnPOgUNWoPhmIdaIj1Dh5/o/W58ezjM1CQluB87+6nTazBG9wiW9xK9sFL8FjUMGX&#xA;kfTaSRA3AFefhyHXsJa8b0L4fx9iY9mS9JkaEr/Z891P/EenC4mtnWZbiBS0kI9FnHFEcrxWVmBP&#xA;qhVLAITtyyJ7QEZESHJlHsqUoiUZAg/dfNV/S4NxDALK6DTEqSwgAjK/a5/vj2+L4eWx8dhZHVky&#xA;EeHma593NrloYiBlxigL5He+X27N32rR2c3pyW07qIZLhpo/SKBIqcvtSK1fiH7OTzZzA1w2KJ59&#xA;zVp9LHJG+KjxCNUevL9LUWswSGER2883rAtytzb3CRqCFrI8UzruW+yvJtm223phruKqj9vRvydm&#xA;8F3IDpuDufx1U7jzJo9uoZ5w6/AZDE0cnpB34VmCuTHxoS1egFcB7Shtt+xmOyMhv7PNUGt2bAMs&#xA;Vw0ZFTOEj9JT8RCsfU5VPHspG6777I7QBF1sg9lSBriHF3eW1n7V8urWsTRqY5n9RUdmjVCsSSNx&#xA;VpeToQCf5Q3Q/TbPWCNbdAT5AtOPQGV7iwSB5kboY+ZtKUFpPUihXiWnf0igSTlwcrHI8qq5Si8k&#xA;B+JdutKx2hHmRt+j3Np7KndAji+PPqL/AByKZRSepEknBo+ahvTcAOtRWjAFhUd6HM6JsAnZ1s4g&#xA;SIBtfkmLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVWyRpJG0bqGRwVZT0IOxBw&#xA;EAiimMiDY5oKPRNOSN0COwkjeF2kllkYxyKqleTszU4xqBvsBtTKI6bHEUB+D/Y5M9blkQSeRB6c&#xA;xf6y6PQtJjkaVLcLK4kDygsHYStzcM9eTAsOhO3bH8rj7lOuzfzu77G5NG0+SWSWRXYyks6mWXhy&#xA;ZBGXVOXBW4KByUVxOlxkkkc1jrcsQADsPd0VYdPtYfTKh2aIsyvJJJI5L7MWd2ZnJ8WJyUcEI1Q5&#xA;fpYT1OSV2edfZyXXFlbXNfWTlyjkhO5H7uWnMbEdeI3ycsYlz7q+bCGWUOR6g/EclB9HspGiaQzO&#xA;8QKq7XE5YoSGKMS9XSqA8WqNumUnSY9tuXvbxrsoujz8h+rn581Q6ZZM0ZaMkxAKlWYiimoqK7/T&#xA;kvy2Pbbkx/OZaIv6uajFoGlwpFHFEyRQoI44VllEfEAhaoG4kqGIViKjtkfyeLuZntDMb9XP3fjo&#xA;5NC09FjUm4kWIgqJbq5lqFIKq3qSNyRSoIVqqDuBiNJjFbcvep1+Y3vz8h+rn5816aRYJ6gCuwlC&#xA;qQ8sjgKhLKicmPBQT9laDCNLjAIrmxlrcpIJPL3e74/FG5kOK7FXYq7FXYq7FXYq7FXYq7FXYqnn&#xA;/Oj/APaz/wCnfMH/AAr/AGv/AGTm/wCDf0/9i7/nR/8AtZ/9O+P+Ff7X/sl/wb+n/sXf86P/ANrP&#xA;/p3x/wAK/wBr/wBkv+Df0/8AYu/50f8A7Wf/AE74/wCFf7X/ALJf8G/p/wCxd/zo/wD2s/8Ap3x/&#xA;wr/a/wDZL/g39P8A2Lv+dH/7Wf8A074/4V/tf+yX/Bv6f+xd/wA6P/2s/wDp3x/wr/a/9kv+Df0/&#xA;9i7/AJ0f/tZ/9O+P+Ff7X/sl/wAG/p/7F3/Oj/8Aaz/6d8f8K/2v/ZL/AIN/T/2Lv+dH/wC1n/07&#xA;4/4V/tf+yX/Bv6f+xd/zo/8A2s/+nfH/AAr/AGv/AGS/4N/T/wBi7/nR/wDtZ/8ATvj/AIV/tf8A&#xA;sl/wb+n/ALF3/Oj/APaz/wCnfH/Cv9r/ANkv+Df0/wDYu/50f/tZ/wDTvj/hX+1/7Jf8G/p/7F3/&#xA;ADo//az/AOnfH/Cv9r/2S/4N/T/2Lv8AnR/+1n/074/4V/tf+yX/AAb+n/sXf86P/wBrP/p3x/wr&#xA;/a/9kv8Ag39P/Yu/50f/ALWf/Tvj/hX+1/7Jf8G/p/7F3/Oj/wDaz/6d8f8ACv8Aa/8AZL/g39P/&#xA;AGLv+dH/AO1n/wBO+P8AhX+1/wCyX/Bv6f8AsXf86P8A9rP/AKd8f8K/2v8A2S/4N/T/ANi7/nR/&#xA;+1n/ANO+P+Ff7X/sl/wb+n/sXf8AOj/9rP8A6d8f8K/2v/ZL/g39P/Yu/wCdH/7Wf/Tvj/hX+1/7&#xA;Jf8ABv6f+xd/zo//AGs/+nfH/Cv9r/2S/wCDf0/9i7/nR/8AtZ/9O+P+Ff7X/sl/wb+n/sXf86P/&#xA;ANrP/p3x/wAK/wBr/wBkv+Df0/8AYu/50f8A7Wf/AE74/wCFf7X/ALJf8G/p/wCxd/zo/wD2s/8A&#xA;p3x/wr/a/wDZL/g39P8A2Lv+dH/7Wf8A074/4V/tf+yX/Bv6f+xd/wA6P/2s/wDp3x/wr/a/9kv+&#xA;Df0/9i7/AJ0f/tZ/9O+P+Ff7X/sl/wAG/p/7F//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:5d12ee5e-1b97-7e49-b5da-dbf27bc01f9e</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:5d12ee5e-1b97-7e49-b5da-dbf27bc01f9e</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:fc151bf0-0bab-fa4c-804f-bccf7a645ba6</stRef:instanceID>
            <stRef:documentID>xmp.did:fc151bf0-0bab-fa4c-804f-bccf7a645ba6</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:efe381d2-b714-6549-b167-3758e45082f6</stEvt:instanceID>
                  <stEvt:when>2019-08-09T10:00:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5d12ee5e-1b97-7e49-b5da-dbf27bc01f9e</stEvt:instanceID>
                  <stEvt:when>2020-01-27T18:28:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>660.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
660 400 li
660 0 li
cp
clp
660 400 mo
1.3746e-006 400 li
1.3746e-006 5.09317e-010 li
660 5.09317e-010 li
660 400 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.638849 .295933 0 0 cmyk
f
226.385 373.848 mo
225.55 372.978 225.104 371.787 225.043 370.274 cv
225.031 369.95 225.025 369.423 225.025 368.69 cv
225.025 367.946 225.031 367.407 225.043 367.07 cv
225.104 365.559 225.55 364.368 226.385 363.498 cv
227.218 362.628 228.434 362.192 230.029 362.192 cv
231.098 362.192 232.003 362.382 232.747 362.76 cv
233.491 363.138 234.053 363.633 234.431 364.245 cv
234.809 364.856 235.016 365.511 235.052 366.207 cv
235.052 366.314 235.013 366.401 234.935 366.468 cv
234.856 366.534 234.764 366.566 234.655 366.566 cv
233.755 366.566 li
233.635 366.566 233.539 366.537 233.468 366.477 cv
233.396 366.417 233.342 366.314 233.306 366.171 cv
233.102 365.247 232.732 364.599 232.198 364.227 cv
231.664 363.854 230.941 363.669 230.029 363.669 cv
227.941 363.669 226.855 364.833 226.771 367.161 cv
226.759 367.484 226.753 367.982 226.753 368.654 cv
226.753 369.327 226.759 369.837 226.771 370.185 cv
226.855 372.501 227.941 373.658 230.029 373.658 cv
230.93 373.658 231.649 373.473 232.189 373.101 cv
232.729 372.729 233.102 372.087 233.306 371.175 cv
233.342 371.03 233.396 370.929 233.468 370.869 cv
233.539 370.809 233.635 370.778 233.755 370.778 cv
234.655 370.778 li
234.764 370.778 234.856 370.812 234.935 370.878 cv
235.013 370.943 235.052 371.03 235.052 371.139 cv
235.016 371.835 234.809 372.488 234.431 373.101 cv
234.053 373.713 233.491 374.208 232.747 374.586 cv
232.003 374.964 231.098 375.152 230.029 375.152 cv
228.434 375.152 227.218 374.718 226.385 373.848 cv
cp
0 0 0 0 cmyk
f
238.058 374.855 mo
237.985 374.777 237.949 374.679 237.949 374.559 cv
237.949 362.805 li
237.949 362.673 237.985 362.567 238.058 362.489 cv
238.129 362.412 238.226 362.373 238.346 362.373 cv
239.209 362.373 li
239.341 362.373 239.446 362.412 239.524 362.489 cv
239.603 362.567 239.642 362.673 239.642 362.805 cv
239.642 367.809 li
245.905 367.809 li
245.905 362.805 li
245.905 362.673 245.944 362.567 246.022 362.489 cv
246.101 362.412 246.199 362.373 246.319 362.373 cv
247.184 362.373 li
247.315 362.373 247.42 362.412 247.498 362.489 cv
247.576 362.567 247.615 362.673 247.615 362.805 cv
247.615 374.559 li
247.615 374.679 247.573 374.777 247.489 374.855 cv
247.405 374.934 247.303 374.973 247.184 374.973 cv
246.319 374.973 li
246.199 374.973 246.101 374.934 246.022 374.855 cv
245.944 374.777 245.905 374.679 245.905 374.559 cv
245.905 369.375 li
239.642 369.375 li
239.642 374.559 li
239.642 374.679 239.599 374.777 239.516 374.855 cv
239.431 374.934 239.329 374.973 239.209 374.973 cv
238.346 374.973 li
238.226 374.973 238.129 374.934 238.058 374.855 cv
cp
f
253.177 370.581 mo
258.108 370.581 li
255.643 364.119 li
253.177 370.581 li
cp
250.099 374.864 mo
250.027 374.793 249.991 374.709 249.991 374.612 cv
250.027 374.415 li
254.491 362.769 li
254.587 362.505 254.779 362.373 255.066 362.373 cv
256.219 362.373 li
256.507 362.373 256.698 362.505 256.795 362.769 cv
261.259 374.415 li
261.295 374.612 li
261.295 374.709 261.256 374.793 261.178 374.864 cv
261.1 374.937 261.013 374.973 260.917 374.973 cv
260.071 374.973 li
259.951 374.973 259.852 374.939 259.773 374.874 cv
259.695 374.808 259.645 374.738 259.621 374.667 cv
258.613 372.074 li
252.655 372.074 li
251.665 374.667 li
251.568 374.871 251.419 374.973 251.215 374.973 cv
250.351 374.973 li
250.255 374.973 250.171 374.937 250.099 374.864 cv
cp
f
265.228 374.855 mo
265.149 374.777 265.11 374.679 265.11 374.559 cv
265.11 363.921 li
261.637 363.921 li
261.517 363.921 261.417 363.882 261.34 363.804 cv
261.262 363.726 261.223 363.627 261.223 363.507 cv
261.223 362.805 li
261.223 362.673 261.262 362.567 261.34 362.489 cv
261.417 362.412 261.517 362.373 261.637 362.373 cv
270.276 362.373 li
270.408 362.373 270.511 362.412 270.582 362.489 cv
270.654 362.567 270.69 362.673 270.69 362.805 cv
270.69 363.507 li
270.69 363.627 270.651 363.726 270.573 363.804 cv
270.495 363.882 270.396 363.921 270.276 363.921 cv
266.82 363.921 li
266.82 374.559 li
266.82 374.679 266.778 374.777 266.694 374.855 cv
266.61 374.934 266.508 374.973 266.389 374.973 cv
265.524 374.973 li
265.404 374.973 265.306 374.934 265.228 374.855 cv
cp
f
278.412 373.551 mo
279.181 373.551 279.783 373.344 280.222 372.93 cv
280.659 372.516 280.878 371.984 280.878 371.337 cv
280.878 370.677 280.659 370.143 280.222 369.734 cv
279.783 369.327 279.181 369.123 278.412 369.123 cv
274.885 369.123 li
274.885 373.551 li
278.412 373.551 li
cp
278.232 367.719 mo
279.013 367.719 279.606 367.542 280.015 367.188 cv
280.422 366.834 280.626 366.339 280.626 365.703 cv
280.626 365.079 280.426 364.604 280.023 364.28 cv
279.621 363.957 279.024 363.795 278.232 363.795 cv
274.885 363.795 li
274.885 367.719 li
278.232 367.719 li
cp
273.301 374.855 mo
273.229 374.777 273.192 374.679 273.192 374.559 cv
273.192 362.805 li
273.192 362.673 273.229 362.567 273.301 362.489 cv
273.372 362.412 273.469 362.373 273.589 362.373 cv
278.502 362.373 li
279.774 362.373 280.734 362.679 281.383 363.291 cv
282.03 363.902 282.354 364.701 282.354 365.685 cv
282.354 366.356 282.198 366.918 281.887 367.367 cv
281.574 367.817 281.208 368.145 280.788 368.349 cv
281.305 368.601 281.736 368.991 282.084 369.519 cv
282.433 370.047 282.606 370.652 282.606 371.337 cv
282.606 372.009 282.453 372.621 282.147 373.173 cv
281.842 373.725 281.389 374.163 280.788 374.486 cv
280.188 374.811 279.475 374.973 278.646 374.973 cv
273.589 374.973 li
273.469 374.973 273.372 374.934 273.301 374.855 cv
cp
f
292.452 372.786 mo
293.028 372.204 293.341 371.313 293.389 370.112 cv
293.412 369.393 293.425 368.913 293.425 368.673 cv
293.425 368.409 293.412 367.929 293.389 367.232 cv
293.341 366.033 293.028 365.139 292.452 364.551 cv
291.876 363.963 291.108 363.669 290.148 363.669 cv
289.188 363.669 288.417 363.963 287.836 364.551 cv
287.253 365.139 286.944 366.033 286.908 367.232 cv
286.896 367.581 286.891 368.061 286.891 368.673 cv
286.891 369.272 286.896 369.753 286.908 370.112 cv
286.944 371.313 287.25 372.204 287.826 372.786 cv
288.402 373.368 289.177 373.658 290.148 373.658 cv
291.108 373.658 291.876 373.368 292.452 372.786 cv
cp
286.53 373.92 mo
285.679 373.098 285.229 371.858 285.181 370.203 cv
285.168 369.843 285.162 369.333 285.162 368.673 cv
285.162 368.013 285.168 367.509 285.181 367.161 cv
285.229 365.529 285.693 364.293 286.575 363.453 cv
287.457 362.613 288.648 362.192 290.148 362.192 cv
291.648 362.192 292.836 362.613 293.713 363.453 cv
294.588 364.293 295.051 365.529 295.099 367.161 cv
295.122 367.856 295.135 368.36 295.135 368.673 cv
295.135 368.973 295.122 369.482 295.099 370.203 cv
295.051 371.858 294.604 373.098 293.758 373.92 cv
292.911 374.742 291.708 375.152 290.148 375.152 cv
288.588 375.152 287.383 374.742 286.53 373.92 cv
cp
f
300.85 374.855 mo
300.771 374.777 300.732 374.679 300.732 374.559 cv
300.732 363.921 li
297.259 363.921 li
297.139 363.921 297.039 363.882 296.962 363.804 cv
296.884 363.726 296.845 363.627 296.845 363.507 cv
296.845 362.805 li
296.845 362.673 296.884 362.567 296.962 362.489 cv
297.039 362.412 297.139 362.373 297.259 362.373 cv
305.898 362.373 li
306.03 362.373 306.133 362.412 306.204 362.489 cv
306.276 362.567 306.313 362.673 306.313 362.805 cv
306.313 363.507 li
306.313 363.627 306.273 363.726 306.195 363.804 cv
306.117 363.882 306.019 363.921 305.898 363.921 cv
302.442 363.921 li
302.442 374.559 li
302.442 374.679 302.4 374.777 302.316 374.855 cv
302.232 374.934 302.13 374.973 302.011 374.973 cv
301.146 374.973 li
301.026 374.973 300.928 374.934 300.85 374.855 cv
cp
f
320.54 374.855 mo
320.462 374.777 320.423 374.679 320.423 374.559 cv
320.423 363.921 li
316.949 363.921 li
316.829 363.921 316.729 363.882 316.652 363.804 cv
316.574 363.726 316.535 363.627 316.535 363.507 cv
316.535 362.805 li
316.535 362.673 316.574 362.567 316.652 362.489 cv
316.729 362.412 316.829 362.373 316.949 362.373 cv
325.589 362.373 li
325.721 362.373 325.823 362.412 325.895 362.489 cv
325.967 362.567 326.003 362.673 326.003 362.805 cv
326.003 363.507 li
326.003 363.627 325.964 363.726 325.886 363.804 cv
325.808 363.882 325.709 363.921 325.589 363.921 cv
322.133 363.921 li
322.133 374.559 li
322.133 374.679 322.091 374.777 322.007 374.855 cv
321.923 374.934 321.82 374.973 321.701 374.973 cv
320.837 374.973 li
320.717 374.973 320.618 374.934 320.54 374.855 cv
cp
f
328.613 374.855 mo
328.541 374.777 328.505 374.679 328.505 374.559 cv
328.505 362.805 li
328.505 362.673 328.541 362.567 328.613 362.489 cv
328.685 362.412 328.781 362.373 328.901 362.373 cv
336.299 362.373 li
336.431 362.373 336.536 362.412 336.614 362.489 cv
336.691 362.567 336.73 362.673 336.73 362.805 cv
336.73 363.453 li
336.73 363.572 336.691 363.669 336.614 363.74 cv
336.536 363.813 336.431 363.849 336.299 363.849 cv
330.161 363.849 li
330.161 367.862 li
335.903 367.862 li
336.035 367.862 336.14 367.901 336.218 367.979 cv
336.296 368.058 336.335 368.163 336.335 368.295 cv
336.335 368.906 li
336.335 369.026 336.296 369.126 336.218 369.204 cv
336.14 369.282 336.035 369.32 335.903 369.32 cv
330.161 369.32 li
330.161 373.479 li
336.443 373.479 li
336.575 373.479 336.68 373.518 336.758 373.596 cv
336.836 373.674 336.875 373.778 336.875 373.911 cv
336.875 374.559 li
336.875 374.679 336.833 374.777 336.749 374.855 cv
336.665 374.934 336.563 374.973 336.443 374.973 cv
328.901 374.973 li
328.781 374.973 328.685 374.934 328.613 374.855 cv
cp
f
340.575 373.848 mo
339.74 372.978 339.294 371.787 339.233 370.274 cv
339.222 369.95 339.216 369.423 339.216 368.69 cv
339.216 367.946 339.222 367.407 339.233 367.07 cv
339.294 365.559 339.74 364.368 340.575 363.498 cv
341.408 362.628 342.624 362.192 344.22 362.192 cv
345.288 362.192 346.193 362.382 346.938 362.76 cv
347.682 363.138 348.243 363.633 348.621 364.245 cv
348.999 364.856 349.206 365.511 349.242 366.207 cv
349.242 366.314 349.203 366.401 349.125 366.468 cv
349.047 366.534 348.954 366.566 348.846 366.566 cv
347.945 366.566 li
347.825 366.566 347.729 366.537 347.658 366.477 cv
347.586 366.417 347.532 366.314 347.496 366.171 cv
347.292 365.247 346.923 364.599 346.389 364.227 cv
345.854 363.854 345.132 363.669 344.22 363.669 cv
342.132 363.669 341.046 364.833 340.962 367.161 cv
340.949 367.484 340.943 367.982 340.943 368.654 cv
340.943 369.327 340.949 369.837 340.962 370.185 cv
341.046 372.501 342.132 373.658 344.22 373.658 cv
345.12 373.658 345.84 373.473 346.38 373.101 cv
346.92 372.729 347.292 372.087 347.496 371.175 cv
347.532 371.03 347.586 370.929 347.658 370.869 cv
347.729 370.809 347.825 370.778 347.945 370.778 cv
348.846 370.778 li
348.954 370.778 349.047 370.812 349.125 370.878 cv
349.203 370.943 349.242 371.03 349.242 371.139 cv
349.206 371.835 348.999 372.488 348.621 373.101 cv
348.243 373.713 347.682 374.208 346.938 374.586 cv
346.193 374.964 345.288 375.152 344.22 375.152 cv
342.624 375.152 341.408 374.718 340.575 373.848 cv
cp
f
352.248 374.855 mo
352.176 374.777 352.14 374.679 352.14 374.559 cv
352.14 362.805 li
352.14 362.673 352.176 362.567 352.248 362.489 cv
352.319 362.412 352.416 362.373 352.536 362.373 cv
353.399 362.373 li
353.531 362.373 353.637 362.412 353.715 362.489 cv
353.793 362.567 353.832 362.673 353.832 362.805 cv
353.832 367.809 li
360.096 367.809 li
360.096 362.805 li
360.096 362.673 360.135 362.567 360.213 362.489 cv
360.291 362.412 360.39 362.373 360.51 362.373 cv
361.374 362.373 li
361.506 362.373 361.61 362.412 361.688 362.489 cv
361.767 362.567 361.806 362.673 361.806 362.805 cv
361.806 374.559 li
361.806 374.679 361.764 374.777 361.68 374.855 cv
361.596 374.934 361.493 374.973 361.374 374.973 cv
360.51 374.973 li
360.39 374.973 360.291 374.934 360.213 374.855 cv
360.135 374.777 360.096 374.679 360.096 374.559 cv
360.096 369.375 li
353.832 369.375 li
353.832 374.559 li
353.832 374.679 353.789 374.777 353.706 374.855 cv
353.621 374.934 353.52 374.973 353.399 374.973 cv
352.536 374.973 li
352.416 374.973 352.319 374.934 352.248 374.855 cv
cp
f
365.513 374.855 mo
365.44 374.777 365.404 374.679 365.404 374.559 cv
365.404 362.805 li
365.404 362.673 365.44 362.567 365.513 362.489 cv
365.584 362.412 365.681 362.373 365.801 362.373 cv
366.593 362.373 li
366.712 362.373 366.802 362.396 366.862 362.444 cv
366.922 362.493 366.982 362.553 367.042 362.625 cv
373.072 371.913 li
373.072 362.805 li
373.072 362.673 373.111 362.567 373.189 362.489 cv
373.268 362.412 373.366 362.373 373.486 362.373 cv
374.296 362.373 li
374.428 362.373 374.533 362.412 374.611 362.489 cv
374.689 362.567 374.729 362.673 374.729 362.805 cv
374.729 374.541 li
374.729 374.661 374.689 374.763 374.611 374.847 cv
374.533 374.931 374.435 374.973 374.314 374.973 cv
373.504 374.973 li
373.3 374.973 373.156 374.889 373.072 374.721 cv
367.042 365.522 li
367.042 374.559 li
367.042 374.679 367.003 374.777 366.926 374.855 cv
366.847 374.934 366.748 374.973 366.628 374.973 cv
365.801 374.973 li
365.681 374.973 365.584 374.934 365.513 374.855 cv
cp
f
385.132 372.786 mo
385.708 372.204 386.021 371.313 386.068 370.112 cv
386.092 369.393 386.104 368.913 386.104 368.673 cv
386.104 368.409 386.092 367.929 386.068 367.232 cv
386.021 366.033 385.708 365.139 385.132 364.551 cv
384.556 363.963 383.788 363.669 382.828 363.669 cv
381.868 363.669 381.097 363.963 380.516 364.551 cv
379.933 365.139 379.624 366.033 379.588 367.232 cv
379.576 367.581 379.57 368.061 379.57 368.673 cv
379.57 369.272 379.576 369.753 379.588 370.112 cv
379.624 371.313 379.93 372.204 380.506 372.786 cv
381.082 373.368 381.856 373.658 382.828 373.658 cv
383.788 373.658 384.556 373.368 385.132 372.786 cv
cp
379.21 373.92 mo
378.358 373.098 377.908 371.858 377.86 370.203 cv
377.848 369.843 377.842 369.333 377.842 368.673 cv
377.842 368.013 377.848 367.509 377.86 367.161 cv
377.908 365.529 378.373 364.293 379.255 363.453 cv
380.137 362.613 381.328 362.192 382.828 362.192 cv
384.328 362.192 385.516 362.613 386.393 363.453 cv
387.268 364.293 387.73 365.529 387.778 367.161 cv
387.802 367.856 387.814 368.36 387.814 368.673 cv
387.814 368.973 387.802 369.482 387.778 370.203 cv
387.73 371.858 387.283 373.098 386.438 373.92 cv
385.591 374.742 384.388 375.152 382.828 375.152 cv
381.268 375.152 380.063 374.742 379.21 373.92 cv
cp
f
391.036 374.855 mo
390.964 374.777 390.928 374.679 390.928 374.559 cv
390.928 362.787 li
390.928 362.667 390.964 362.567 391.036 362.489 cv
391.107 362.412 391.204 362.373 391.324 362.373 cv
392.224 362.373 li
392.344 362.373 392.439 362.412 392.512 362.489 cv
392.584 362.567 392.62 362.667 392.62 362.787 cv
392.62 373.461 li
398.632 373.461 li
398.764 373.461 398.868 373.5 398.946 373.578 cv
399.024 373.656 399.063 373.755 399.063 373.875 cv
399.063 374.559 li
399.063 374.679 399.021 374.777 398.938 374.855 cv
398.854 374.934 398.752 374.973 398.632 374.973 cv
391.324 374.973 li
391.204 374.973 391.107 374.934 391.036 374.855 cv
cp
f
408.099 372.786 mo
408.675 372.204 408.987 371.313 409.035 370.112 cv
409.059 369.393 409.071 368.913 409.071 368.673 cv
409.071 368.409 409.059 367.929 409.035 367.232 cv
408.987 366.033 408.675 365.139 408.099 364.551 cv
407.522 363.963 406.755 363.669 405.795 363.669 cv
404.835 363.669 404.063 363.963 403.482 364.551 cv
402.899 365.139 402.591 366.033 402.555 367.232 cv
402.543 367.581 402.537 368.061 402.537 368.673 cv
402.537 369.272 402.543 369.753 402.555 370.112 cv
402.591 371.313 402.896 372.204 403.473 372.786 cv
404.049 373.368 404.823 373.658 405.795 373.658 cv
406.755 373.658 407.522 373.368 408.099 372.786 cv
cp
402.177 373.92 mo
401.325 373.098 400.875 371.858 400.827 370.203 cv
400.814 369.843 400.809 369.333 400.809 368.673 cv
400.809 368.013 400.814 367.509 400.827 367.161 cv
400.875 365.529 401.34 364.293 402.222 363.453 cv
403.104 362.613 404.295 362.192 405.795 362.192 cv
407.295 362.192 408.482 362.613 409.359 363.453 cv
410.234 364.293 410.697 365.529 410.745 367.161 cv
410.769 367.856 410.781 368.36 410.781 368.673 cv
410.781 368.973 410.769 369.482 410.745 370.203 cv
410.697 371.858 410.25 373.098 409.404 373.92 cv
408.558 374.742 407.354 375.152 405.795 375.152 cv
404.234 375.152 403.029 374.742 402.177 373.92 cv
cp
f
414.813 373.856 mo
413.948 372.992 413.486 371.822 413.427 370.347 cv
413.414 369.986 413.408 369.423 413.408 368.654 cv
413.408 367.875 413.414 367.311 413.427 366.963 cv
413.475 365.499 413.934 364.338 414.804 363.479 cv
415.674 362.622 416.889 362.192 418.448 362.192 cv
419.504 362.192 420.398 362.385 421.131 362.769 cv
421.862 363.153 422.414 363.612 422.786 364.146 cv
423.158 364.68 423.356 365.175 423.381 365.631 cv
423.381 365.667 li
423.381 365.763 423.342 365.844 423.264 365.909 cv
423.186 365.976 423.099 366.009 423.003 366.009 cv
421.994 366.009 li
421.887 366.009 421.806 365.984 421.752 365.937 cv
421.697 365.889 421.646 365.799 421.599 365.667 cv
421.406 365.103 421.053 364.629 420.536 364.245 cv
420.021 363.86 419.324 363.669 418.448 363.669 cv
417.44 363.669 416.648 363.945 416.072 364.497 cv
415.496 365.049 415.19 365.9 415.154 367.053 cv
415.143 367.4 415.137 367.935 415.137 368.654 cv
415.137 369.363 415.143 369.896 415.154 370.257 cv
415.19 371.421 415.496 372.279 416.072 372.831 cv
416.648 373.383 417.44 373.658 418.448 373.658 cv
419.469 373.658 420.284 373.38 420.896 372.821 cv
421.509 372.264 421.814 371.427 421.814 370.311 cv
421.814 369.537 li
419.061 369.537 li
418.94 369.537 418.842 369.495 418.764 369.411 cv
418.686 369.327 418.646 369.225 418.646 369.104 cv
418.646 368.564 li
418.646 368.445 418.686 368.343 418.764 368.259 cv
418.842 368.175 418.94 368.133 419.061 368.133 cv
423.093 368.133 li
423.225 368.133 423.329 368.172 423.407 368.25 cv
423.485 368.328 423.524 368.433 423.524 368.564 cv
423.524 370.274 li
423.524 371.247 423.323 372.102 422.922 372.84 cv
422.52 373.578 421.935 374.147 421.167 374.55 cv
420.398 374.952 419.492 375.152 418.448 375.152 cv
416.889 375.152 415.677 374.721 414.813 373.856 cv
cp
f
429.6 374.855 mo
429.521 374.777 429.482 374.679 429.482 374.559 cv
429.482 370.293 li
425.145 362.967 li
425.108 362.895 425.09 362.816 425.09 362.732 cv
425.09 362.637 425.126 362.553 425.198 362.48 cv
425.271 362.408 425.354 362.373 425.45 362.373 cv
426.314 362.373 li
426.53 362.373 426.687 362.475 426.782 362.679 cv
430.347 368.564 li
433.893 362.679 li
434.012 362.475 434.168 362.373 434.36 362.373 cv
435.225 362.373 li
435.32 362.373 435.407 362.408 435.485 362.48 cv
435.563 362.553 435.603 362.637 435.603 362.732 cv
435.603 362.793 435.578 362.871 435.53 362.967 cv
431.192 370.293 li
431.192 374.559 li
431.192 374.679 431.153 374.777 431.075 374.855 cv
430.997 374.934 430.893 374.973 430.76 374.973 cv
429.896 374.973 li
429.776 374.973 429.677 374.934 429.6 374.855 cv
cp
f
226.385 374.848 mo
225.55 373.978 225.104 372.787 225.043 371.274 cv
225.031 370.95 225.025 370.423 225.025 369.69 cv
225.025 368.946 225.031 368.407 225.043 368.07 cv
225.104 366.559 225.55 365.368 226.385 364.498 cv
227.218 363.628 228.434 363.192 230.029 363.192 cv
231.098 363.192 232.003 363.382 232.747 363.76 cv
233.491 364.138 234.053 364.633 234.431 365.245 cv
234.809 365.856 235.016 366.511 235.052 367.207 cv
235.052 367.314 235.013 367.401 234.935 367.468 cv
234.856 367.534 234.764 367.566 234.655 367.566 cv
233.755 367.566 li
233.635 367.566 233.539 367.537 233.468 367.477 cv
233.396 367.417 233.342 367.314 233.306 367.171 cv
233.102 366.247 232.732 365.599 232.198 365.227 cv
231.664 364.854 230.941 364.669 230.029 364.669 cv
227.941 364.669 226.855 365.833 226.771 368.161 cv
226.759 368.484 226.753 368.982 226.753 369.654 cv
226.753 370.327 226.759 370.837 226.771 371.185 cv
226.855 373.501 227.941 374.658 230.029 374.658 cv
230.93 374.658 231.649 374.473 232.189 374.101 cv
232.729 373.729 233.102 373.087 233.306 372.175 cv
233.342 372.03 233.396 371.929 233.468 371.869 cv
233.539 371.809 233.635 371.778 233.755 371.778 cv
234.655 371.778 li
234.764 371.778 234.856 371.812 234.935 371.878 cv
235.013 371.943 235.052 372.03 235.052 372.139 cv
235.016 372.835 234.809 373.488 234.431 374.101 cv
234.053 374.713 233.491 375.208 232.747 375.586 cv
232.003 375.964 231.098 376.152 230.029 376.152 cv
228.434 376.152 227.218 375.718 226.385 374.848 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
238.058 375.855 mo
237.985 375.777 237.949 375.679 237.949 375.559 cv
237.949 363.805 li
237.949 363.673 237.985 363.567 238.058 363.489 cv
238.129 363.412 238.226 363.373 238.346 363.373 cv
239.209 363.373 li
239.341 363.373 239.446 363.412 239.524 363.489 cv
239.603 363.567 239.642 363.673 239.642 363.805 cv
239.642 368.809 li
245.905 368.809 li
245.905 363.805 li
245.905 363.673 245.944 363.567 246.022 363.489 cv
246.101 363.412 246.199 363.373 246.319 363.373 cv
247.184 363.373 li
247.315 363.373 247.42 363.412 247.498 363.489 cv
247.576 363.567 247.615 363.673 247.615 363.805 cv
247.615 375.559 li
247.615 375.679 247.573 375.777 247.489 375.855 cv
247.405 375.934 247.303 375.973 247.184 375.973 cv
246.319 375.973 li
246.199 375.973 246.101 375.934 246.022 375.855 cv
245.944 375.777 245.905 375.679 245.905 375.559 cv
245.905 370.375 li
239.642 370.375 li
239.642 375.559 li
239.642 375.679 239.599 375.777 239.516 375.855 cv
239.431 375.934 239.329 375.973 239.209 375.973 cv
238.346 375.973 li
238.226 375.973 238.129 375.934 238.058 375.855 cv
cp
f
253.177 371.581 mo
258.108 371.581 li
255.643 365.119 li
253.177 371.581 li
cp
250.099 375.864 mo
250.027 375.793 249.991 375.709 249.991 375.612 cv
250.027 375.415 li
254.491 363.769 li
254.587 363.505 254.779 363.373 255.066 363.373 cv
256.219 363.373 li
256.507 363.373 256.698 363.505 256.795 363.769 cv
261.259 375.415 li
261.295 375.612 li
261.295 375.709 261.256 375.793 261.178 375.864 cv
261.1 375.937 261.013 375.973 260.917 375.973 cv
260.071 375.973 li
259.951 375.973 259.852 375.939 259.773 375.874 cv
259.695 375.808 259.645 375.738 259.621 375.667 cv
258.613 373.074 li
252.655 373.074 li
251.665 375.667 li
251.568 375.871 251.419 375.973 251.215 375.973 cv
250.351 375.973 li
250.255 375.973 250.171 375.937 250.099 375.864 cv
cp
f
265.228 375.855 mo
265.149 375.777 265.11 375.679 265.11 375.559 cv
265.11 364.921 li
261.637 364.921 li
261.517 364.921 261.417 364.882 261.34 364.804 cv
261.262 364.726 261.223 364.627 261.223 364.507 cv
261.223 363.805 li
261.223 363.673 261.262 363.567 261.34 363.489 cv
261.417 363.412 261.517 363.373 261.637 363.373 cv
270.276 363.373 li
270.408 363.373 270.511 363.412 270.582 363.489 cv
270.654 363.567 270.69 363.673 270.69 363.805 cv
270.69 364.507 li
270.69 364.627 270.651 364.726 270.573 364.804 cv
270.495 364.882 270.396 364.921 270.276 364.921 cv
266.82 364.921 li
266.82 375.559 li
266.82 375.679 266.778 375.777 266.694 375.855 cv
266.61 375.934 266.508 375.973 266.389 375.973 cv
265.524 375.973 li
265.404 375.973 265.306 375.934 265.228 375.855 cv
cp
f
278.412 374.551 mo
279.181 374.551 279.783 374.344 280.222 373.93 cv
280.659 373.516 280.878 372.984 280.878 372.337 cv
280.878 371.677 280.659 371.143 280.222 370.734 cv
279.783 370.327 279.181 370.123 278.412 370.123 cv
274.885 370.123 li
274.885 374.551 li
278.412 374.551 li
cp
278.232 368.719 mo
279.013 368.719 279.606 368.542 280.015 368.188 cv
280.422 367.834 280.626 367.339 280.626 366.703 cv
280.626 366.079 280.426 365.604 280.023 365.28 cv
279.621 364.957 279.024 364.795 278.232 364.795 cv
274.885 364.795 li
274.885 368.719 li
278.232 368.719 li
cp
273.301 375.855 mo
273.229 375.777 273.192 375.679 273.192 375.559 cv
273.192 363.805 li
273.192 363.673 273.229 363.567 273.301 363.489 cv
273.372 363.412 273.469 363.373 273.589 363.373 cv
278.502 363.373 li
279.774 363.373 280.734 363.679 281.383 364.291 cv
282.03 364.902 282.354 365.701 282.354 366.685 cv
282.354 367.356 282.198 367.918 281.887 368.367 cv
281.574 368.817 281.208 369.145 280.788 369.349 cv
281.305 369.601 281.736 369.991 282.084 370.519 cv
282.433 371.047 282.606 371.652 282.606 372.337 cv
282.606 373.009 282.453 373.621 282.147 374.173 cv
281.842 374.725 281.389 375.163 280.788 375.486 cv
280.188 375.811 279.475 375.973 278.646 375.973 cv
273.589 375.973 li
273.469 375.973 273.372 375.934 273.301 375.855 cv
cp
f
292.452 373.786 mo
293.028 373.204 293.341 372.313 293.389 371.112 cv
293.412 370.393 293.425 369.913 293.425 369.673 cv
293.425 369.409 293.412 368.929 293.389 368.232 cv
293.341 367.033 293.028 366.139 292.452 365.551 cv
291.876 364.963 291.108 364.669 290.148 364.669 cv
289.188 364.669 288.417 364.963 287.836 365.551 cv
287.253 366.139 286.944 367.033 286.908 368.232 cv
286.896 368.581 286.891 369.061 286.891 369.673 cv
286.891 370.272 286.896 370.753 286.908 371.112 cv
286.944 372.313 287.25 373.204 287.826 373.786 cv
288.402 374.368 289.177 374.658 290.148 374.658 cv
291.108 374.658 291.876 374.368 292.452 373.786 cv
cp
286.53 374.92 mo
285.679 374.098 285.229 372.858 285.181 371.203 cv
285.168 370.843 285.162 370.333 285.162 369.673 cv
285.162 369.013 285.168 368.509 285.181 368.161 cv
285.229 366.529 285.693 365.293 286.575 364.453 cv
287.457 363.613 288.648 363.192 290.148 363.192 cv
291.648 363.192 292.836 363.613 293.713 364.453 cv
294.588 365.293 295.051 366.529 295.099 368.161 cv
295.122 368.856 295.135 369.36 295.135 369.673 cv
295.135 369.973 295.122 370.482 295.099 371.203 cv
295.051 372.858 294.604 374.098 293.758 374.92 cv
292.911 375.742 291.708 376.152 290.148 376.152 cv
288.588 376.152 287.383 375.742 286.53 374.92 cv
cp
f
300.85 375.855 mo
300.771 375.777 300.732 375.679 300.732 375.559 cv
300.732 364.921 li
297.259 364.921 li
297.139 364.921 297.039 364.882 296.962 364.804 cv
296.884 364.726 296.845 364.627 296.845 364.507 cv
296.845 363.805 li
296.845 363.673 296.884 363.567 296.962 363.489 cv
297.039 363.412 297.139 363.373 297.259 363.373 cv
305.898 363.373 li
306.03 363.373 306.133 363.412 306.204 363.489 cv
306.276 363.567 306.313 363.673 306.313 363.805 cv
306.313 364.507 li
306.313 364.627 306.273 364.726 306.195 364.804 cv
306.117 364.882 306.019 364.921 305.898 364.921 cv
302.442 364.921 li
302.442 375.559 li
302.442 375.679 302.4 375.777 302.316 375.855 cv
302.232 375.934 302.13 375.973 302.011 375.973 cv
301.146 375.973 li
301.026 375.973 300.928 375.934 300.85 375.855 cv
cp
f
320.54 375.855 mo
320.462 375.777 320.423 375.679 320.423 375.559 cv
320.423 364.921 li
316.949 364.921 li
316.829 364.921 316.729 364.882 316.652 364.804 cv
316.574 364.726 316.535 364.627 316.535 364.507 cv
316.535 363.805 li
316.535 363.673 316.574 363.567 316.652 363.489 cv
316.729 363.412 316.829 363.373 316.949 363.373 cv
325.589 363.373 li
325.721 363.373 325.823 363.412 325.895 363.489 cv
325.967 363.567 326.003 363.673 326.003 363.805 cv
326.003 364.507 li
326.003 364.627 325.964 364.726 325.886 364.804 cv
325.808 364.882 325.709 364.921 325.589 364.921 cv
322.133 364.921 li
322.133 375.559 li
322.133 375.679 322.091 375.777 322.007 375.855 cv
321.923 375.934 321.82 375.973 321.701 375.973 cv
320.837 375.973 li
320.717 375.973 320.618 375.934 320.54 375.855 cv
cp
f
328.613 375.855 mo
328.541 375.777 328.505 375.679 328.505 375.559 cv
328.505 363.805 li
328.505 363.673 328.541 363.567 328.613 363.489 cv
328.685 363.412 328.781 363.373 328.901 363.373 cv
336.299 363.373 li
336.431 363.373 336.536 363.412 336.614 363.489 cv
336.691 363.567 336.73 363.673 336.73 363.805 cv
336.73 364.453 li
336.73 364.572 336.691 364.669 336.614 364.74 cv
336.536 364.813 336.431 364.849 336.299 364.849 cv
330.161 364.849 li
330.161 368.862 li
335.903 368.862 li
336.035 368.862 336.14 368.901 336.218 368.979 cv
336.296 369.058 336.335 369.163 336.335 369.295 cv
336.335 369.906 li
336.335 370.026 336.296 370.126 336.218 370.204 cv
336.14 370.282 336.035 370.32 335.903 370.32 cv
330.161 370.32 li
330.161 374.479 li
336.443 374.479 li
336.575 374.479 336.68 374.518 336.758 374.596 cv
336.836 374.674 336.875 374.778 336.875 374.911 cv
336.875 375.559 li
336.875 375.679 336.833 375.777 336.749 375.855 cv
336.665 375.934 336.563 375.973 336.443 375.973 cv
328.901 375.973 li
328.781 375.973 328.685 375.934 328.613 375.855 cv
cp
f
340.575 374.848 mo
339.74 373.978 339.294 372.787 339.233 371.274 cv
339.222 370.95 339.216 370.423 339.216 369.69 cv
339.216 368.946 339.222 368.407 339.233 368.07 cv
339.294 366.559 339.74 365.368 340.575 364.498 cv
341.408 363.628 342.624 363.192 344.22 363.192 cv
345.288 363.192 346.193 363.382 346.938 363.76 cv
347.682 364.138 348.243 364.633 348.621 365.245 cv
348.999 365.856 349.206 366.511 349.242 367.207 cv
349.242 367.314 349.203 367.401 349.125 367.468 cv
349.047 367.534 348.954 367.566 348.846 367.566 cv
347.945 367.566 li
347.825 367.566 347.729 367.537 347.658 367.477 cv
347.586 367.417 347.532 367.314 347.496 367.171 cv
347.292 366.247 346.923 365.599 346.389 365.227 cv
345.854 364.854 345.132 364.669 344.22 364.669 cv
342.132 364.669 341.046 365.833 340.962 368.161 cv
340.949 368.484 340.943 368.982 340.943 369.654 cv
340.943 370.327 340.949 370.837 340.962 371.185 cv
341.046 373.501 342.132 374.658 344.22 374.658 cv
345.12 374.658 345.84 374.473 346.38 374.101 cv
346.92 373.729 347.292 373.087 347.496 372.175 cv
347.532 372.03 347.586 371.929 347.658 371.869 cv
347.729 371.809 347.825 371.778 347.945 371.778 cv
348.846 371.778 li
348.954 371.778 349.047 371.812 349.125 371.878 cv
349.203 371.943 349.242 372.03 349.242 372.139 cv
349.206 372.835 348.999 373.488 348.621 374.101 cv
348.243 374.713 347.682 375.208 346.938 375.586 cv
346.193 375.964 345.288 376.152 344.22 376.152 cv
342.624 376.152 341.408 375.718 340.575 374.848 cv
cp
f
352.248 375.855 mo
352.176 375.777 352.14 375.679 352.14 375.559 cv
352.14 363.805 li
352.14 363.673 352.176 363.567 352.248 363.489 cv
352.319 363.412 352.416 363.373 352.536 363.373 cv
353.399 363.373 li
353.531 363.373 353.637 363.412 353.715 363.489 cv
353.793 363.567 353.832 363.673 353.832 363.805 cv
353.832 368.809 li
360.096 368.809 li
360.096 363.805 li
360.096 363.673 360.135 363.567 360.213 363.489 cv
360.291 363.412 360.39 363.373 360.51 363.373 cv
361.374 363.373 li
361.506 363.373 361.61 363.412 361.688 363.489 cv
361.767 363.567 361.806 363.673 361.806 363.805 cv
361.806 375.559 li
361.806 375.679 361.764 375.777 361.68 375.855 cv
361.596 375.934 361.493 375.973 361.374 375.973 cv
360.51 375.973 li
360.39 375.973 360.291 375.934 360.213 375.855 cv
360.135 375.777 360.096 375.679 360.096 375.559 cv
360.096 370.375 li
353.832 370.375 li
353.832 375.559 li
353.832 375.679 353.789 375.777 353.706 375.855 cv
353.621 375.934 353.52 375.973 353.399 375.973 cv
352.536 375.973 li
352.416 375.973 352.319 375.934 352.248 375.855 cv
cp
f
365.513 375.855 mo
365.44 375.777 365.404 375.679 365.404 375.559 cv
365.404 363.805 li
365.404 363.673 365.44 363.567 365.513 363.489 cv
365.584 363.412 365.681 363.373 365.801 363.373 cv
366.593 363.373 li
366.712 363.373 366.802 363.396 366.862 363.444 cv
366.922 363.493 366.982 363.553 367.042 363.625 cv
373.072 372.913 li
373.072 363.805 li
373.072 363.673 373.111 363.567 373.189 363.489 cv
373.268 363.412 373.366 363.373 373.486 363.373 cv
374.296 363.373 li
374.428 363.373 374.533 363.412 374.611 363.489 cv
374.689 363.567 374.729 363.673 374.729 363.805 cv
374.729 375.541 li
374.729 375.661 374.689 375.763 374.611 375.847 cv
374.533 375.931 374.435 375.973 374.314 375.973 cv
373.504 375.973 li
373.3 375.973 373.156 375.889 373.072 375.721 cv
367.042 366.522 li
367.042 375.559 li
367.042 375.679 367.003 375.777 366.926 375.855 cv
366.847 375.934 366.748 375.973 366.628 375.973 cv
365.801 375.973 li
365.681 375.973 365.584 375.934 365.513 375.855 cv
cp
f
385.132 373.786 mo
385.708 373.204 386.021 372.313 386.068 371.112 cv
386.092 370.393 386.104 369.913 386.104 369.673 cv
386.104 369.409 386.092 368.929 386.068 368.232 cv
386.021 367.033 385.708 366.139 385.132 365.551 cv
384.556 364.963 383.788 364.669 382.828 364.669 cv
381.868 364.669 381.097 364.963 380.516 365.551 cv
379.933 366.139 379.624 367.033 379.588 368.232 cv
379.576 368.581 379.57 369.061 379.57 369.673 cv
379.57 370.272 379.576 370.753 379.588 371.112 cv
379.624 372.313 379.93 373.204 380.506 373.786 cv
381.082 374.368 381.856 374.658 382.828 374.658 cv
383.788 374.658 384.556 374.368 385.132 373.786 cv
cp
379.21 374.92 mo
378.358 374.098 377.908 372.858 377.86 371.203 cv
377.848 370.843 377.842 370.333 377.842 369.673 cv
377.842 369.013 377.848 368.509 377.86 368.161 cv
377.908 366.529 378.373 365.293 379.255 364.453 cv
380.137 363.613 381.328 363.192 382.828 363.192 cv
384.328 363.192 385.516 363.613 386.393 364.453 cv
387.268 365.293 387.73 366.529 387.778 368.161 cv
387.802 368.856 387.814 369.36 387.814 369.673 cv
387.814 369.973 387.802 370.482 387.778 371.203 cv
387.73 372.858 387.283 374.098 386.438 374.92 cv
385.591 375.742 384.388 376.152 382.828 376.152 cv
381.268 376.152 380.063 375.742 379.21 374.92 cv
cp
f
391.036 375.855 mo
390.964 375.777 390.928 375.679 390.928 375.559 cv
390.928 363.787 li
390.928 363.667 390.964 363.567 391.036 363.489 cv
391.107 363.412 391.204 363.373 391.324 363.373 cv
392.224 363.373 li
392.344 363.373 392.439 363.412 392.512 363.489 cv
392.584 363.567 392.62 363.667 392.62 363.787 cv
392.62 374.461 li
398.632 374.461 li
398.764 374.461 398.868 374.5 398.946 374.578 cv
399.024 374.656 399.063 374.755 399.063 374.875 cv
399.063 375.559 li
399.063 375.679 399.021 375.777 398.938 375.855 cv
398.854 375.934 398.752 375.973 398.632 375.973 cv
391.324 375.973 li
391.204 375.973 391.107 375.934 391.036 375.855 cv
cp
f
408.099 373.786 mo
408.675 373.204 408.987 372.313 409.035 371.112 cv
409.059 370.393 409.071 369.913 409.071 369.673 cv
409.071 369.409 409.059 368.929 409.035 368.232 cv
408.987 367.033 408.675 366.139 408.099 365.551 cv
407.522 364.963 406.755 364.669 405.795 364.669 cv
404.835 364.669 404.063 364.963 403.482 365.551 cv
402.899 366.139 402.591 367.033 402.555 368.232 cv
402.543 368.581 402.537 369.061 402.537 369.673 cv
402.537 370.272 402.543 370.753 402.555 371.112 cv
402.591 372.313 402.896 373.204 403.473 373.786 cv
404.049 374.368 404.823 374.658 405.795 374.658 cv
406.755 374.658 407.522 374.368 408.099 373.786 cv
cp
402.177 374.92 mo
401.325 374.098 400.875 372.858 400.827 371.203 cv
400.814 370.843 400.809 370.333 400.809 369.673 cv
400.809 369.013 400.814 368.509 400.827 368.161 cv
400.875 366.529 401.34 365.293 402.222 364.453 cv
403.104 363.613 404.295 363.192 405.795 363.192 cv
407.295 363.192 408.482 363.613 409.359 364.453 cv
410.234 365.293 410.697 366.529 410.745 368.161 cv
410.769 368.856 410.781 369.36 410.781 369.673 cv
410.781 369.973 410.769 370.482 410.745 371.203 cv
410.697 372.858 410.25 374.098 409.404 374.92 cv
408.558 375.742 407.354 376.152 405.795 376.152 cv
404.234 376.152 403.029 375.742 402.177 374.92 cv
cp
f
414.813 374.856 mo
413.948 373.992 413.486 372.822 413.427 371.347 cv
413.414 370.986 413.408 370.423 413.408 369.654 cv
413.408 368.875 413.414 368.311 413.427 367.963 cv
413.475 366.499 413.934 365.338 414.804 364.479 cv
415.674 363.622 416.889 363.192 418.448 363.192 cv
419.504 363.192 420.398 363.385 421.131 363.769 cv
421.862 364.153 422.414 364.612 422.786 365.146 cv
423.158 365.68 423.356 366.175 423.381 366.631 cv
423.381 366.667 li
423.381 366.763 423.342 366.844 423.264 366.909 cv
423.186 366.976 423.099 367.009 423.003 367.009 cv
421.994 367.009 li
421.887 367.009 421.806 366.984 421.752 366.937 cv
421.697 366.889 421.646 366.799 421.599 366.667 cv
421.406 366.103 421.053 365.629 420.536 365.245 cv
420.021 364.86 419.324 364.669 418.448 364.669 cv
417.44 364.669 416.648 364.945 416.072 365.497 cv
415.496 366.049 415.19 366.9 415.154 368.053 cv
415.143 368.4 415.137 368.935 415.137 369.654 cv
415.137 370.363 415.143 370.896 415.154 371.257 cv
415.19 372.421 415.496 373.279 416.072 373.831 cv
416.648 374.383 417.44 374.658 418.448 374.658 cv
419.469 374.658 420.284 374.38 420.896 373.821 cv
421.509 373.264 421.814 372.427 421.814 371.311 cv
421.814 370.537 li
419.061 370.537 li
418.94 370.537 418.842 370.495 418.764 370.411 cv
418.686 370.327 418.646 370.225 418.646 370.104 cv
418.646 369.564 li
418.646 369.445 418.686 369.343 418.764 369.259 cv
418.842 369.175 418.94 369.133 419.061 369.133 cv
423.093 369.133 li
423.225 369.133 423.329 369.172 423.407 369.25 cv
423.485 369.328 423.524 369.433 423.524 369.564 cv
423.524 371.274 li
423.524 372.247 423.323 373.102 422.922 373.84 cv
422.52 374.578 421.935 375.147 421.167 375.55 cv
420.398 375.952 419.492 376.152 418.448 376.152 cv
416.889 376.152 415.677 375.721 414.813 374.856 cv
cp
f
429.6 375.855 mo
429.521 375.777 429.482 375.679 429.482 375.559 cv
429.482 371.293 li
425.145 363.967 li
425.108 363.895 425.09 363.816 425.09 363.732 cv
425.09 363.637 425.126 363.553 425.198 363.48 cv
425.271 363.408 425.354 363.373 425.45 363.373 cv
426.314 363.373 li
426.53 363.373 426.687 363.475 426.782 363.679 cv
430.347 369.564 li
433.893 363.679 li
434.012 363.475 434.168 363.373 434.36 363.373 cv
435.225 363.373 li
435.32 363.373 435.407 363.408 435.485 363.48 cv
435.563 363.553 435.603 363.637 435.603 363.732 cv
435.603 363.793 435.578 363.871 435.53 363.967 cv
431.192 371.293 li
431.192 375.559 li
431.192 375.679 431.153 375.777 431.075 375.855 cv
430.997 375.934 430.893 375.973 430.76 375.973 cv
429.896 375.973 li
429.776 375.973 429.677 375.934 429.6 375.855 cv
cp
f
409.234 169.338 mo
409.067 169.059 408.982 168.78 408.982 168.495 cv
408.982 163.889 li
408.982 163.606 409.067 163.415 409.234 163.318 cv
409.403 163.223 409.61 163.246 409.859 163.39 cv
414.379 166 li
414.626 166.141 414.833 166.359 415.002 166.648 cv
415.171 166.94 415.256 167.227 415.256 167.51 cv
415.256 172.117 li
415.256 172.402 415.171 172.584 415.002 172.668 cv
414.833 172.75 414.626 172.721 414.379 172.579 cv
409.859 169.97 li
409.61 169.826 409.403 169.615 409.234 169.338 cv
cp
409.285 159.547 mo
409.152 159.312 409.084 159.095 409.084 158.888 cv
409.084 158.526 409.094 158.262 409.118 158.095 cv
409.276 157.128 409.629 156.377 410.181 155.843 cv
410.73 155.31 411.478 154.786 412.424 154.275 cv
413.12 153.901 413.648 153.557 414.009 153.235 cv
414.368 152.912 414.559 152.502 414.582 151.999 cv
414.649 151.289 414.44 150.563 413.958 149.819 cv
413.473 149.075 412.872 148.496 412.154 148.082 cv
410.489 147.121 409.466 147.446 409.084 149.058 cv
408.972 149.301 408.837 149.455 408.68 149.519 cv
408.52 149.584 408.296 149.531 408.004 149.362 cv
403.62 146.831 li
403.394 146.7 403.208 146.497 403.064 146.221 cv
402.916 145.942 402.844 145.648 402.844 145.339 cv
402.889 143.97 403.282 142.859 404.023 141.995 cv
404.767 141.133 405.868 140.718 407.328 140.75 cv
408.79 140.78 410.533 141.38 412.558 142.548 cv
414.626 143.742 416.308 145.082 417.601 146.563 cv
418.892 148.044 419.82 149.477 420.382 150.858 cv
420.944 152.24 421.227 153.474 421.227 154.556 cv
421.227 155.875 420.967 156.874 420.449 157.556 cv
419.934 158.237 419.19 158.904 418.222 159.557 cv
417.618 159.982 417.157 160.337 416.841 160.62 cv
416.526 160.899 416.268 161.256 416.065 161.681 cv
415.974 161.861 415.898 162.137 415.831 162.511 cv
415.649 162.794 415.486 162.97 415.34 163.042 cv
415.192 163.111 414.998 163.075 414.749 162.934 cv
409.758 160.052 li
409.576 159.948 409.42 159.779 409.285 159.547 cv
cp
.638849 .295933 0 0 cmyk
f
410.557 146.793 mo
411.14 146.793 411.784 147.002 412.529 147.433 cv
413.346 147.903 414.037 148.568 414.586 149.409 cv
415.162 150.297 415.412 151.192 415.329 152.07 cv
415.298 152.741 415.022 153.333 414.511 153.793 cv
414.104 154.154 413.539 154.527 412.78 154.936 cv
411.903 155.409 411.204 155.896 410.703 156.381 cv
410.268 156.803 409.991 157.403 409.858 158.216 cv
409.841 158.344 409.834 158.574 409.834 158.888 cv
409.834 158.958 409.87 159.06 409.937 159.177 cv
409.999 159.284 410.069 159.366 410.129 159.4 cv
415.09 162.265 li
415.1 162.251 415.11 162.236 415.122 162.22 cv
415.2 161.838 415.288 161.557 415.396 161.342 cv
415.637 160.836 415.958 160.399 416.344 160.058 cv
416.681 159.757 417.169 159.381 417.792 158.944 cv
418.699 158.331 419.389 157.714 419.852 157.104 cv
420.267 156.557 420.477 155.7 420.477 154.556 cv
420.477 153.577 420.211 152.428 419.688 151.141 cv
419.158 149.841 418.266 148.467 417.036 147.056 cv
415.802 145.642 414.168 144.344 412.183 143.198 cv
410.277 142.098 408.639 141.527 407.313 141.5 cv
407.174 141.499 li
406.009 141.499 405.164 141.821 404.591 142.485 cv
403.959 143.221 403.633 144.164 403.595 145.363 cv
403.595 145.528 403.638 145.702 403.727 145.869 cv
403.807 146.022 403.894 146.123 403.995 146.182 cv
408.379 148.713 li
408.385 148.716 408.391 148.719 408.396 148.723 cv
408.855 147.048 409.939 146.793 410.557 146.793 cv
cp
415.178 163.826 mo
414.924 163.826 414.662 163.748 414.378 163.586 cv
409.383 160.701 li
409.093 160.536 408.841 160.274 408.637 159.925 cv
408.435 159.568 408.334 159.222 408.334 158.888 cv
408.334 158.479 408.349 158.18 408.375 157.991 cv
408.563 156.848 408.993 155.949 409.659 155.304 cv
410.259 154.723 411.069 154.154 412.068 153.615 cv
412.715 153.267 413.2 152.951 413.511 152.675 cv
413.719 152.488 413.818 152.268 413.833 151.964 cv
413.887 151.388 413.721 150.832 413.329 150.227 cv
412.911 149.587 412.39 149.083 411.779 148.731 cv
411.152 148.369 410.769 148.293 410.557 148.293 cv
410.401 148.293 410.036 148.293 409.813 149.231 cv
409.802 149.28 409.786 149.327 409.765 149.373 cv
409.57 149.793 409.301 150.077 408.963 150.214 cv
408.581 150.369 408.14 150.308 407.628 150.011 cv
403.245 147.48 li
402.893 147.277 402.608 146.97 402.398 146.566 cv
402.198 146.189 402.095 145.774 402.095 145.339 cv
402.145 143.782 402.602 142.5 403.454 141.506 cv
404.318 140.505 405.569 139.999 407.174 139.999 cv
407.345 140 li
408.947 140.033 410.775 140.654 412.933 141.899 cv
415.062 143.127 416.822 144.531 418.166 146.07 cv
419.506 147.606 420.484 149.122 421.076 150.576 cv
421.674 152.043 421.977 153.382 421.977 154.556 cv
421.977 156.034 421.664 157.196 421.047 158.01 cv
420.484 158.752 419.675 159.482 418.643 160.179 cv
418.079 160.575 417.637 160.914 417.341 161.179 cv
417.104 161.389 416.903 161.665 416.742 162.003 cv
416.71 162.068 416.645 162.227 416.567 162.646 cv
416.551 162.742 416.514 162.834 416.461 162.916 cv
416.199 163.324 415.949 163.578 415.673 163.714 cv
415.511 163.791 415.349 163.826 415.178 163.826 cv
cp
409.737 164.186 mo
409.732 168.495 li
409.732 168.64 409.78 168.789 409.878 168.953 cv
409.979 169.119 410.097 169.241 410.234 169.32 cv
414.502 171.784 li
414.506 167.51 li
414.506 167.361 414.456 167.202 414.354 167.024 cv
414.251 166.85 414.134 166.724 414.006 166.65 cv
409.737 164.186 li
cp
414.8 173.463 mo
414.544 173.463 414.276 173.385 414.006 173.23 cv
409.484 170.619 li
409.13 170.415 408.83 170.115 408.594 169.729 cv
408.354 169.326 408.232 168.913 408.232 168.495 cv
408.232 163.889 li
408.232 163.145 408.624 162.806 408.857 162.67 cv
409.273 162.434 409.748 162.461 410.234 162.74 cv
414.754 165.35 li
415.111 165.555 415.413 165.865 415.649 166.271 cv
415.887 166.679 416.006 167.095 416.006 167.51 cv
416.006 172.117 li
416.006 172.889 415.587 173.214 415.337 173.339 cv
415.166 173.422 414.987 173.463 414.8 173.463 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
308.012 66.7987 mo
303.929 69.1547 li
303.684 69.2984 303.477 69.3237 303.308 69.2265 cv
303.139 69.1293 303.055 68.9413 303.055 68.656 cv
303.055 52.2849 li
303.055 52.0018 303.139 51.7208 303.308 51.4419 cv
303.477 51.1651 303.684 50.9538 303.929 50.8101 cv
308.012 48.4542 li
308.261 48.3105 308.468 48.283 308.637 48.3633 cv
308.806 48.4478 308.889 48.6338 308.889 48.9169 cv
308.889 65.288 li
308.889 65.5711 308.806 65.8585 308.637 66.1501 cv
308.468 66.4417 308.261 66.6551 308.012 66.7987 cv
cp
308.147 76.9681 mo
303.796 79.4804 li
303.549 79.622 303.346 79.6431 303.19 79.5417 cv
303.034 79.4382 302.953 79.2586 302.953 79.0008 cv
302.953 74.0058 li
302.953 73.7227 303.038 73.4353 303.207 73.1437 cv
303.376 72.8542 303.57 72.6451 303.796 72.5141 cv
308.147 70.0018 li
308.371 69.8729 308.57 69.856 308.736 69.9511 cv
308.908 70.0483 308.99 70.2384 308.99 70.5216 cv
308.99 75.5144 li
308.99 75.7722 308.908 76.0469 308.736 76.3385 cv
308.57 76.628 308.371 76.8393 308.147 76.9681 cv
cp
.638849 .295933 0 0 cmyk
f
308.139 49.2407 mo
304.305 51.4595 li
304.172 51.5376 304.054 51.6606 303.948 51.8335 cv
303.852 51.9912 303.805 52.1401 303.805 52.2852 cv
303.805 68.356 li
307.637 66.1494 li
307.772 66.0713 307.887 65.9487 307.988 65.7744 cv
308.089 65.5991 308.139 65.4404 308.139 65.2881 cv
308.139 49.2407 li
cp
303.529 70.0347 mo
303.317 70.0347 303.117 69.9814 302.935 69.877 cv
302.699 69.7417 302.305 69.4033 302.305 68.6563 cv
302.305 52.2852 li
302.305 51.8643 302.426 51.4497 302.667 51.0532 cv
302.903 50.667 303.2 50.3682 303.551 50.1631 cv
307.637 47.8047 li
308.103 47.5366 308.566 47.501 308.958 47.6855 cv
309.221 47.8169 309.639 48.1411 309.639 48.917 cv
309.639 65.2881 li
309.639 65.7061 309.52 66.1221 309.286 66.5259 cv
309.053 66.9287 308.75 67.2393 308.386 67.4487 cv
304.305 69.8042 li
304.045 69.9565 303.783 70.0347 303.529 70.0347 cv
cp
308.24 70.7964 mo
304.171 73.1636 li
304.063 73.2261 303.957 73.3467 303.855 73.5215 cv
303.753 73.6968 303.703 73.856 303.703 74.0059 cv
303.703 78.6626 li
307.772 76.3188 li
307.88 76.2568 307.988 76.1343 308.086 75.9639 cv
308.189 75.7891 308.24 75.6396 308.24 75.5146 cv
308.24 70.7964 li
cp
303.409 80.355 mo
303.184 80.355 302.967 80.291 302.781 80.1704 cv
302.562 80.0249 302.203 79.6851 302.203 79.001 cv
302.203 74.0059 li
302.203 73.5903 302.323 73.1733 302.558 72.7671 cv
302.794 72.3628 303.084 72.0601 303.421 71.8652 cv
307.772 69.3525 li
308.231 69.0874 308.711 69.0737 309.108 69.2998 cv
309.343 69.4331 309.74 69.77 309.74 70.5215 cv
309.74 75.5146 li
309.74 75.9106 309.62 76.3159 309.383 76.7183 cv
309.152 77.1177 308.861 77.4224 308.521 77.6182 cv
304.171 80.1299 li
303.911 80.2793 303.655 80.355 303.409 80.355 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
383.25 342.124 mo
385 343.874 li
386.75 342.124 li
385 340.374 li
383.25 342.124 li
cp
373.25 342.124 mo
375 343.874 li
376.75 342.124 li
375 340.374 li
373.25 342.124 li
cp
368.25 342.124 mo
370 343.874 li
371.75 342.124 li
370 340.374 li
368.25 342.124 li
cp
363.25 342.124 mo
365 343.874 li
366.75 342.124 li
365 340.374 li
363.25 342.124 li
cp
358.25 342.124 mo
360 343.874 li
361.75 342.124 li
360 340.374 li
358.25 342.124 li
cp
353.25 342.124 mo
355 343.874 li
356.75 342.124 li
355 340.374 li
353.25 342.124 li
cp
348.25 342.124 mo
350 343.874 li
351.75 342.124 li
350 340.374 li
348.25 342.124 li
cp
343.25 342.124 mo
345 343.874 li
346.75 342.124 li
345 340.374 li
343.25 342.124 li
cp
338.25 342.124 mo
340 343.874 li
341.75 342.124 li
340 340.374 li
338.25 342.124 li
cp
333.25 342.124 mo
335 343.874 li
336.75 342.124 li
335 340.374 li
333.25 342.124 li
cp
328.25 342.124 mo
330 343.874 li
331.75 342.124 li
330 340.374 li
328.25 342.124 li
cp
323.25 342.124 mo
325 343.874 li
326.75 342.124 li
325 340.374 li
323.25 342.124 li
cp
318.25 342.124 mo
320 343.874 li
321.75 342.124 li
320 340.374 li
318.25 342.124 li
cp
313.25 342.124 mo
315 343.874 li
316.75 342.124 li
315 340.374 li
313.25 342.124 li
cp
308.25 342.124 mo
310 343.874 li
311.75 342.124 li
310 340.374 li
308.25 342.124 li
cp
303.25 342.124 mo
305 343.874 li
306.75 342.124 li
305 340.374 li
303.25 342.124 li
cp
298.25 342.124 mo
300 343.874 li
301.75 342.124 li
300 340.374 li
298.25 342.124 li
cp
293.25 342.124 mo
295 343.874 li
296.75 342.124 li
295 340.374 li
293.25 342.124 li
cp
288.25 342.124 mo
290 343.874 li
291.75 342.124 li
290 340.374 li
288.25 342.124 li
cp
283.25 342.124 mo
285 343.874 li
286.75 342.124 li
285 340.374 li
283.25 342.124 li
cp
273.25 342.124 mo
275 343.874 li
276.75 342.124 li
275 340.374 li
273.25 342.124 li
cp
358.25 337.124 mo
360 338.874 li
361.75 337.124 li
360 335.374 li
358.25 337.124 li
cp
353.25 337.124 mo
355 338.874 li
356.75 337.124 li
355 335.374 li
353.25 337.124 li
cp
348.25 337.124 mo
350 338.874 li
351.75 337.124 li
350 335.374 li
348.25 337.124 li
cp
343.25 337.124 mo
345 338.874 li
346.75 337.124 li
345 335.374 li
343.25 337.124 li
cp
338.25 337.124 mo
340 338.874 li
341.75 337.124 li
340 335.374 li
338.25 337.124 li
cp
333.25 337.124 mo
335 338.874 li
336.75 337.124 li
335 335.374 li
333.25 337.124 li
cp
328.25 337.124 mo
330 338.874 li
331.75 337.124 li
330 335.374 li
328.25 337.124 li
cp
323.25 337.124 mo
325 338.874 li
326.75 337.124 li
325 335.374 li
323.25 337.124 li
cp
318.25 337.124 mo
320 338.874 li
321.75 337.124 li
320 335.374 li
318.25 337.124 li
cp
313.25 337.124 mo
315 338.874 li
316.75 337.124 li
315 335.374 li
313.25 337.124 li
cp
308.25 337.124 mo
310 338.874 li
311.75 337.124 li
310 335.374 li
308.25 337.124 li
cp
303.25 337.124 mo
305 338.874 li
306.75 337.124 li
305 335.374 li
303.25 337.124 li
cp
298.25 337.124 mo
300 338.874 li
301.75 337.124 li
300 335.374 li
298.25 337.124 li
cp
343.25 332.124 mo
345 333.874 li
346.75 332.124 li
345 330.374 li
343.25 332.124 li
cp
338.25 332.124 mo
340 333.874 li
341.75 332.124 li
340 330.374 li
338.25 332.124 li
cp
333.25 332.124 mo
335 333.874 li
336.75 332.124 li
335 330.374 li
333.25 332.124 li
cp
328.25 332.124 mo
330 333.874 li
331.75 332.124 li
330 330.374 li
328.25 332.124 li
cp
323.25 332.124 mo
325 333.874 li
326.75 332.124 li
325 330.374 li
323.25 332.124 li
cp
318.25 332.124 mo
320 333.874 li
321.75 332.124 li
320 330.374 li
318.25 332.124 li
cp
313.25 332.124 mo
315 333.874 li
316.75 332.124 li
315 330.374 li
313.25 332.124 li
cp
328.25 322.124 mo
330 323.874 li
331.75 322.124 li
330 320.374 li
328.25 322.124 li
cp
f
554.936 321.263 mo
554.894 321.263 554.851 321.259 554.808 321.252 cv
554.399 321.182 554.125 320.794 554.195 320.386 cv
554.457 318.858 554.701 317.285 554.921 315.712 cv
554.979 315.302 555.353 315.013 555.768 315.072 cv
556.178 315.13 556.464 315.509 556.407 315.919 cv
556.185 317.508 555.938 319.096 555.674 320.64 cv
555.611 321.005 555.294 321.263 554.936 321.263 cv
cp
f
553.951 296.4 mo
553.951 307.015 549.487 334.803 543.98 334.803 cv
538.474 334.803 534.01 307.015 534.01 296.4 cv
534.01 287.055 538.474 284.803 543.98 284.803 cv
549.487 284.803 553.951 287.055 553.951 296.4 cv
cp
.638849 .295933 0 0 cmyk
f
543.98 285.553 mo
539.688 285.553 534.76 286.785 534.76 296.399 cv
534.76 307.926 539.485 334.053 543.98 334.053 cv
548.476 334.053 553.201 307.926 553.201 296.399 cv
553.201 286.785 548.273 285.553 543.98 285.553 cv
cp
543.98 335.553 mo
537.163 335.553 533.26 304.782 533.26 296.399 cv
533.26 288.092 536.767 284.053 543.98 284.053 cv
551.194 284.053 554.701 288.092 554.701 296.399 cv
554.701 304.782 550.798 335.553 543.98 335.553 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
549.461 291.178 mo
549.461 297.013 547.007 312.288 543.98 312.288 cv
540.953 312.288 538.499 297.013 538.499 291.178 cv
538.499 286.041 540.953 284.803 543.98 284.803 cv
547.007 284.803 549.461 286.041 549.461 291.178 cv
cp
f
552.7 281.474 mo
535.362 281.474 li
535.362 283.92 li
535.365 283.92 li
535.365 283.943 535.362 283.966 535.362 283.989 cv
535.362 286.777 539.243 289.038 544.031 289.038 cv
548.819 289.038 552.7 286.777 552.7 283.989 cv
552.7 283.966 552.698 283.943 552.697 283.92 cv
552.7 283.92 li
552.7 281.474 li
cp
0 0 0 0 cmyk
f
536.112 283.17 mo
536.144 283.17 li
536.114 283.951 li
536.112 286.319 539.738 288.287 544.031 288.287 cv
548.324 288.287 551.95 286.319 551.95 283.989 cv
551.95 282.224 li
536.112 282.224 li
536.112 283.17 li
cp
544.031 289.787 mo
539.124 289.787 535.205 287.589 534.674 284.67 cv
534.615 284.67 li
534.613 284.052 li
534.612 284.031 534.612 284.011 534.612 283.989 cv
534.612 280.724 li
553.45 280.724 li
553.45 284.67 li
553.376 284.67 li
552.809 287.616 548.907 289.787 544.031 289.787 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
520.544 227.398 mo
519.179 233.537 512.142 254.555 507.414 253.504 cv
502.686 252.453 501.744 229.793 503.423 223.593 cv
504.871 218.249 509.119 215.497 513.847 216.548 cv
518.575 217.598 521.745 221.993 520.544 227.398 cv
cp
0 0 0 0 cmyk
f
511.877 217.077 mo
508.231 217.077 505.269 219.648 504.146 223.789 cv
502.652 229.309 503.325 246.607 506.353 251.614 cv
506.757 252.283 507.181 252.684 507.577 252.771 cv
507.638 252.785 507.698 252.792 507.763 252.792 cv
511.443 252.792 518.118 234.857 519.812 227.234 cv
520.343 224.845 519.989 222.602 518.789 220.747 cv
517.652 218.99 515.839 217.759 513.684 217.28 cv
513.077 217.146 512.47 217.077 511.877 217.077 cv
cp
507.763 254.292 mo
507.59 254.292 507.418 254.273 507.251 254.236 cv
506.434 254.055 505.699 253.434 505.068 252.391 cv
501.627 246.698 501.264 228.698 502.699 223.396 cv
504.006 218.573 507.523 215.577 511.877 215.577 cv
512.579 215.577 513.296 215.657 514.01 215.815 cv
516.551 216.381 518.696 217.843 520.049 219.933 cv
521.451 222.1 521.888 224.809 521.276 227.561 cv
520.57 230.735 513.737 254.292 507.763 254.292 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
582.616 218.172 mo
582.616 239.51 565.318 284.192 543.98 284.192 cv
522.642 284.192 505.344 239.51 505.344 218.172 cv
505.344 199.388 522.642 194.863 543.98 194.863 cv
565.318 194.863 582.616 199.388 582.616 218.172 cv
cp
level3{
gsave
clp
[79.8226 -12.0847 12.0847 79.8226 504.009 245.029 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h
3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h
3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h
3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h3ar'h
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~3ar'h3ar'h3FMmf3FDge3*uXc2dQIa2dHC`2I$4^2-U%\2-Kt[1fs_X1KOPV10";S0iS,Q0N.rO02V]L
02MWK/l)HI/PQ3F/5-$D.nTdA.S0U?.7X@<-q41:-U[q7-:7b5,s_M2,X28/,<c)-,!5i*+ZfZ(+?0?$
*]F'!*Amfs*&@Qp)_h<m)D;'j)(kmh(b>Xe(FfCb(+B4`'dit]'I<_Z'-dJW&g75T&Kh&R&0:fO%NGHK
%2o3H$lAsE$Pi^B$P`XA$53C>#S@%:#7^_6"q1J3"UY50"UG).":"o,!sJZ)!WrE&!<N6$z!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzz!<E0#!<E0#!<N6$!WrE&!WrE&!sAT(!sJZ)!sS`*"9ni+":"o,":+u-":5&."UY50"Ub;1"q1J3
"qCV5#7ge7#7pk8#SI+;#nm:=#o!@>$5NUA$5W[B$Q&jD$Q9!F$l]0H%3,?J%35EK%NbZN%j1iP&0V#R
&L.8U&L7>V&gdSY'.3b['.En]'Ij(_'e97a(+fLd(G5[f(G>ag(bl!j));0l)DhEo)`@Zr*&dit*B=*"
*]j?%+$BT(+?oi++[H).,!l80,=DM3,t.e6-:\%9-V4:<-qXI>.80^A.S]sD~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~LSt1QLSt1QLSt1QLSk+PL8P"OL8P"OKr+hMKr"bLKV\YKK;8JIJti;GJti;GJYE,EJ=urCJ"QcAI\-T?
I%C<<H^t-:HCOs8H(+d6GFAL3G*i70FI)t-Eg?\*EKgG'Dj(/$DNXu"CleVsC6&>pBoN)mB8Z`iAr6Qg
A;C3c@tjs`@>+[]@"SFZ?@`(V?%;nT>CHPP=aU2L=F'rI<d4TE<-J<B;KVs>:icU::2p769lC"395X_0
8SeA,7qr#(7;)Z$6=g,s5[sco5%+Ek4CA-h3F2[c2d?=_2-Kt[1fs_X10";S0N.rO/l;TK/5H6G.S]sD
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~LSt1QLSt1QLSk+PL8P"OL8P"OKr+hMKVe_LKVe_LK;APJJu&GIJtrAHJYW8GJ>3)EJ>3)EJ"coCI\HfB
IA-]AI%^N?H_:?=HCt6<H(P':H(P':Gb+m8GFed7G+AU5Fe&L4FIW=2F.<41Egm%/ELHk-E1-b,Dj^S*
DOCJ)D3t;'CmP,%CR5#$C6ei"BpAYuBU&PtB9WArAs32pAWm)oAWd#nA<?ilA!$`k@ZUQi@?1Bg@#k9f
?]G*d?B"pb?&\ga?&Sa`>`/R^>DiI]>)E:[=c!+Y=G["X=,6hV<egYT<JLPS</(AQ</(AQ;hY2O;M5#M
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.010101 .19697 .358586 .611111 ]
/Encode [0 1 0 1 0 1 1 0 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.8226 -12.0847 12.0847 79.8226 504.009 245.029 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~3B9)[3B/rU2)I-F0eb44/M&A#-mg5c+sA'L*#fb4(DRVt&J,E]$OR4G"pG,3!WW3#z!<N<)!sA`1"pYD
?#mq%K%1a!^&ebrp(Dn&0*?H=H,:+]c.P*2+1,LjI3'08f5t"158k_rT;,^Ir=B\s8?=72OA7fIgC2@d
+EH6/EGBnL\H[U?mJ:W9'K7no3Knb>:L5(G;L5(D9KnP)2K7ec,JUr?%It)rsIXQTkH[:!`H$FRYGBS.
PFEDSFEcH)<Df9N2D/=$(C2.HrBP1siAS#C_A7K(X@:<PN?X@#D>[1N<>?Y04=BAR)<`N*u;c?Um~>
<~@:<SQ@:*>H>?Y-0<)ZUh9h\,K7RKI+4ZbV]1bgU7.OZVg+<MRA(DRSp$jm4D!s&B%!!!!"!X&Z2#71_G
%M06e()Rr0*ZuXP-7LDr0/5:A3BTMl6q0a@:/=_c<ENF0?!guKA7oUlD/O<5FEVkRH[UBoJV/Z2Ll.+M
O-#NgPa7Z'R[]h;SXuIHTq\9VUnjiaVP^8hVl-GjVP^5fVPU,cV59u`Una][U8"BUTqS0RTV%jKT:VXG
SXl=AS=H(<S!oe6R@0G0R$X/*QBmf#Pa%DrP*1ujOcYZdO,o<]NfB!VN/W[PMMd7ILkpkBLPCP<KnY56
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
582.616 218.172 mo
582.616 239.51 565.318 284.192 543.98 284.192 cv
522.642 284.192 505.344 239.51 505.344 218.172 cv
505.344 199.388 522.642 194.863 543.98 194.863 cv
565.318 194.863 582.616 199.388 582.616 218.172 cv
cp
0 0 0 0 cmyk
f
543.98 195.612 mo
518.133 195.612 506.095 202.781 506.095 218.172 cv
506.095 239.664 523.632 283.442 543.98 283.442 cv
564.329 283.442 581.866 239.664 581.866 218.172 cv
581.866 202.781 569.828 195.612 543.98 195.612 cv
cp
543.98 284.942 mo
522.427 284.942 504.595 240.734 504.595 218.172 cv
504.595 196.606 527.073 194.112 543.98 194.112 cv
560.888 194.112 583.366 196.606 583.366 218.172 cv
583.366 240.734 565.534 284.942 543.98 284.942 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
529.188 270.404 mo
528.97 270.404 528.752 270.309 528.604 270.125 cv
524.127 264.563 519.765 256.708 516.32 248.005 cv
516.168 247.619 516.356 247.184 516.741 247.031 cv
517.129 246.878 517.563 247.068 517.715 247.452 cv
521.105 256.02 525.388 263.737 529.772 269.184 cv
530.032 269.507 529.981 269.979 529.659 270.238 cv
529.521 270.35 529.354 270.404 529.188 270.404 cv
cp
f
537.72 278.128 mo
537.596 278.128 537.469 278.097 537.353 278.031 cv
535.433 276.95 533.475 275.402 531.534 273.431 cv
531.243 273.135 531.247 272.66 531.542 272.37 cv
531.837 272.077 532.312 272.083 532.603 272.378 cv
534.445 274.25 536.291 275.712 538.089 276.725 cv
538.449 276.928 538.577 277.385 538.374 277.746 cv
538.236 277.99 537.982 278.128 537.72 278.128 cv
cp
f
581.987 215.117 mo
581.987 227.31 565.012 237.195 544.073 237.195 cv
523.134 237.195 506.159 227.31 506.159 215.117 cv
506.159 202.923 523.134 193.038 544.073 193.038 cv
565.012 193.038 581.987 202.923 581.987 215.117 cv
cp
.638849 .295933 0 0 cmyk
f
544.073 193.788 mo
523.581 193.788 506.909 203.356 506.909 215.117 cv
506.909 226.878 523.581 236.445 544.073 236.445 cv
564.565 236.445 581.237 226.878 581.237 215.117 cv
581.237 203.356 564.565 193.788 544.073 193.788 cv
cp
544.073 237.945 mo
522.754 237.945 505.409 227.705 505.409 215.117 cv
505.409 202.529 522.754 192.288 544.073 192.288 cv
565.393 192.288 582.737 202.529 582.737 215.117 cv
582.737 227.705 565.393 237.945 544.073 237.945 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
591.595 169.085 mo
591.287 169.085 590.999 168.895 590.889 168.589 cv
588.117 160.882 583.408 153.899 577.271 148.396 cv
576.963 148.12 576.937 147.646 577.213 147.337 cv
577.491 147.028 577.965 147.004 578.272 147.279 cv
584.595 152.948 589.445 160.141 592.301 168.082 cv
592.44 168.472 592.238 168.901 591.849 169.041 cv
591.765 169.071 591.679 169.085 591.595 169.085 cv
cp
f
573.882 145.433 mo
573.729 145.433 573.573 145.386 573.439 145.288 cv
571.516 143.879 569.479 142.601 567.388 141.49 cv
567.021 141.296 566.883 140.842 567.077 140.476 cv
567.271 140.111 567.724 139.973 568.091 140.165 cv
570.246 141.31 572.344 142.626 574.326 144.078 cv
574.66 144.322 574.732 144.792 574.488 145.125 cv
574.341 145.326 574.113 145.433 573.882 145.433 cv
cp
f
589.547 185.333 mo
589.547 210.385 569.238 230.693 544.186 230.693 cv
519.135 230.693 498.826 210.385 498.826 185.333 cv
498.826 160.281 519.135 139.973 544.186 139.973 cv
569.238 139.973 589.547 160.281 589.547 185.333 cv
cp
0 0 0 0 cmyk
f
544.187 140.723 mo
519.588 140.723 499.576 160.735 499.576 185.333 cv
499.576 209.932 519.588 229.943 544.187 229.943 cv
568.785 229.943 588.797 209.932 588.797 185.333 cv
588.797 160.735 568.785 140.723 544.187 140.723 cv
cp
544.187 231.443 mo
518.761 231.443 498.076 210.759 498.076 185.333 cv
498.076 159.908 518.761 139.223 544.187 139.223 cv
569.612 139.223 590.297 159.908 590.297 185.333 cv
590.297 210.759 569.612 231.443 544.187 231.443 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
501.493 195.09 mo
501.493 195.09 li
510.992 207.342 524.345 214.794 539.07 216.061 cv
539.07 216.061 li
543.035 216.402 546.634 212.524 546.634 207.911 cv
546.634 194.323 li
546.634 188.257 543.178 183.255 538.125 182.002 cv
538.125 182.002 li
527.475 179.363 517.804 173.621 509.996 165.299 cv
509.996 165.299 li
508.148 163.33 504.979 164.134 503.748 166.933 cv
501.226 172.665 499.543 178.899 498.896 185.392 cv
498.536 189.011 499.494 192.511 501.493 195.09 cv
cp
.638849 .295933 0 0 cmyk
f
507.533 164.963 mo
506.258 164.963 505.041 165.854 504.435 167.234 cv
501.882 173.039 500.27 179.173 499.643 185.467 cv
499.306 188.853 500.196 192.192 502.086 194.63 cv
511.458 206.719 524.616 214.064 539.135 215.313 cv
540.884 215.459 542.636 214.663 543.943 213.162 cv
545.177 211.746 545.884 209.832 545.884 207.91 cv
545.884 194.323 li
545.884 188.565 542.693 183.907 537.944 182.73 cv
527.186 180.064 517.332 174.214 509.449 165.813 cv
508.928 165.257 508.266 164.963 507.533 164.963 cv
cp
539.557 216.831 mo
539.557 216.831 li
539.374 216.831 539.19 216.823 539.006 216.808 cv
524.065 215.522 510.532 207.973 500.9 195.549 cv
498.777 192.811 497.775 189.082 498.15 185.318 cv
498.793 178.867 500.445 172.579 503.062 166.631 cv
503.907 164.707 505.663 163.463 507.533 163.463 cv
508.674 163.463 509.742 163.933 510.543 164.786 cv
518.228 172.977 527.828 178.678 538.306 181.274 cv
543.735 182.62 547.384 187.863 547.384 194.323 cv
547.384 207.91 li
547.384 210.223 546.563 212.438 545.074 214.147 cv
543.588 215.854 541.577 216.831 539.557 216.831 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
541.32 213.393 mo
526.595 212.127 513.242 204.675 503.743 192.423 cv
503.743 192.423 li
501.744 189.844 500.786 186.344 501.146 182.725 cv
501.779 176.373 503.409 170.271 505.841 164.642 cv
504.981 165.085 504.221 165.858 503.748 166.933 cv
501.226 172.665 499.543 178.899 498.896 185.393 cv
498.536 189.011 499.494 192.511 501.493 195.09 cv
501.493 195.09 li
510.992 207.342 524.345 214.794 539.07 216.061 cv
541.738 216.29 544.234 214.605 545.586 212.076 cv
544.345 213.015 542.862 213.526 541.32 213.393 cv
cp
f
584.244 244.334 mo
584.244 250.163 579.518 254.889 573.688 254.889 cv
567.858 254.889 563.132 250.163 563.132 244.334 cv
563.132 238.504 567.858 233.778 573.688 233.778 cv
579.518 233.778 584.244 238.504 584.244 244.334 cv
cp
.638849 .295933 0 0 cmyk
f
573.688 234.528 mo
568.281 234.528 563.883 238.927 563.883 244.334 cv
563.883 249.741 568.281 254.14 573.688 254.14 cv
579.095 254.14 583.493 249.741 583.493 244.334 cv
583.493 238.927 579.095 234.528 573.688 234.528 cv
cp
573.688 255.64 mo
567.454 255.64 562.383 250.568 562.383 244.334 cv
562.383 238.1 567.454 233.028 573.688 233.028 cv
579.922 233.028 584.993 238.1 584.993 244.334 cv
584.993 250.568 579.922 255.64 573.688 255.64 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
583.122 249.014 mo
581.781 256.952 570.633 274.394 565.905 273.344 cv
561.178 272.293 565.396 250.81 566.76 244.67 cv
567.961 239.265 572.456 236.574 577.184 237.625 cv
581.911 238.675 584.043 243.555 583.122 249.014 cv
cp
0 0 0 0 cmyk
f
575.175 238.15 mo
571.41 238.15 568.394 240.773 567.492 244.833 cv
564.608 257.812 563.129 271.958 566.068 272.611 cv
566.15 272.63 566.239 272.64 566.333 272.64 cv
570.692 272.64 581.14 256.249 582.382 248.89 cv
583.291 243.504 581.137 239.271 577.021 238.357 cv
576.404 238.22 575.784 238.15 575.175 238.15 cv
cp
566.333 274.14 mo
566.13 274.14 565.932 274.118 565.742 274.076 cv
560.337 272.874 564.141 252.997 566.027 244.507 cv
567.088 239.734 570.679 236.65 575.175 236.65 cv
575.893 236.65 576.623 236.732 577.347 236.893 cv
582.217 237.975 584.896 243.011 583.86 249.14 cv
582.57 256.782 571.907 274.14 566.333 274.14 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
570.588 265.657 mo
570.429 265.657 570.268 265.606 570.131 265.501 cv
569.803 265.248 569.742 264.777 569.995 264.449 cv
571.721 262.21 573.474 259.527 574.932 256.895 cv
575.132 256.532 575.589 256.402 575.951 256.602 cv
576.313 256.803 576.444 257.259 576.244 257.621 cv
574.75 260.317 572.953 263.068 571.183 265.365 cv
571.035 265.557 570.813 265.657 570.588 265.657 cv
cp
f
544.019 155.886 mo
543.604 155.886 543.269 155.55 543.269 155.136 cv
543.269 154.722 543.604 154.386 544.019 154.386 cv
545.203 154.386 546.354 154.269 547.439 154.039 cv
547.843 153.95 548.243 154.21 548.329 154.616 cv
548.415 155.021 548.157 155.419 547.752 155.505 cv
546.563 155.758 545.308 155.886 544.019 155.886 cv
cp
f
549.927 154.82 mo
549.629 154.82 549.348 154.642 549.23 154.348 cv
549.076 153.964 549.264 153.527 549.648 153.374 cv
551.929 152.461 553.583 151.001 554.305 149.263 cv
554.463 148.88 554.903 148.698 555.284 148.857 cv
555.667 149.017 555.849 149.455 555.689 149.838 cv
554.812 151.953 552.864 153.703 550.205 154.766 cv
550.114 154.803 550.02 154.82 549.927 154.82 cv
cp
f
552.461 147.22 mo
552.461 149.935 548.681 152.136 544.018 152.136 cv
539.355 152.136 535.575 149.935 535.575 147.22 cv
535.575 144.504 539.355 142.303 544.018 142.303 cv
548.681 142.303 552.461 144.504 552.461 147.22 cv
cp
.638849 .295933 0 0 cmyk
f
544.019 143.053 mo
539.849 143.053 536.325 144.961 536.325 147.22 cv
536.325 149.478 539.849 151.386 544.019 151.386 cv
548.188 151.386 551.712 149.478 551.712 147.22 cv
551.712 144.961 548.188 143.053 544.019 143.053 cv
cp
544.019 152.886 mo
538.863 152.886 534.825 150.397 534.825 147.22 cv
534.825 144.042 538.863 141.553 544.019 141.553 cv
549.174 141.553 553.212 144.042 553.212 147.22 cv
553.212 150.397 549.174 152.886 544.019 152.886 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
546.047 129.205 mo
541.989 129.205 li
541.989 147.095 li
541.989 147.748 542.898 148.277 544.018 148.277 cv
545.139 148.277 546.047 147.748 546.047 147.095 cv
546.047 129.205 li
cp
0 0 0 0 cmyk
f
542.739 129.955 mo
542.739 147.095 li
542.775 147.207 543.227 147.527 544.019 147.527 cv
544.81 147.527 545.261 147.206 545.299 147.084 cv
545.298 129.955 li
542.739 129.955 li
cp
544.019 149.027 mo
542.435 149.027 541.239 148.196 541.239 147.095 cv
541.239 128.455 li
546.798 128.455 li
546.798 147.095 li
546.798 148.196 545.603 149.027 544.019 149.027 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
527.988 130.47 mo
527.574 130.47 527.238 130.134 527.238 129.72 cv
527.238 120.467 534.766 112.939 544.019 112.939 cv
544.433 112.939 544.769 113.275 544.769 113.689 cv
544.769 114.104 544.433 114.439 544.019 114.439 cv
535.593 114.439 528.738 121.294 528.738 129.72 cv
528.738 130.134 528.402 130.47 527.988 130.47 cv
cp
f
532.988 130.47 mo
532.574 130.47 532.238 130.134 532.238 129.72 cv
532.238 123.224 537.522 117.939 544.019 117.939 cv
544.433 117.939 544.769 118.275 544.769 118.689 cv
544.769 119.104 544.433 119.439 544.019 119.439 cv
538.35 119.439 533.738 124.051 533.738 129.72 cv
533.738 130.134 533.402 130.47 532.988 130.47 cv
cp
f
550.049 129.721 mo
550.049 133.051 547.349 135.751 544.018 135.751 cv
540.688 135.751 537.988 133.051 537.988 129.721 cv
537.988 126.39 540.688 123.69 544.018 123.69 cv
547.349 123.69 550.049 126.39 550.049 129.721 cv
cp
0 0 0 0 cmyk
f
544.019 124.44 mo
541.106 124.44 538.737 126.809 538.737 129.721 cv
538.737 132.632 541.106 135.001 544.019 135.001 cv
546.93 135.001 549.299 132.632 549.299 129.721 cv
549.299 126.809 546.93 124.44 544.019 124.44 cv
cp
544.019 136.501 mo
540.279 136.501 537.237 133.459 537.237 129.721 cv
537.237 125.982 540.279 122.94 544.019 122.94 cv
547.757 122.94 550.799 125.982 550.799 129.721 cv
550.799 133.459 547.757 136.501 544.019 136.501 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
541.987 130.47 mo
541.573 130.47 541.237 130.134 541.237 129.72 cv
541.237 128.187 542.485 126.94 544.019 126.94 cv
544.433 126.94 544.769 127.276 544.769 127.69 cv
544.769 128.104 544.433 128.44 544.019 128.44 cv
543.313 128.44 542.737 129.014 542.737 129.72 cv
542.737 130.134 542.401 130.47 541.987 130.47 cv
cp
f
552.921 274.386 mo
554.671 276.136 li
556.421 274.386 li
554.671 272.636 li
552.921 274.386 li
cp
547.921 274.386 mo
549.671 276.136 li
551.421 274.386 li
549.671 272.636 li
547.921 274.386 li
cp
557.921 269.386 mo
559.671 271.136 li
561.421 269.386 li
559.671 267.636 li
557.921 269.386 li
cp
552.921 269.386 mo
554.671 271.136 li
556.421 269.386 li
554.671 267.636 li
552.921 269.386 li
cp
547.921 269.386 mo
549.671 271.136 li
551.421 269.386 li
549.671 267.636 li
547.921 269.386 li
cp
557.921 264.386 mo
559.671 266.136 li
561.421 264.386 li
559.671 262.636 li
557.921 264.386 li
cp
552.921 264.386 mo
554.671 266.136 li
556.421 264.386 li
554.671 262.636 li
552.921 264.386 li
cp
557.921 259.386 mo
559.671 261.136 li
561.421 259.386 li
559.671 257.636 li
557.921 259.386 li
cp
552.921 259.386 mo
554.671 261.136 li
556.421 259.386 li
554.671 257.636 li
552.921 259.386 li
cp
557.921 254.386 mo
559.671 256.136 li
561.421 254.386 li
559.671 252.636 li
557.921 254.386 li
cp
547.921 279.386 mo
549.671 281.136 li
551.421 279.386 li
549.671 277.636 li
547.921 279.386 li
cp
542.921 279.386 mo
544.671 281.136 li
546.421 279.386 li
544.671 277.636 li
542.921 279.386 li
cp
.638849 .295933 0 0 cmyk
f
578.921 200.22 mo
580.671 201.97 li
582.421 200.22 li
580.671 198.47 li
578.921 200.22 li
cp
573.921 200.22 mo
575.671 201.97 li
577.421 200.22 li
575.671 198.47 li
573.921 200.22 li
cp
568.921 200.22 mo
570.671 201.97 li
572.421 200.22 li
570.671 198.47 li
568.921 200.22 li
cp
563.921 200.22 mo
565.671 201.97 li
567.421 200.22 li
565.671 198.47 li
563.921 200.22 li
cp
578.921 195.22 mo
580.671 196.97 li
582.421 195.22 li
580.671 193.47 li
578.921 195.22 li
cp
573.921 195.22 mo
575.671 196.97 li
577.421 195.22 li
575.671 193.47 li
573.921 195.22 li
cp
568.921 195.22 mo
570.671 196.97 li
572.421 195.22 li
570.671 193.47 li
568.921 195.22 li
cp
583.921 190.22 mo
585.671 191.97 li
587.421 190.22 li
585.671 188.47 li
583.921 190.22 li
cp
578.921 190.22 mo
580.671 191.97 li
582.421 190.22 li
580.671 188.47 li
578.921 190.22 li
cp
573.921 190.22 mo
575.671 191.97 li
577.421 190.22 li
575.671 188.47 li
573.921 190.22 li
cp
583.921 185.22 mo
585.671 186.97 li
587.421 185.22 li
585.671 183.47 li
583.921 185.22 li
cp
578.921 185.22 mo
580.671 186.97 li
582.421 185.22 li
580.671 183.47 li
578.921 185.22 li
cp
573.921 185.22 mo
575.671 186.97 li
577.421 185.22 li
575.671 183.47 li
573.921 185.22 li
cp
583.921 180.22 mo
585.671 181.97 li
587.421 180.22 li
585.671 178.47 li
583.921 180.22 li
cp
578.921 180.22 mo
580.671 181.97 li
582.421 180.22 li
580.671 178.47 li
578.921 180.22 li
cp
573.921 180.22 mo
575.671 181.97 li
577.421 180.22 li
575.671 178.47 li
573.921 180.22 li
cp
578.921 175.22 mo
580.671 176.97 li
582.421 175.22 li
580.671 173.47 li
578.921 175.22 li
cp
553.921 225.22 mo
555.671 226.97 li
557.421 225.22 li
555.671 223.47 li
553.921 225.22 li
cp
548.921 225.22 mo
550.671 226.97 li
552.421 225.22 li
550.671 223.47 li
548.921 225.22 li
cp
543.921 225.22 mo
545.671 226.97 li
547.421 225.22 li
545.671 223.47 li
543.921 225.22 li
cp
538.921 225.22 mo
540.671 226.97 li
542.421 225.22 li
540.671 223.47 li
538.921 225.22 li
cp
563.921 220.22 mo
565.671 221.97 li
567.421 220.22 li
565.671 218.47 li
563.921 220.22 li
cp
558.921 220.22 mo
560.671 221.97 li
562.421 220.22 li
560.671 218.47 li
558.921 220.22 li
cp
553.921 220.22 mo
555.671 221.97 li
557.421 220.22 li
555.671 218.47 li
553.921 220.22 li
cp
548.921 220.22 mo
550.671 221.97 li
552.421 220.22 li
550.671 218.47 li
548.921 220.22 li
cp
568.921 215.22 mo
570.671 216.97 li
572.421 215.22 li
570.671 213.47 li
568.921 215.22 li
cp
563.921 215.22 mo
565.671 216.97 li
567.421 215.22 li
565.671 213.47 li
563.921 215.22 li
cp
558.921 215.22 mo
560.671 216.97 li
562.421 215.22 li
560.671 213.47 li
558.921 215.22 li
cp
573.921 210.22 mo
575.671 211.97 li
577.421 210.22 li
575.671 208.47 li
573.921 210.22 li
cp
568.921 210.22 mo
570.671 211.97 li
572.421 210.22 li
570.671 208.47 li
568.921 210.22 li
cp
563.921 210.22 mo
565.671 211.97 li
567.421 210.22 li
565.671 208.47 li
563.921 210.22 li
cp
558.921 210.22 mo
560.671 211.97 li
562.421 210.22 li
560.671 208.47 li
558.921 210.22 li
cp
578.921 205.22 mo
580.671 206.97 li
582.421 205.22 li
580.671 203.47 li
578.921 205.22 li
cp
573.921 205.22 mo
575.671 206.97 li
577.421 205.22 li
575.671 203.47 li
573.921 205.22 li
cp
568.921 205.22 mo
570.671 206.97 li
572.421 205.22 li
570.671 203.47 li
568.921 205.22 li
cp
563.921 205.22 mo
565.671 206.97 li
567.421 205.22 li
565.671 203.47 li
563.921 205.22 li
cp
f
552.396 344.377 mo
552.211 344.377 552.026 344.309 551.881 344.172 cv
551.58 343.888 551.567 343.413 551.852 343.111 cv
552.435 342.495 552.938 341.69 553.347 340.722 cv
553.509 340.341 553.95 340.164 554.33 340.322 cv
554.711 340.483 554.891 340.924 554.729 341.306 cv
554.25 342.44 553.648 343.395 552.941 344.143 cv
552.794 344.298 552.596 344.377 552.396 344.377 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
547.112 347.459 mo
546.024 347.459 545.119 347.013 544.527 346.339 cv
543.293 344.934 543.206 342.31 545.798 339.616 cv
549.929 335.322 552.012 329.159 553.365 324.27 cv
553.476 323.871 553.881 323.635 554.288 323.747 cv
554.688 323.857 554.921 324.271 554.811 324.67 cv
553.41 329.729 551.243 336.119 546.878 340.656 cv
544.958 342.652 544.897 344.488 545.654 345.35 cv
546.32 346.106 547.758 346.306 549.475 345.034 cv
549.812 344.785 550.279 344.859 550.523 345.19 cv
550.771 345.523 550.7 345.993 550.367 346.239 cv
549.198 347.104 548.082 347.459 547.112 347.459 cv
cp
f
509.805 181.387 mo
510.965 182.057 511.96 183.424 512.416 184.823 cv
512.585 184.5 512.685 184.094 512.685 183.601 cv
512.685 181.776 511.395 179.552 509.805 178.633 cv
508.214 177.715 506.925 178.45 506.925 180.275 cv
506.925 180.769 507.025 181.29 507.194 181.808 cv
507.65 180.936 508.644 180.717 509.805 181.387 cv
cp
f
533.085 194.828 mo
534.245 195.498 535.239 196.864 535.695 198.263 cv
535.864 197.94 535.964 197.535 535.964 197.041 cv
535.964 195.216 534.675 192.992 533.085 192.074 cv
531.494 191.156 530.205 191.891 530.205 193.716 cv
530.205 194.209 530.305 194.731 530.474 195.248 cv
530.93 194.376 531.924 194.158 533.085 194.828 cv
cp
f
521.69 199.318 mo
521.69 201.641 520.45 202.808 518.921 201.925 cv
517.392 201.042 516.152 198.444 516.152 196.121 cv
516.152 193.799 517.392 192.632 518.921 193.515 cv
520.45 194.397 521.69 196.996 521.69 199.318 cv
cp
f
519.921 199.297 mo
519.921 200.136 519.473 200.557 518.921 200.238 cv
518.369 199.92 517.921 198.981 517.921 198.142 cv
517.921 197.304 518.369 196.882 518.921 197.201 cv
519.473 197.52 519.921 198.458 519.921 199.297 cv
cp
0 0 0 0 cmyk
f
104.014 244.14 mo
104.014 253.374 107.897 277.545 112.687 277.545 cv
117.477 277.545 121.36 253.374 121.36 244.14 cv
121.36 236.011 117.477 234.053 112.687 234.053 cv
107.897 234.053 104.014 236.011 104.014 244.14 cv
cp
.638849 .295933 0 0 cmyk
f
112.687 234.803 mo
108.999 234.803 104.765 235.864 104.765 244.14 cv
104.765 254.933 109.122 276.796 112.687 276.796 cv
116.253 276.796 120.61 254.933 120.61 244.14 cv
120.61 235.864 116.376 234.803 112.687 234.803 cv
cp
112.687 278.296 mo
106.695 278.296 103.265 251.452 103.265 244.14 cv
103.265 236.848 106.347 233.303 112.687 233.303 cv
119.028 233.303 122.11 236.848 122.11 244.14 cv
122.11 251.452 118.68 278.296 112.687 278.296 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
120.808 279.138 mo
120.75 279.138 120.69 279.131 120.631 279.117 cv
120.229 279.02 119.981 278.615 120.078 278.212 cv
120.456 276.643 120.824 274.972 121.172 273.243 cv
121.253 272.837 121.65 272.577 122.055 272.656 cv
122.461 272.738 122.724 273.134 122.643 273.54 cv
122.291 275.286 121.918 276.976 121.536 278.563 cv
121.454 278.907 121.146 279.138 120.808 279.138 cv
cp
f
112.687 295.296 mo
112.273 295.296 111.937 294.96 111.937 294.546 cv
111.937 294.132 112.273 293.796 112.687 293.796 cv
113.242 293.796 113.848 293.426 114.487 292.694 cv
115.952 291.021 117.48 287.547 118.907 282.645 cv
119.023 282.247 119.44 282.018 119.837 282.135 cv
120.235 282.25 120.463 282.666 120.348 283.064 cv
118.839 288.248 117.247 291.82 115.616 293.683 cv
114.679 294.753 113.693 295.296 112.687 295.296 cv
cp
f
107.12 283.323 mo
106.857 283.323 106.603 283.186 106.465 282.939 cv
104.381 279.223 102.78 273 101.804 268.435 cv
101.718 268.029 101.976 267.631 102.381 267.544 cv
102.787 267.455 103.185 267.716 103.271 268.12 cv
104.64 274.522 106.197 279.394 107.773 282.206 cv
107.976 282.567 107.847 283.025 107.486 283.228 cv
107.37 283.293 107.244 283.323 107.12 283.323 cv
cp
f
107.92 239.598 mo
107.92 244.674 110.054 257.961 112.687 257.961 cv
115.321 257.961 117.455 244.674 117.455 239.598 cv
117.455 235.129 115.321 234.053 112.687 234.053 cv
110.054 234.053 107.92 235.129 107.92 239.598 cv
cp
f
103.968 230.724 mo
121.306 230.724 li
121.306 233.169 li
121.303 233.169 li
121.303 233.193 121.306 233.216 121.306 233.239 cv
121.306 236.027 117.424 238.287 112.637 238.287 cv
107.849 238.287 103.968 236.027 103.968 233.239 cv
103.968 233.216 103.97 233.193 103.971 233.169 cv
103.968 233.169 li
103.968 230.724 li
cp
0 0 0 0 cmyk
f
104.718 232.42 mo
104.734 232.42 li
104.721 233.186 li
104.718 235.569 108.344 237.537 112.637 237.537 cv
116.929 237.537 120.556 235.569 120.556 233.239 cv
120.556 231.474 li
104.718 231.474 li
104.718 232.42 li
cp
112.637 239.037 mo
107.729 239.037 103.811 236.839 103.279 233.92 cv
103.221 233.92 li
103.218 233.302 li
103.218 233.281 103.218 233.261 103.218 233.239 cv
103.218 233.239 li
103.218 229.974 li
122.056 229.974 li
122.056 233.92 li
121.979 233.92 li
121.403 236.872 117.506 239.037 112.637 239.037 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
150.338 208.385 mo
149.994 208.385 149.684 208.147 149.606 207.798 cv
149.517 207.394 149.771 206.992 150.176 206.902 cv
151.404 206.63 153.168 205.809 154.594 203.451 cv
154.808 203.096 155.269 202.983 155.624 203.197 cv
155.979 203.411 156.092 203.872 155.878 204.227 cv
154.178 207.039 152.016 208.03 150.501 208.367 cv
150.446 208.379 150.392 208.385 150.338 208.385 cv
cp
f
156.956 200.437 mo
156.886 200.437 156.814 200.427 156.744 200.406 cv
156.346 200.289 156.119 199.872 156.236 199.475 cv
157.42 195.458 158.156 189.618 158.254 183.452 cv
158.261 183.042 158.595 182.713 159.003 182.713 cv
159.008 182.713 159.012 182.713 159.016 182.713 cv
159.43 182.72 159.76 183.061 159.754 183.475 cv
159.654 189.771 158.896 195.758 157.675 199.899 cv
157.579 200.226 157.28 200.437 156.956 200.437 cv
cp
f
136.124 176.647 mo
137.488 182.787 144.526 203.804 149.254 202.754 cv
153.982 201.703 154.924 179.043 153.245 172.843 cv
151.797 167.499 147.548 164.747 142.821 165.797 cv
138.093 166.848 134.923 171.242 136.124 176.647 cv
cp
0 0 0 0 cmyk
f
144.79 166.326 mo
144.198 166.326 143.59 166.395 142.983 166.529 cv
138.378 167.553 135.802 171.74 136.856 176.484 cv
138.55 184.106 145.225 202.04 148.906 202.042 cv
148.906 202.042 li
148.97 202.042 149.03 202.035 149.091 202.021 cv
149.488 201.934 149.911 201.533 150.316 200.864 cv
153.343 195.856 154.016 178.558 152.521 173.039 cv
151.399 168.898 148.437 166.326 144.79 166.326 cv
cp
148.906 203.542 mo
148.905 203.542 li
142.93 203.539 136.097 179.984 135.392 176.81 cv
134.169 171.307 137.292 166.258 142.658 165.065 cv
143.372 164.907 144.089 164.826 144.79 164.826 cv
149.145 164.826 152.662 167.823 153.969 172.646 cv
155.404 177.948 155.041 195.947 151.6 201.64 cv
150.969 202.684 150.234 203.305 149.417 203.486 cv
149.25 203.523 149.078 203.542 148.906 203.542 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
74.0514 167.422 mo
74.0514 188.76 91.3494 233.442 112.687 233.442 cv
134.026 233.442 151.323 188.76 151.323 167.422 cv
151.323 148.638 134.026 144.112 112.687 144.112 cv
91.3494 144.112 74.0514 148.638 74.0514 167.422 cv
cp
level3{
gsave
clp
[-79.8226 -12.0847 -12.0847 79.8226 152.659 194.278 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-79.8226 -12.0847 -12.0847 79.8226 152.659 194.278 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
74.0514 167.422 mo
74.0514 188.76 91.3494 233.442 112.687 233.442 cv
134.026 233.442 151.323 188.76 151.323 167.422 cv
151.323 148.638 134.026 144.112 112.687 144.112 cv
91.3494 144.112 74.0514 148.638 74.0514 167.422 cv
cp
0 0 0 0 cmyk
f
112.687 144.862 mo
86.8398 144.862 74.8013 152.031 74.8013 167.421 cv
74.8013 188.914 92.3384 232.692 112.687 232.692 cv
133.037 232.692 150.573 188.914 150.573 167.421 cv
150.573 152.031 138.535 144.862 112.687 144.862 cv
cp
112.687 234.192 mo
91.1333 234.192 73.3013 189.984 73.3013 167.421 cv
73.3013 145.856 95.7798 143.362 112.687 143.362 cv
129.595 143.362 152.073 145.856 152.073 167.421 cv
152.073 189.984 134.242 234.192 112.687 234.192 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
108.95 228.529 mo
108.869 228.529 108.785 228.516 108.704 228.487 cv
104.553 227.043 100.31 223.448 96.0938 217.804 cv
95.8462 217.472 95.9141 217.001 96.2461 216.754 cv
96.5786 216.507 97.0483 216.575 97.2959 216.905 cv
101.273 222.23 105.388 225.746 109.197 227.071 cv
109.588 227.207 109.794 227.635 109.659 228.025 cv
109.551 228.335 109.261 228.529 108.95 228.529 cv
cp
f
74.6809 164.366 mo
74.6809 176.56 91.6556 186.445 112.595 186.445 cv
133.534 186.445 150.509 176.56 150.509 164.366 cv
150.509 152.173 133.534 142.288 112.595 142.288 cv
91.6556 142.288 74.6809 152.173 74.6809 164.366 cv
cp
.638849 .295933 0 0 cmyk
f
112.595 143.038 mo
92.1025 143.038 75.4312 152.606 75.4312 164.366 cv
75.4312 176.127 92.1025 185.695 112.595 185.695 cv
133.087 185.695 149.759 176.127 149.759 164.366 cv
149.759 152.606 133.087 143.038 112.595 143.038 cv
cp
112.595 187.195 mo
91.2754 187.195 73.9312 176.954 73.9312 164.366 cv
73.9312 151.779 91.2754 141.538 112.595 141.538 cv
133.914 141.538 151.259 151.779 151.259 164.366 cv
151.259 176.954 133.914 187.195 112.595 187.195 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
160.492 120.117 mo
160.174 120.117 159.879 119.913 159.777 119.594 cv
156.336 108.758 149.175 99.3374 139.614 93.0669 cv
139.267 92.8398 139.17 92.375 139.398 92.0288 cv
139.625 91.6826 140.092 91.5859 140.436 91.813 cv
150.285 98.2715 157.662 107.977 161.207 119.14 cv
161.333 119.535 161.114 119.956 160.719 120.082 cv
160.644 120.105 160.567 120.117 160.492 120.117 cv
cp
f
137.531 91.6563 mo
137.404 91.6563 137.275 91.624 137.158 91.5562 cv
135.289 90.48 133.333 89.5186 131.345 88.6982 cv
130.962 88.54 130.78 88.1016 130.938 87.7188 cv
131.096 87.3364 131.535 87.1548 131.917 87.3115 cv
133.965 88.1567 135.98 89.1475 137.906 90.2563 cv
138.265 90.4629 138.388 90.9214 138.182 91.2803 cv
138.043 91.5215 137.791 91.6563 137.531 91.6563 cv
cp
f
67.1211 134.583 mo
67.1211 159.634 87.4296 179.943 112.481 179.943 cv
137.533 179.943 157.841 159.634 157.841 134.583 cv
157.841 109.531 137.533 89.2226 112.481 89.2226 cv
87.4296 89.2226 67.1211 109.531 67.1211 134.583 cv
cp
0 0 0 0 cmyk
f
112.481 89.9727 mo
87.8833 89.9727 67.8711 109.985 67.8711 134.583 cv
67.8711 159.181 87.8833 179.193 112.481 179.193 cv
137.08 179.193 157.091 159.181 157.091 134.583 cv
157.091 109.985 137.08 89.9727 112.481 89.9727 cv
cp
112.481 180.693 mo
87.0562 180.693 66.3711 160.008 66.3711 134.583 cv
66.3711 109.158 87.0562 88.4727 112.481 88.4727 cv
137.907 88.4727 158.591 109.158 158.591 134.583 cv
158.591 160.008 137.907 180.693 112.481 180.693 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
84.2437 164.144 mo
84.0542 164.144 83.8647 164.072 83.7188 163.929 cv
75.7563 156.124 71.3716 145.701 71.3716 134.583 cv
71.3716 130.642 71.9307 126.744 73.0337 122.995 cv
73.1509 122.597 73.5703 122.373 73.9653 122.487 cv
74.3623 122.604 74.5898 123.021 74.4731 123.418 cv
73.4102 127.029 72.8716 130.786 72.8716 134.583 cv
72.8716 145.295 77.0967 155.337 84.7686 162.858 cv
85.0645 163.148 85.0693 163.623 84.7793 163.918 cv
84.6323 164.068 84.438 164.144 84.2437 164.144 cv
cp
f
96.7813 172.515 mo
96.6836 172.515 96.5845 172.496 96.4888 172.455 cv
93.6382 171.247 90.918 169.709 88.4033 167.887 cv
88.0684 167.644 87.9937 167.174 88.2363 166.839 cv
88.4795 166.503 88.9473 166.43 89.2842 166.672 cv
91.7065 168.428 94.3276 169.91 97.0747 171.074 cv
97.4561 171.236 97.6338 171.676 97.4722 172.058 cv
97.3511 172.343 97.0732 172.515 96.7813 172.515 cv
cp
f
155.175 144.34 mo
155.175 144.34 li
145.676 156.592 132.323 164.044 117.598 165.31 cv
117.598 165.31 li
113.633 165.651 110.034 161.773 110.034 157.16 cv
110.034 143.573 li
110.034 137.507 113.489 132.504 118.543 131.252 cv
118.543 131.252 li
129.193 128.613 138.864 122.871 146.671 114.549 cv
146.671 114.549 li
148.519 112.58 151.689 113.384 152.92 116.182 cv
155.441 121.915 157.125 128.149 157.772 134.642 cv
158.132 138.26 157.174 141.761 155.175 144.34 cv
cp
.638849 .295933 0 0 cmyk
f
149.134 114.212 mo
148.402 114.212 147.74 114.506 147.218 115.062 cv
139.335 123.464 129.482 129.314 118.723 131.98 cv
113.975 133.157 110.784 137.815 110.784 143.573 cv
110.784 157.16 li
110.784 159.082 111.492 160.997 112.725 162.412 cv
114.033 163.913 115.795 164.715 117.533 164.563 cv
132.052 163.314 145.209 155.969 154.582 143.88 cv
156.472 141.442 157.362 138.103 157.025 134.716 cv
156.398 128.422 154.786 122.288 152.233 116.484 cv
151.626 115.104 150.41 114.212 149.134 114.212 cv
cp
117.111 166.082 mo
115.091 166.082 113.081 165.103 111.594 163.397 cv
110.104 161.688 109.284 159.473 109.284 157.16 cv
109.284 143.573 li
109.284 137.114 112.933 131.87 118.363 130.524 cv
128.84 127.928 138.44 122.226 146.125 114.036 cv
146.925 113.182 147.994 112.712 149.134 112.712 cv
151.004 112.712 152.76 113.956 153.606 115.881 cv
156.223 121.829 157.875 128.116 158.518 134.568 cv
158.893 138.332 157.89 142.061 155.768 144.799 cv
146.135 157.223 132.603 164.772 117.663 166.058 cv
117.478 166.074 117.293 166.082 117.111 166.082 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
115.348 162.643 mo
130.073 161.377 143.426 153.925 152.925 141.672 cv
152.925 141.672 li
154.924 139.094 155.882 135.593 155.522 131.975 cv
154.889 125.622 153.259 119.521 150.827 113.892 cv
151.687 114.334 152.447 115.108 152.92 116.183 cv
155.441 121.915 157.125 128.149 157.772 134.642 cv
158.132 138.261 157.174 141.761 155.175 144.34 cv
155.175 144.34 li
145.676 156.592 132.323 164.044 117.598 165.311 cv
114.93 165.54 112.433 163.855 111.082 161.326 cv
112.323 162.264 113.806 162.775 115.348 162.643 cv
cp
f
72.4241 193.583 mo
72.4241 199.413 77.15 204.139 82.9798 204.139 cv
88.8095 204.139 93.5354 199.413 93.5354 193.583 cv
93.5354 187.754 88.8095 183.028 82.9798 183.028 cv
77.15 183.028 72.4241 187.754 72.4241 193.583 cv
cp
.638849 .295933 0 0 cmyk
f
82.98 183.778 mo
77.5732 183.778 73.1743 188.177 73.1743 193.583 cv
73.1743 198.99 77.5732 203.389 82.98 203.389 cv
88.3867 203.389 92.7852 198.99 92.7852 193.583 cv
92.7852 188.177 88.3867 183.778 82.98 183.778 cv
cp
82.98 204.889 mo
76.7461 204.889 71.6743 199.817 71.6743 193.583 cv
71.6743 187.35 76.7461 182.278 82.98 182.278 cv
89.2139 182.278 94.2852 187.35 94.2852 193.583 cv
94.2852 199.817 89.2139 204.889 82.98 204.889 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
73.5463 198.264 mo
74.8865 206.202 86.0348 223.644 90.7625 222.594 cv
95.4902 221.543 91.2722 200.059 89.9078 193.92 cv
88.7068 188.515 84.2117 185.824 79.484 186.874 cv
74.7563 187.925 72.6245 192.805 73.5463 198.264 cv
cp
0 0 0 0 cmyk
f
81.4922 187.4 mo
80.8838 187.4 80.2627 187.47 79.6465 187.606 cv
75.5308 188.521 73.3765 192.754 74.2861 198.139 cv
75.5278 205.498 85.9756 221.889 90.335 221.89 cv
90.335 221.89 li
90.4287 221.89 90.5176 221.88 90.6001 221.861 cv
93.54 221.208 92.0605 207.062 89.1758 194.082 cv
88.2734 190.023 85.2573 187.4 81.4922 187.4 cv
cp
90.335 223.39 mo
90.335 223.39 li
84.7603 223.389 74.0967 206.032 72.8066 198.389 cv
71.772 192.26 74.4507 187.225 79.3213 186.143 cv
80.0439 185.982 80.7744 185.9 81.4922 185.9 cv
85.9883 185.9 89.5791 188.984 90.6396 193.757 cv
92.5269 202.247 96.3325 222.124 90.9253 223.326 cv
90.7363 223.368 90.5376 223.39 90.335 223.39 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
86.0791 214.907 mo
85.8545 214.907 85.6323 214.807 85.4844 214.615 cv
83.7144 212.317 81.917 209.566 80.4233 206.87 cv
80.2227 206.508 80.354 206.052 80.7163 205.851 cv
81.0786 205.651 81.5342 205.781 81.7358 206.144 cv
83.1938 208.776 84.9473 211.46 86.6729 213.699 cv
86.9258 214.027 86.8643 214.499 86.5361 214.751 cv
86.3999 214.856 86.2388 214.907 86.0791 214.907 cv
cp
f
112.649 105.136 mo
111.36 105.136 110.104 105.008 108.916 104.755 cv
108.51 104.669 108.252 104.271 108.338 103.865 cv
108.424 103.46 108.823 103.201 109.228 103.288 cv
110.313 103.519 111.464 103.636 112.649 103.636 cv
113.063 103.636 113.399 103.972 113.399 104.386 cv
113.399 104.8 113.063 105.136 112.649 105.136 cv
cp
f
106.741 104.07 mo
106.648 104.07 106.553 104.053 106.462 104.016 cv
103.803 102.952 101.855 101.202 100.978 99.0874 cv
100.819 98.7046 101.001 98.2656 101.383 98.1069 cv
101.766 97.9478 102.205 98.1294 102.364 98.5122 cv
103.084 100.25 104.738 101.71 107.02 102.624 cv
107.404 102.777 107.591 103.214 107.437 103.599 cv
107.32 103.892 107.038 104.07 106.741 104.07 cv
cp
f
104.206 96.4694 mo
104.206 99.1848 107.986 101.386 112.649 101.386 cv
117.312 101.386 121.092 99.1848 121.092 96.4694 cv
121.092 93.754 117.312 91.5528 112.649 91.5528 cv
107.986 91.5528 104.206 93.754 104.206 96.4694 cv
cp
.638849 .295933 0 0 cmyk
f
112.649 92.3027 mo
108.479 92.3027 104.956 94.2109 104.956 96.4692 cv
104.956 98.728 108.479 100.636 112.649 100.636 cv
116.819 100.636 120.342 98.728 120.342 96.4692 cv
120.342 94.2109 116.819 92.3027 112.649 92.3027 cv
cp
112.649 102.136 mo
107.494 102.136 103.456 99.647 103.456 96.4692 cv
103.456 93.292 107.494 90.8027 112.649 90.8027 cv
117.804 90.8027 121.842 93.292 121.842 96.4692 cv
121.842 99.647 117.804 102.136 112.649 102.136 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
114.678 78.4548 mo
110.62 78.4548 li
110.62 96.3452 li
110.62 96.9977 111.529 97.5267 112.649 97.5267 cv
113.77 97.5267 114.678 96.9977 114.678 96.3452 cv
114.678 78.4548 li
cp
0 0 0 0 cmyk
f
111.371 79.2046 mo
111.371 96.3452 li
111.407 96.4561 111.858 96.7769 112.649 96.7769 cv
113.44 96.7769 113.892 96.4561 113.93 96.3345 cv
113.928 79.2046 li
111.371 79.2046 li
cp
112.649 98.2769 mo
111.065 98.2769 109.871 97.4463 109.871 96.3452 cv
109.871 77.7046 li
115.428 77.7046 li
115.428 96.3452 li
115.428 97.4463 114.233 98.2769 112.649 98.2769 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
128.68 79.7202 mo
128.266 79.7202 127.93 79.3843 127.93 78.9702 cv
127.93 70.5444 121.075 63.6895 112.649 63.6895 cv
112.235 63.6895 111.899 63.3535 111.899 62.9395 cv
111.899 62.5254 112.235 62.1895 112.649 62.1895 cv
121.902 62.1895 129.43 69.7173 129.43 78.9702 cv
129.43 79.3843 129.094 79.7202 128.68 79.7202 cv
cp
f
123.68 79.7202 mo
123.266 79.7202 122.93 79.3843 122.93 78.9702 cv
122.93 73.3013 118.318 68.6895 112.649 68.6895 cv
112.235 68.6895 111.899 68.3535 111.899 67.9395 cv
111.899 67.5254 112.235 67.1895 112.649 67.1895 cv
119.145 67.1895 124.43 72.4741 124.43 78.9702 cv
124.43 79.3843 124.094 79.7202 123.68 79.7202 cv
cp
f
106.619 78.9703 mo
106.619 82.301 109.319 85.0011 112.649 85.0011 cv
115.98 85.0011 118.68 82.301 118.68 78.9703 cv
118.68 75.6395 115.98 72.9394 112.649 72.9394 cv
109.319 72.9394 106.619 75.6395 106.619 78.9703 cv
cp
0 0 0 0 cmyk
f
112.649 73.6895 mo
109.738 73.6895 107.369 76.0586 107.369 78.9702 cv
107.369 81.8818 109.738 84.251 112.649 84.251 cv
115.561 84.251 117.93 81.8818 117.93 78.9702 cv
117.93 76.0586 115.561 73.6895 112.649 73.6895 cv
cp
112.649 85.751 mo
108.911 85.751 105.869 82.709 105.869 78.9702 cv
105.869 75.2314 108.911 72.1895 112.649 72.1895 cv
116.388 72.1895 119.43 75.2314 119.43 78.9702 cv
119.43 82.709 116.388 85.751 112.649 85.751 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
114.681 79.7202 mo
114.267 79.7202 113.931 79.3843 113.931 78.9702 cv
113.931 78.2642 113.356 77.6899 112.649 77.6899 cv
112.235 77.6899 111.899 77.354 111.899 76.9399 cv
111.899 76.5259 112.235 76.1899 112.649 76.1899 cv
114.183 76.1899 115.431 77.437 115.431 78.9702 cv
115.431 79.3843 115.095 79.7202 114.681 79.7202 cv
cp
f
144.993 141.546 mo
145.35 141.34 145.798 141.634 145.737 142.042 cv
145.292 145.031 142.909 148.492 140.037 150.15 cv
137.118 151.835 134.705 151.075 134.316 148.503 cv
134.25 148.063 134.467 147.623 134.852 147.4 cv
144.993 141.546 li
cp
f
140.037 148.972 mo
141.625 148.055 143.025 146.487 143.888 144.834 cv
142.865 144.512 141.518 145.23 140.037 146.085 cv
138.555 146.941 137.208 147.778 136.185 149.281 cv
137.048 149.938 138.449 149.889 140.037 148.972 cv
cp
0 0 0 0 cmyk
f
127.044 142.467 mo
127.044 144.419 125.665 146.797 123.964 147.779 cv
122.263 148.761 120.884 147.975 120.884 146.023 cv
120.884 144.071 122.263 141.693 123.964 140.711 cv
125.665 139.729 127.044 140.515 127.044 142.467 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
151.939 128.093 mo
151.939 130.045 150.56 132.424 148.859 133.406 cv
147.158 134.388 145.78 133.602 145.78 131.65 cv
145.78 129.698 147.158 127.319 148.859 126.337 cv
150.56 125.355 151.939 126.141 151.939 128.093 cv
cp
f
126.211 142.173 mo
126.211 142.91 125.69 143.809 125.047 144.18 cv
124.405 144.551 123.883 144.254 123.883 143.516 cv
123.883 142.779 124.405 141.88 125.047 141.509 cv
125.69 141.138 126.211 141.435 126.211 142.173 cv
cp
0 0 0 0 cmyk
f
151.121 128.006 mo
151.121 128.744 150.6 129.642 149.957 130.013 cv
149.314 130.385 148.793 130.087 148.793 129.35 cv
148.793 128.612 149.314 127.714 149.957 127.343 cv
150.6 126.972 151.121 127.269 151.121 128.006 cv
cp
f
130.922 208.969 mo
132.672 210.719 li
134.422 208.969 li
132.672 207.219 li
130.922 208.969 li
cp
125.922 208.969 mo
127.672 210.719 li
129.422 208.969 li
127.672 207.219 li
125.922 208.969 li
cp
135.922 203.969 mo
137.672 205.719 li
139.422 203.969 li
137.672 202.219 li
135.922 203.969 li
cp
130.922 203.969 mo
132.672 205.719 li
134.422 203.969 li
132.672 202.219 li
130.922 203.969 li
cp
125.922 203.969 mo
127.672 205.719 li
129.422 203.969 li
127.672 202.219 li
125.922 203.969 li
cp
135.922 198.969 mo
137.672 200.719 li
139.422 198.969 li
137.672 197.219 li
135.922 198.969 li
cp
130.922 198.969 mo
132.672 200.719 li
134.422 198.969 li
132.672 197.219 li
130.922 198.969 li
cp
140.922 193.969 mo
142.672 195.719 li
144.422 193.969 li
142.672 192.219 li
140.922 193.969 li
cp
135.922 193.969 mo
137.672 195.719 li
139.422 193.969 li
137.672 192.219 li
135.922 193.969 li
cp
130.922 193.969 mo
132.672 195.719 li
134.422 193.969 li
132.672 192.219 li
130.922 193.969 li
cp
140.922 188.969 mo
142.672 190.719 li
144.422 188.969 li
142.672 187.219 li
140.922 188.969 li
cp
135.922 188.969 mo
137.672 190.719 li
139.422 188.969 li
137.672 187.219 li
135.922 188.969 li
cp
140.922 183.969 mo
142.672 185.719 li
144.422 183.969 li
142.672 182.219 li
140.922 183.969 li
cp
120.922 223.969 mo
122.672 225.719 li
124.422 223.969 li
122.672 222.219 li
120.922 223.969 li
cp
125.922 218.969 mo
127.672 220.719 li
129.422 218.969 li
127.672 217.219 li
125.922 218.969 li
cp
120.922 218.969 mo
122.672 220.719 li
124.422 218.969 li
122.672 217.219 li
120.922 218.969 li
cp
130.922 213.969 mo
132.672 215.719 li
134.422 213.969 li
132.672 212.219 li
130.922 213.969 li
cp
125.922 213.969 mo
127.672 215.719 li
129.422 213.969 li
127.672 212.219 li
125.922 213.969 li
cp
.638849 .295933 0 0 cmyk
f
470.513 151.665 mo
470.513 170.54 li
461.267 174.995 li
450.388 139.79 li
470.513 151.665 li
cp
f
451.678 141.421 mo
461.726 173.941 li
469.764 170.069 li
469.764 152.093 li
451.678 141.421 li
cp
461.267 175.745 mo
461.165 175.745 461.063 175.724 460.967 175.682 cv
460.767 175.595 460.614 175.425 460.55 175.216 cv
449.672 140.011 li
449.581 139.715 449.681 139.394 449.924 139.202 cv
450.167 139.01 450.502 138.986 450.77 139.144 cv
470.895 151.019 li
471.123 151.154 471.264 151.399 471.264 151.665 cv
471.264 170.54 li
471.264 170.828 471.099 171.091 470.839 171.216 cv
461.592 175.67 li
461.489 175.72 461.378 175.745 461.267 175.745 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
450.469 89.9658 mo
450.342 89.9658 450.214 89.9336 450.096 89.8662 cv
417.188 70.9497 li
416.83 70.7432 416.706 70.2847 416.912 69.9258 cv
417.119 69.5659 417.576 69.4443 417.937 69.6489 cv
450.844 88.5654 li
451.202 88.772 451.326 89.2305 451.12 89.5894 cv
450.981 89.8311 450.729 89.9658 450.469 89.9658 cv
cp
f
413.561 68.749 mo
413.434 68.749 413.305 68.7168 413.187 68.6484 cv
409.511 66.5273 405.649 66.3506 402.573 68.103 cv
402.213 68.3081 401.756 68.1826 401.551 67.8232 cv
401.346 67.4634 401.471 67.0054 401.831 66.8003 cv
405.367 64.7842 409.796 64.9575 413.937 67.3496 cv
414.295 67.5566 414.418 68.0156 414.211 68.374 cv
414.072 68.6147 413.82 68.749 413.561 68.749 cv
cp
f
476.754 161.059 mo
408.714 121.945 li
403.301 118.82 398.912 110.436 398.912 103.219 cv
398.912 81.1924 li
398.912 77.5296 395.335 77.457 397.156 76.1355 cv
397.304 76.0275 404.513 71.8892 404.671 71.7993 cv
406.387 70.8208 408.62 70.9197 411.062 72.3293 cv
479.102 111.443 li
484.515 114.568 488.903 122.952 488.903 130.17 cv
488.903 152.196 li
488.903 156.143 487.591 158.923 485.516 160.122 cv
485.449 160.161 478.161 164.423 478.092 164.458 cv
476.401 165.331 479.111 162.42 476.754 161.059 cv
cp
.638849 .295933 0 0 cmyk
f
397.465 76.8442 mo
397.552 76.9395 397.68 77.062 397.782 77.1602 cv
398.485 77.833 399.662 78.959 399.662 81.1924 cv
399.662 103.219 li
399.662 110.186 403.891 118.295 409.089 121.296 cv
477.128 160.409 li
478.521 161.213 478.602 162.466 478.474 163.369 cv
480.329 162.286 485.084 159.505 485.136 159.475 cv
487.056 158.367 488.153 155.714 488.153 152.196 cv
488.153 130.169 li
488.153 123.203 483.925 115.093 478.727 112.092 cv
410.688 72.9795 li
408.578 71.7612 406.585 71.5728 405.042 72.4507 cv
404.74 72.6235 397.9 76.5513 397.57 76.7607 cv
397.527 76.792 397.492 76.8198 397.465 76.8442 cv
cp
477.643 165.369 mo
477.362 165.369 477.107 165.248 476.942 165.037 cv
476.643 164.655 476.751 164.215 476.866 163.749 cv
477.088 162.847 477.183 162.173 476.379 161.708 cv
408.34 122.596 li
402.728 119.355 398.162 110.663 398.162 103.219 cv
398.162 81.1924 li
398.162 79.6001 397.376 78.8481 396.745 78.2441 cv
396.305 77.8223 395.849 77.3862 395.893 76.7461 cv
395.932 76.1616 396.381 75.771 396.716 75.5283 cv
396.922 75.3784 404.226 71.1899 404.299 71.1479 cv
406.306 70.0044 408.852 70.1875 411.437 71.6797 cv
479.476 110.792 li
485.088 114.033 489.653 122.725 489.653 130.169 cv
489.653 152.196 li
489.653 156.265 488.282 159.39 485.891 160.771 cv
485.826 160.809 478.534 165.074 478.438 165.124 cv
478.104 165.296 477.867 165.369 477.643 165.369 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
481.654 157.393 mo
488.672 153.383 li
481.654 157.393 li
cp
0 0 0 0 cmyk
f
481.655 158.144 mo
481.395 158.144 481.142 158.008 481.003 157.766 cv
480.798 157.406 480.923 156.948 481.282 156.742 cv
488.3 152.732 li
488.659 152.526 489.117 152.652 489.323 153.011 cv
489.528 153.371 489.403 153.829 489.044 154.035 cv
482.026 158.045 li
481.909 158.112 481.781 158.144 481.655 158.144 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
481.029 128.518 mo
488.055 124.504 li
481.029 128.518 li
cp
0 0 0 0 cmyk
f
481.03 129.269 mo
480.77 129.269 480.517 129.133 480.378 128.891 cv
480.173 128.531 480.298 128.073 480.657 127.867 cv
487.683 123.853 li
488.042 123.646 488.5 123.772 488.706 124.132 cv
488.911 124.491 488.786 124.95 488.427 125.155 cv
481.401 129.17 li
481.284 129.237 481.156 129.269 481.03 129.269 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
474.154 117.143 mo
481.297 113.062 li
474.154 117.143 li
cp
0 0 0 0 cmyk
f
474.155 117.894 mo
473.895 117.894 473.642 117.758 473.503 117.516 cv
473.298 117.156 473.423 116.698 473.782 116.492 cv
480.925 112.411 li
481.284 112.204 481.742 112.331 481.948 112.69 cv
482.153 113.049 482.028 113.508 481.669 113.713 cv
474.526 117.795 li
474.409 117.862 474.281 117.894 474.155 117.894 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
407.146 78.4444 mo
414.288 74.3629 li
407.146 78.4444 li
cp
0 0 0 0 cmyk
f
407.146 79.1943 mo
406.886 79.1943 406.633 79.0586 406.494 78.8164 cv
406.289 78.457 406.414 77.9985 406.773 77.793 cv
413.916 73.7114 li
414.275 73.5049 414.733 73.6313 414.939 73.9907 cv
415.145 74.3501 415.02 74.8086 414.66 75.0142 cv
407.518 79.0957 li
407.4 79.1626 407.272 79.1943 407.146 79.1943 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
471.85 115.682 mo
403.81 76.5683 li
398.397 73.4431 394.009 76.7605 394.009 83.9778 cv
394.009 106.004 li
394.009 113.221 398.397 121.606 403.81 124.731 cv
443.174 147.296 li
461.305 174.998 li
461.305 157.759 li
471.85 163.844 li
477.264 166.97 481.651 163.652 481.651 156.435 cv
481.651 134.409 li
481.651 127.191 477.264 118.807 471.85 115.682 cv
cp
0 0 0 0 cmyk
f
399.919 76.1421 mo
396.784 76.1421 394.759 79.2178 394.759 83.978 cv
394.759 106.004 li
394.759 112.971 398.987 121.08 404.186 124.082 cv
443.548 146.645 li
443.65 146.704 443.737 146.786 443.803 146.885 cv
460.555 172.482 li
460.555 157.759 li
460.555 157.491 460.697 157.243 460.93 157.109 cv
461.162 156.976 461.447 156.976 461.68 157.109 cv
472.226 163.195 li
473.462 163.908 474.645 164.271 475.742 164.271 cv
475.742 164.271 li
477.221 164.271 478.481 163.593 479.389 162.31 cv
480.378 160.91 480.901 158.878 480.901 156.435 cv
480.901 134.409 li
480.901 127.441 476.673 119.332 471.476 116.331 cv
403.437 77.2188 li
402.199 76.5039 401.016 76.1421 399.919 76.1421 cv
cp
461.305 175.748 mo
461.057 175.748 460.818 175.625 460.677 175.409 cv
442.646 147.856 li
403.438 125.382 li
397.824 122.141 393.259 113.448 393.259 106.004 cv
393.259 83.978 li
393.259 78.3066 395.873 74.6421 399.919 74.6421 cv
401.283 74.6421 402.718 75.0718 404.186 75.9189 cv
472.225 115.031 li
477.837 118.272 482.401 126.964 482.401 134.409 cv
482.401 156.435 li
482.401 159.19 481.783 161.521 480.613 163.176 cv
479.431 164.849 477.7 165.771 475.742 165.771 cv
475.742 165.771 li
474.378 165.771 472.942 165.341 471.476 164.494 cv
462.055 159.058 li
462.055 174.998 li
462.055 175.33 461.837 175.622 461.519 175.717 cv
461.448 175.738 461.376 175.748 461.305 175.748 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
431.542 120.594 mo
406.273 106.251 li
406.273 108.621 li
431.542 122.965 li
431.542 120.594 li
cp
f
445.479 118.791 mo
406.273 96.4008 li
406.273 98.7709 li
445.479 121.161 li
445.479 118.791 li
cp
f
422.229 110.293 mo
406.273 101.326 li
406.273 103.696 li
422.229 112.663 li
422.229 110.293 li
cp
f
424.563 111.64 mo
424.563 114.01 li
456.003 132.184 li
456.003 129.814 li
424.563 111.64 li
cp
f
433.875 121.941 mo
433.875 124.312 li
451.979 134.764 li
451.979 132.394 li
433.875 121.941 li
cp
f
447.813 122.508 mo
468.634 134.551 li
468.634 132.181 li
447.813 120.138 li
447.813 122.508 li
cp
f
458.337 133.531 mo
468.634 139.477 li
468.634 137.106 li
458.337 131.161 li
458.337 133.531 li
cp
f
406.273 93.8458 mo
468.634 129.626 li
468.634 127.256 li
406.273 91.4755 li
406.273 93.8458 li
cp
f
454.313 136.111 mo
468.634 144.402 li
468.634 142.031 li
454.313 133.741 li
454.313 136.111 li
cp
f
406.273 113.546 mo
468.634 149.327 li
468.634 146.957 li
406.273 111.176 li
406.273 113.546 li
cp
f
196.899 121.665 mo
196.899 140.54 li
206.146 144.995 li
217.024 109.79 li
196.899 121.665 li
cp
.638849 .295933 0 0 cmyk
f
197.649 140.069 mo
205.686 143.941 li
215.735 111.421 li
197.649 122.093 li
197.649 140.069 li
cp
206.146 145.745 mo
206.034 145.745 205.923 145.72 205.82 145.67 cv
196.573 141.216 li
196.314 141.091 196.149 140.828 196.149 140.54 cv
196.149 121.665 li
196.149 121.399 196.289 121.154 196.518 121.019 cv
216.643 109.144 li
216.909 108.987 217.246 109.01 217.489 109.202 cv
217.732 109.394 217.832 109.715 217.741 110.011 cv
206.862 145.216 li
206.797 145.425 206.646 145.595 206.445 145.682 cv
206.35 145.724 206.248 145.745 206.146 145.745 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
216.943 64.9658 mo
216.684 64.9658 216.431 64.8311 216.292 64.5898 cv
216.086 64.2305 216.209 63.772 216.568 63.5654 cv
249.475 44.6489 li
249.835 44.4443 250.293 44.5664 250.5 44.9253 cv
250.706 45.2847 250.582 45.7432 250.223 45.9497 cv
217.316 64.8662 li
217.198 64.9336 217.07 64.9658 216.943 64.9658 cv
cp
f
253.852 43.749 mo
253.593 43.749 253.34 43.6147 253.202 43.374 cv
252.995 43.0156 253.117 42.5566 253.476 42.3496 cv
257.616 39.9585 262.046 39.7842 265.582 41.8003 cv
265.942 42.0054 266.067 42.4634 265.862 42.8232 cv
265.657 43.1831 265.198 43.3081 264.839 43.103 cv
261.765 41.3506 257.901 41.5264 254.226 43.6484 cv
254.108 43.7168 253.979 43.749 253.852 43.749 cv
cp
f
190.658 131.059 mo
258.699 91.9454 li
264.112 88.8202 268.5 80.4359 268.5 73.2185 cv
268.5 56.1924 li
268.5 52.5296 272.077 52.457 270.256 51.1355 cv
270.108 51.0275 262.899 46.8892 262.741 46.7993 cv
261.025 45.8208 258.792 45.9197 256.35 47.3293 cv
188.31 86.4428 li
182.897 89.568 178.509 97.9523 178.509 105.17 cv
178.509 122.196 li
178.509 126.143 179.821 128.923 181.896 130.122 cv
181.963 130.161 189.252 134.423 189.32 134.458 cv
191.011 135.331 188.301 132.42 190.658 131.059 cv
cp
.638849 .295933 0 0 cmyk
f
260.242 46.9033 mo
259.145 46.9033 257.962 47.2651 256.726 47.9785 cv
188.684 87.0933 li
183.488 90.0933 179.259 98.2026 179.259 105.169 cv
179.259 122.196 li
179.259 125.714 180.357 128.367 182.271 129.472 cv
183.147 129.984 li
184.616 130.843 187.556 132.562 188.938 133.369 cv
188.811 132.465 188.891 131.213 190.283 130.41 cv
258.325 91.2949 li
263.521 88.2949 267.75 80.1855 267.75 73.2188 cv
267.75 56.1924 li
267.75 53.959 268.927 52.833 269.63 52.1602 cv
269.732 52.062 269.86 51.9404 269.947 51.8447 cv
269.914 51.8164 269.871 51.7822 269.816 51.7422 cv
269.526 51.5596 262.773 47.6812 262.37 47.4512 cv
261.732 47.0874 261.016 46.9033 260.242 46.9033 cv
cp
189.77 135.369 mo
189.77 135.369 li
189.544 135.369 189.307 135.296 188.977 135.125 cv
188.939 135.105 188.904 135.087 182.391 131.279 cv
181.52 130.771 li
179.13 129.39 177.759 126.265 177.759 122.196 cv
177.759 105.169 li
177.759 97.7251 182.324 89.0327 187.935 85.7935 cv
255.977 46.6787 li
258.559 45.1885 261.108 45.0049 263.112 46.1479 cv
263.184 46.1885 270.494 50.3813 270.696 50.5278 cv
271.031 50.771 271.48 51.1616 271.52 51.7461 cv
271.563 52.3862 271.108 52.8223 270.667 53.2437 cv
270.036 53.8481 269.25 54.5996 269.25 56.1924 cv
269.25 73.2188 li
269.25 80.6631 264.685 89.3555 259.074 92.5947 cv
191.032 131.709 li
190.229 132.173 190.324 132.847 190.546 133.749 cv
190.661 134.215 190.769 134.655 190.47 135.037 cv
190.305 135.248 190.049 135.369 189.77 135.369 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
185.758 127.393 mo
178.74 123.383 li
185.758 127.393 li
cp
0 0 0 0 cmyk
f
185.757 128.144 mo
185.631 128.144 185.503 128.112 185.386 128.045 cv
178.368 124.035 li
178.008 123.829 177.883 123.371 178.089 123.011 cv
178.295 122.651 178.754 122.528 179.112 122.732 cv
186.13 126.742 li
186.49 126.948 186.615 127.406 186.409 127.766 cv
186.271 128.008 186.018 128.144 185.757 128.144 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
186.383 103.518 mo
179.357 99.5037 li
186.383 103.518 li
cp
0 0 0 0 cmyk
f
186.382 104.269 mo
186.256 104.269 186.128 104.237 186.011 104.17 cv
178.985 100.155 li
178.625 99.9497 178.5 99.4912 178.706 99.1318 cv
178.912 98.772 179.371 98.6489 179.729 98.8525 cv
186.755 102.867 li
187.115 103.073 187.24 103.531 187.034 103.891 cv
186.896 104.133 186.643 104.269 186.382 104.269 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
193.258 92.1433 mo
186.115 88.0619 li
193.258 92.1433 li
cp
0 0 0 0 cmyk
f
193.257 92.8936 mo
193.131 92.8936 193.003 92.8618 192.886 92.7949 cv
185.743 88.7134 li
185.383 88.5078 185.258 88.0493 185.464 87.6899 cv
185.67 87.3301 186.129 87.207 186.487 87.4106 cv
193.63 91.4922 li
193.99 91.6978 194.115 92.1563 193.909 92.5156 cv
193.771 92.7578 193.518 92.8936 193.257 92.8936 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
260.267 53.4444 mo
253.124 49.3629 li
260.267 53.4444 li
cp
0 0 0 0 cmyk
f
260.266 54.1943 mo
260.14 54.1943 260.012 54.1626 259.895 54.0957 cv
252.752 50.0142 li
252.392 49.8086 252.267 49.3501 252.473 48.9907 cv
252.679 48.6313 253.139 48.5083 253.496 48.7114 cv
260.639 52.793 li
260.999 52.9985 261.124 53.457 260.918 53.8164 cv
260.779 54.0586 260.526 54.1943 260.266 54.1943 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
195.562 90.6818 mo
263.602 51.5683 li
269.015 48.4431 273.403 51.7605 273.403 58.9778 cv
273.403 76.004 li
273.403 83.2214 269.015 91.6056 263.602 94.7308 cv
224.238 117.296 li
206.107 144.998 li
206.107 127.759 li
195.562 133.844 li
190.149 136.97 185.761 133.652 185.761 126.435 cv
185.761 109.409 li
185.761 102.191 190.149 93.807 195.562 90.6818 cv
cp
0 0 0 0 cmyk
f
206.107 127.009 mo
206.236 127.009 206.366 127.042 206.482 127.109 cv
206.714 127.243 206.857 127.491 206.857 127.759 cv
206.857 142.482 li
223.61 116.885 li
223.675 116.786 223.762 116.704 223.865 116.645 cv
263.229 94.0801 li
268.424 91.0806 272.653 82.9707 272.653 76.0039 cv
272.653 58.978 li
272.653 54.2178 270.627 51.1421 267.493 51.1421 cv
266.396 51.1421 265.213 51.5039 263.977 52.2178 cv
195.935 91.332 li
190.739 94.332 186.511 102.441 186.511 109.409 cv
186.511 126.435 li
186.511 131.195 188.536 134.271 191.67 134.271 cv
192.767 134.271 193.95 133.909 195.187 133.195 cv
205.732 127.109 li
205.848 127.042 205.978 127.009 206.107 127.009 cv
cp
206.107 145.748 mo
206.036 145.748 205.963 145.738 205.893 145.717 cv
205.575 145.622 205.357 145.33 205.357 144.998 cv
205.357 129.058 li
195.937 134.494 li
194.469 135.341 193.034 135.771 191.67 135.771 cv
187.625 135.771 185.011 132.106 185.011 126.435 cv
185.011 109.409 li
185.011 101.964 189.576 93.272 195.187 90.0322 cv
263.228 50.918 li
264.694 50.0718 266.13 49.6421 267.493 49.6421 cv
271.539 49.6421 274.153 53.3066 274.153 58.978 cv
274.153 76.0039 li
274.153 83.4482 269.588 92.1406 263.977 95.3804 cv
224.767 117.856 li
206.734 145.409 li
206.593 145.625 206.355 145.748 206.107 145.748 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
235.87 90.5942 mo
261.139 76.2509 li
261.139 78.6212 li
235.87 92.9646 li
235.87 90.5942 li
cp
f
221.933 88.791 mo
261.139 66.4008 li
261.139 68.7709 li
221.933 91.1611 li
221.933 88.791 li
cp
f
245.183 80.2927 mo
261.139 71.3258 li
261.139 73.6962 li
245.183 82.6628 li
245.183 80.2927 li
cp
f
242.849 81.6399 mo
242.849 84.01 li
211.409 102.184 li
211.409 99.8137 li
242.849 81.6399 li
cp
f
233.537 91.9414 mo
233.537 94.3118 li
215.433 104.764 li
215.433 102.394 li
233.537 91.9414 li
cp
f
219.599 92.5083 mo
198.778 104.551 li
198.778 102.181 li
219.599 90.1382 li
219.599 92.5083 li
cp
f
209.076 103.531 mo
198.778 109.477 li
198.778 107.106 li
209.076 101.161 li
209.076 103.531 li
cp
f
213.099 106.111 mo
198.778 114.402 li
198.778 112.031 li
213.099 103.741 li
213.099 106.111 li
cp
f
261.139 83.5463 mo
198.778 119.327 li
198.778 116.957 li
261.139 81.1762 li
261.139 83.5463 li
cp
f
470.935 239.545 mo
470.521 239.545 470.185 239.209 470.185 238.795 cv
470.185 234.346 li
470.185 233.932 470.521 233.596 470.935 233.596 cv
471.349 233.596 471.685 233.932 471.685 234.346 cv
471.685 238.795 li
471.685 239.209 471.349 239.545 470.935 239.545 cv
cp
f
469.938 229.498 mo
469.607 229.498 469.306 229.279 469.214 228.947 cv
467.363 222.213 463.165 216.27 458.258 213.437 cv
421.003 191.937 li
420.645 191.73 420.521 191.271 420.729 190.913 cv
420.936 190.554 421.393 190.431 421.753 190.638 cv
459.008 212.138 li
464.244 215.16 468.709 221.449 470.661 228.549 cv
470.771 228.948 470.536 229.361 470.137 229.472 cv
470.069 229.489 470.003 229.498 469.938 229.498 cv
cp
f
453.786 266.734 mo
354.827 210.156 li
349.414 207.031 345.026 198.646 345.026 191.429 cv
345.026 169.403 li
345.026 165.74 341.449 165.667 343.27 164.346 cv
343.418 164.238 350.627 160.1 350.785 160.01 cv
352.501 159.031 354.734 159.13 357.175 160.54 cv
456.134 217.118 li
461.547 220.243 465.935 228.628 465.935 235.845 cv
465.935 257.871 li
465.935 261.818 464.622 264.599 462.548 265.797 cv
462.481 265.836 455.192 270.098 455.124 270.134 cv
453.433 271.006 456.143 268.095 453.786 266.734 cv
cp
.638849 .295933 0 0 cmyk
f
343.578 165.055 mo
343.665 165.15 343.793 165.272 343.896 165.37 cv
344.599 166.043 345.776 167.169 345.776 169.403 cv
345.776 191.429 li
345.776 198.396 350.005 206.505 355.202 209.507 cv
454.157 266.083 li
455.553 266.889 455.633 268.142 455.505 269.045 cv
456.875 268.245 459.826 266.52 461.297 265.659 cv
462.172 265.148 li
464.087 264.042 465.185 261.39 465.185 257.871 cv
465.185 235.845 li
465.185 228.878 460.956 220.769 455.759 217.768 cv
356.804 161.191 li
354.688 159.971 352.697 159.783 351.156 160.661 cv
350.712 160.914 343.991 164.776 343.684 164.972 cv
343.641 165.003 343.605 165.031 343.578 165.055 cv
cp
454.674 271.044 mo
454.395 271.044 454.14 270.923 453.974 270.712 cv
453.675 270.33 453.783 269.89 453.897 269.424 cv
454.119 268.522 454.215 267.848 453.41 267.384 cv
354.455 210.808 li
348.841 207.565 344.276 198.873 344.276 191.429 cv
344.276 169.403 li
344.276 167.81 343.49 167.059 342.858 166.454 cv
342.418 166.033 341.962 165.597 342.006 164.957 cv
342.045 164.372 342.494 163.982 342.829 163.739 cv
343.031 163.592 350.344 159.398 350.415 159.357 cv
352.417 158.217 354.966 158.399 357.551 159.891 cv
456.506 216.467 li
462.12 219.708 466.685 228.4 466.685 235.845 cv
466.685 257.871 li
466.685 261.939 465.313 265.065 462.923 266.446 cv
462.055 266.954 li
455.539 270.764 455.504 270.781 455.467 270.801 cv
455.137 270.971 454.899 271.044 454.674 271.044 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
458.686 263.069 mo
465.704 259.059 li
458.686 263.069 li
cp
0 0 0 0 cmyk
f
458.688 263.818 mo
458.427 263.818 458.174 263.683 458.035 263.44 cv
457.83 263.081 457.955 262.623 458.314 262.417 cv
465.332 258.407 li
465.691 258.202 466.149 258.327 466.355 258.687 cv
466.561 259.046 466.436 259.504 466.076 259.71 cv
459.059 263.72 li
458.941 263.786 458.813 263.818 458.688 263.818 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
458.061 234.194 mo
465.087 230.179 li
458.061 234.194 li
cp
0 0 0 0 cmyk
f
458.063 234.943 mo
457.802 234.943 457.549 234.808 457.41 234.565 cv
457.205 234.206 457.33 233.748 457.689 233.542 cv
464.715 229.527 li
465.074 229.322 465.532 229.447 465.738 229.807 cv
465.943 230.166 465.818 230.624 465.459 230.83 cv
458.434 234.845 li
458.316 234.911 458.188 234.943 458.063 234.943 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
451.186 222.819 mo
458.329 218.737 li
451.186 222.819 li
cp
0 0 0 0 cmyk
f
451.188 223.568 mo
450.927 223.568 450.674 223.433 450.535 223.19 cv
450.33 222.831 450.455 222.373 450.814 222.167 cv
457.957 218.086 li
458.316 217.882 458.774 218.006 458.98 218.365 cv
459.186 218.725 459.061 219.183 458.701 219.389 cv
451.559 223.47 li
451.441 223.536 451.313 223.568 451.188 223.568 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
353.259 166.655 mo
360.402 162.573 li
353.259 166.655 li
cp
0 0 0 0 cmyk
f
353.261 167.405 mo
353 167.405 352.747 167.269 352.608 167.027 cv
352.403 166.667 352.528 166.209 352.888 166.003 cv
360.03 161.922 li
360.39 161.716 360.848 161.841 361.054 162.201 cv
361.259 162.561 361.134 163.019 360.774 163.225 cv
353.632 167.306 li
353.515 167.373 353.387 167.405 353.261 167.405 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
448.882 221.357 mo
349.924 164.779 li
344.511 161.654 340.123 164.971 340.123 172.188 cv
340.123 194.214 li
340.123 201.432 344.511 209.816 349.924 212.941 cv
448.882 269.52 li
454.295 272.645 458.683 269.328 458.683 262.11 cv
458.683 240.084 li
458.683 232.867 454.295 224.482 448.882 221.357 cv
cp
0 0 0 0 cmyk
f
346.033 164.353 mo
342.898 164.353 340.873 167.429 340.873 172.188 cv
340.873 194.214 li
340.873 201.182 345.102 209.291 350.299 212.292 cv
449.254 268.868 li
450.493 269.584 451.676 269.945 452.773 269.945 cv
452.773 269.945 li
454.252 269.945 455.513 269.268 456.42 267.985 cv
457.41 266.585 457.934 264.554 457.934 262.11 cv
457.934 240.084 li
457.934 233.117 453.705 225.008 448.507 222.007 cv
349.552 165.43 li
348.313 164.715 347.13 164.353 346.033 164.353 cv
cp
452.773 271.445 mo
452.773 271.445 452.773 271.445 452.772 271.445 cv
451.409 271.445 449.974 271.016 448.507 270.169 cv
349.552 213.593 li
343.938 210.352 339.373 201.659 339.373 194.214 cv
339.373 172.188 li
339.373 166.517 341.987 162.853 346.033 162.853 cv
347.396 162.853 348.832 163.282 350.299 164.129 cv
449.254 220.706 li
454.868 223.947 459.434 232.64 459.434 240.084 cv
459.434 262.11 li
459.434 264.865 458.815 267.196 457.645 268.852 cv
456.462 270.524 454.731 271.445 452.773 271.445 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
352.371 179.344 mo
352.371 188.214 li
446.166 241.377 li
446.166 232.506 li
352.371 179.344 li
cp
.638849 .295933 0 0 cmyk
f
353.121 187.777 mo
445.416 240.09 li
445.416 232.942 li
353.121 180.631 li
353.121 187.777 li
cp
446.166 242.127 mo
446.038 242.127 445.911 242.095 445.796 242.029 cv
352.001 188.866 li
351.767 188.733 351.621 188.484 351.621 188.214 cv
351.621 179.344 li
351.621 179.077 351.763 178.83 351.993 178.696 cv
352.226 178.562 352.509 178.561 352.741 178.691 cv
446.536 231.854 li
446.771 231.986 446.916 232.235 446.916 232.506 cv
446.916 241.377 li
446.916 241.644 446.774 241.891 446.544 242.025 cv
446.427 242.093 446.297 242.127 446.166 242.127 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
352.371 203.139 mo
446.166 256.302 li
446.166 247.431 li
352.371 194.269 li
352.371 203.139 li
cp
.638849 .295933 0 0 cmyk
f
353.121 202.702 mo
445.416 255.015 li
445.416 247.868 li
353.121 195.556 li
353.121 202.702 li
cp
446.166 257.052 mo
446.038 257.052 445.911 257.02 445.796 256.954 cv
352.001 203.791 li
351.767 203.658 351.621 203.409 351.621 203.139 cv
351.621 194.269 li
351.621 194.001 351.763 193.755 351.993 193.621 cv
352.226 193.486 352.509 193.486 352.741 193.616 cv
446.536 246.779 li
446.771 246.912 446.916 247.161 446.916 247.432 cv
446.916 256.302 li
446.916 256.568 446.774 256.815 446.544 256.95 cv
446.427 257.018 446.297 257.052 446.166 257.052 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
295.062 228.544 mo
296.498 255.634 li
287.748 250.884 li
275.623 239.634 li
295.062 228.544 li
cp
.638849 .295933 0 0 cmyk
f
288.189 250.27 mo
295.679 254.335 li
294.377 229.798 li
276.883 239.779 li
288.189 250.27 li
cp
296.499 256.384 mo
296.375 256.384 296.252 256.354 296.141 256.293 cv
287.391 251.543 li
287.335 251.513 287.284 251.477 287.238 251.434 cv
275.113 240.184 li
274.938 240.021 274.851 239.785 274.878 239.548 cv
274.906 239.311 275.044 239.101 275.252 238.982 cv
294.69 227.893 li
294.916 227.764 295.192 227.76 295.421 227.886 cv
295.65 228.011 295.797 228.244 295.811 228.504 cv
297.248 255.594 li
297.262 255.865 297.128 256.123 296.899 256.268 cv
296.777 256.345 296.638 256.384 296.499 256.384 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
229.281 270.677 mo
298.971 230.571 li
304.384 227.446 308.772 219.062 308.772 211.844 cv
308.772 189.818 li
308.772 186.155 312.35 186.083 310.529 184.761 cv
310.38 184.653 303.171 180.515 303.013 180.425 cv
301.297 179.447 299.064 179.546 296.623 180.955 cv
226.932 221.061 li
221.519 224.186 217.131 232.57 217.131 239.787 cv
217.131 261.814 li
217.131 265.761 218.444 268.541 220.518 269.74 cv
220.586 269.778 227.874 274.041 227.942 274.076 cv
229.633 274.948 226.924 272.037 229.281 270.677 cv
cp
.638849 .295933 0 0 cmyk
f
300.514 180.529 mo
299.417 180.529 298.234 180.891 296.998 181.604 cv
227.307 221.711 li
222.11 224.711 217.881 232.82 217.881 239.787 cv
217.881 261.813 li
217.881 265.332 218.979 267.984 220.894 269.09 cv
221.088 269.203 li
224.236 271.044 226.472 272.352 227.561 272.986 cv
227.433 272.083 227.513 270.831 228.906 270.027 cv
298.597 229.921 li
303.793 226.921 308.022 218.812 308.022 211.845 cv
308.022 189.818 li
308.022 187.584 309.199 186.458 309.903 185.786 cv
310.005 185.688 310.132 185.566 310.219 185.471 cv
310.186 185.442 310.144 185.408 310.088 185.368 cv
309.794 185.184 303.045 181.307 302.642 181.077 cv
302.004 180.713 301.288 180.529 300.514 180.529 cv
cp
228.392 274.986 mo
228.392 274.986 li
228.167 274.986 227.93 274.913 227.599 274.743 cv
227.569 274.728 227.52 274.702 220.331 270.498 cv
220.14 270.387 li
217.752 269.008 216.381 265.883 216.381 261.813 cv
216.381 239.787 li
216.381 232.343 220.946 223.65 226.558 220.411 cv
296.249 180.305 li
298.832 178.813 301.38 178.631 303.385 179.774 cv
303.457 179.814 310.764 184.005 310.969 184.154 cv
311.304 184.397 311.753 184.788 311.792 185.372 cv
311.836 186.012 311.38 186.448 310.939 186.87 cv
310.308 187.474 309.522 188.226 309.522 189.818 cv
309.522 211.845 li
309.522 219.289 304.957 227.981 299.346 231.221 cv
229.655 271.327 li
228.852 271.79 228.946 272.465 229.168 273.366 cv
229.283 273.832 229.391 274.272 229.092 274.654 cv
228.927 274.865 228.672 274.986 228.392 274.986 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
234.184 225.3 mo
303.874 185.194 li
309.287 182.069 313.675 185.386 313.675 192.604 cv
313.675 214.63 li
313.675 221.847 309.287 230.231 303.874 233.357 cv
296.561 237.577 li
296.561 255.696 li
284.436 244.446 li
234.184 273.462 li
228.771 276.587 224.383 273.27 224.383 266.053 cv
224.383 244.026 li
224.383 236.809 228.771 228.425 234.184 225.3 cv
cp
0 0 0 0 cmyk
f
307.766 184.768 mo
306.669 184.768 305.486 185.13 304.25 185.844 cv
234.558 225.95 li
229.361 228.95 225.133 237.06 225.133 244.026 cv
225.133 266.053 li
225.133 270.813 227.158 273.888 230.293 273.888 cv
231.39 273.888 232.573 273.526 233.809 272.813 cv
284.061 243.797 li
284.344 243.633 284.704 243.673 284.946 243.896 cv
295.811 253.978 li
295.811 237.577 li
295.811 237.31 295.954 237.062 296.186 236.928 cv
303.5 232.707 li
308.697 229.706 312.925 221.597 312.925 214.63 cv
312.925 192.604 li
312.925 187.844 310.9 184.768 307.766 184.768 cv
cp
230.293 275.388 mo
226.247 275.388 223.633 271.724 223.633 266.053 cv
223.633 244.026 li
223.633 236.582 228.198 227.89 233.809 224.65 cv
303.5 184.544 li
304.967 183.698 306.402 183.268 307.766 183.268 cv
311.812 183.268 314.425 186.933 314.425 192.604 cv
314.425 214.63 li
314.425 222.074 309.86 230.767 304.25 234.006 cv
297.311 238.01 li
297.311 255.696 li
297.311 255.994 297.134 256.265 296.861 256.384 cv
296.589 256.503 296.271 256.449 296.051 256.246 cv
284.332 245.373 li
234.559 274.111 li
233.092 274.958 231.657 275.388 230.293 275.388 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
260.555 222.909 mo
299.761 200.519 li
299.761 202.889 li
260.555 225.279 li
260.555 222.909 li
cp
f
283.805 214.411 mo
299.761 205.444 li
299.761 207.814 li
283.805 216.781 li
283.805 214.411 li
cp
f
281.472 215.758 mo
281.472 218.128 li
250.031 236.302 li
250.031 233.932 li
281.472 215.758 li
cp
f
299.761 221.964 mo
237.4 257.744 li
237.4 248.374 li
299.761 212.593 li
299.761 221.964 li
cp
.638849 .295933 0 0 cmyk
f
238.15 248.809 mo
238.15 256.449 li
299.011 221.529 li
299.011 213.889 li
238.15 248.809 li
cp
237.4 258.494 mo
237.27 258.494 237.14 258.461 237.024 258.394 cv
236.792 258.259 236.65 258.012 236.65 257.744 cv
236.65 248.374 li
236.65 248.105 236.793 247.857 237.027 247.724 cv
299.388 211.943 li
299.619 211.811 299.905 211.81 300.137 211.944 cv
300.369 212.079 300.511 212.326 300.511 212.594 cv
300.511 221.964 li
300.511 222.232 300.368 222.48 300.134 222.614 cv
237.773 258.395 li
237.658 258.461 237.529 258.494 237.4 258.494 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
224.38 267.011 mo
217.362 263.001 li
224.38 267.011 li
cp
0 0 0 0 cmyk
f
224.379 267.761 mo
224.253 267.761 224.125 267.729 224.008 267.662 cv
216.99 263.652 li
216.63 263.446 216.505 262.988 216.711 262.629 cv
216.917 262.27 217.377 262.145 217.734 262.35 cv
224.752 266.359 li
225.112 266.565 225.237 267.023 225.031 267.383 cv
224.893 267.625 224.64 267.761 224.379 267.761 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
225.005 238.136 mo
217.979 234.122 li
225.005 238.136 li
cp
0 0 0 0 cmyk
f
225.004 238.886 mo
224.878 238.886 224.75 238.854 224.633 238.787 cv
217.607 234.772 li
217.248 234.566 217.123 234.108 217.328 233.749 cv
217.535 233.39 217.994 233.268 218.352 233.47 cv
225.377 237.484 li
225.737 237.69 225.861 238.148 225.656 238.508 cv
225.518 238.75 225.265 238.886 225.004 238.886 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
231.88 226.761 mo
224.737 222.68 li
231.88 226.761 li
cp
0 0 0 0 cmyk
f
231.879 227.511 mo
231.753 227.511 231.625 227.479 231.508 227.412 cv
224.365 223.331 li
224.005 223.125 223.88 222.667 224.086 222.308 cv
224.292 221.948 224.751 221.822 225.109 222.028 cv
232.252 226.109 li
232.612 226.315 232.737 226.773 232.531 227.133 cv
232.393 227.375 232.14 227.511 231.879 227.511 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
300.539 187.07 mo
293.396 182.989 li
300.539 187.07 li
cp
0 0 0 0 cmyk
f
300.539 187.82 mo
300.412 187.82 300.284 187.789 300.167 187.722 cv
293.024 183.64 li
292.665 183.435 292.54 182.976 292.745 182.617 cv
292.951 182.257 293.412 182.134 293.769 182.337 cv
300.911 186.419 li
301.271 186.625 301.396 187.083 301.19 187.442 cv
301.052 187.685 300.799 187.82 300.539 187.82 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
380.61 100.045 mo
380.273 100.045 379.968 99.8169 379.883 99.4751 cv
378.126 92.3491 374.155 85.1362 368.987 79.686 cv
368.702 79.3853 368.715 78.9106 369.016 78.6255 cv
369.313 78.3413 369.789 78.353 370.075 78.6538 cv
375.417 84.2871 379.522 91.7456 381.34 99.1157 cv
381.438 99.5181 381.193 99.9243 380.791 100.023 cv
380.73 100.039 380.67 100.045 380.61 100.045 cv
cp
f
376.632 107.262 mo
376.632 96.2245 368.834 82.775 359.216 77.2217 cv
354.549 74.5273 350.314 74.1928 347.187 75.8169 cv
341.567 78.9815 li
342.758 81.1658 li
342.14 82.8583 341.8 84.8604 341.8 87.1514 cv
341.8 98.1888 349.597 111.638 359.216 117.192 cv
360.664 118.028 362.069 118.633 363.414 119.027 cv
365.153 122.004 li
371.348 118.543 li
374.605 116.792 376.632 112.885 376.632 107.262 cv
cp
.638849 .295933 0 0 cmyk
f
342.579 79.272 mo
343.417 80.8066 li
343.521 80.9961 343.537 81.2212 343.463 81.4238 cv
342.857 83.0801 342.55 85.0073 342.55 87.1514 cv
342.55 97.9326 350.194 111.117 359.591 116.542 cv
360.952 117.328 362.31 117.921 363.625 118.308 cv
363.809 118.362 363.965 118.484 364.062 118.649 cv
365.43 120.991 li
370.981 117.888 li
374.146 116.188 375.882 112.416 375.882 107.262 cv
375.882 96.481 368.237 83.2964 358.841 77.8711 cv
354.586 75.415 350.538 74.9229 347.533 76.4824 cv
342.579 79.272 li
cp
365.154 122.754 mo
364.896 122.754 364.645 122.621 364.506 122.383 cv
362.915 119.66 li
361.576 119.241 360.207 118.629 358.841 117.841 cv
349.031 112.178 341.05 98.4102 341.05 87.1514 cv
341.05 84.9673 341.35 82.978 341.94 81.2319 cv
340.908 79.3408 li
340.712 78.9805 340.841 78.5293 341.198 78.3281 cv
346.819 75.1636 li
350.343 73.332 354.873 73.8486 359.591 76.5723 cv
369.4 82.2363 377.382 96.0034 377.382 107.262 cv
377.382 112.995 375.365 117.235 371.703 119.203 cv
365.52 122.659 li
365.403 122.724 365.278 122.754 365.154 122.754 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
370.452 110.718 mo
370.452 121.756 362.655 126.201 353.036 120.648 cv
343.417 115.095 335.62 101.645 335.62 90.6079 cv
335.62 79.5705 343.417 75.1248 353.036 80.6782 cv
362.655 86.2315 370.452 99.681 370.452 110.718 cv
cp
0 0 0 0 cmyk
f
345.219 79.0361 mo
339.761 79.0361 336.37 83.4702 336.37 90.6079 cv
336.37 101.389 344.015 114.574 353.411 119.999 cv
356.045 121.519 358.549 122.29 360.854 122.29 cv
366.312 122.29 369.702 117.856 369.702 110.718 cv
369.702 99.9375 362.058 86.7529 352.661 81.3276 cv
350.027 79.8071 347.523 79.0361 345.219 79.0361 cv
cp
360.854 123.79 mo
358.282 123.79 355.525 122.951 352.661 121.297 cv
342.852 115.634 334.87 101.867 334.87 90.6079 cv
334.87 82.667 338.933 77.5361 345.219 77.5361 cv
347.79 77.5361 350.547 78.375 353.411 80.0288 cv
363.221 85.6929 371.202 99.46 371.202 110.718 cv
371.202 118.659 367.14 123.79 360.854 123.79 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
348.872 78.8768 mo
354.921 75.4203 li
348.872 78.8768 li
cp
0 0 0 0 cmyk
f
349.244 79.5283 mo
348.5 78.2256 li
354.549 74.769 li
355.293 76.0718 li
349.244 79.5283 li
cp
.915007 .926452 .419898 .616693 cmyk
f
368.622 100.127 mo
374.671 96.6703 li
368.622 100.127 li
cp
0 0 0 0 cmyk
f
368.994 100.778 mo
368.25 99.4756 li
374.299 96.019 li
375.043 97.3218 li
368.994 100.778 li
cp
.915007 .926452 .419898 .616693 cmyk
f
370.372 107.627 mo
376.421 104.17 li
370.372 107.627 li
cp
0 0 0 0 cmyk
f
370.744 108.278 mo
370 106.976 li
376.049 103.519 li
376.793 104.822 li
370.744 108.278 li
cp
.915007 .926452 .419898 .616693 cmyk
f
370.747 111.377 mo
376.796 107.92 li
370.747 111.377 li
cp
0 0 0 0 cmyk
f
371.119 112.028 mo
370.375 110.726 li
376.424 107.269 li
377.168 108.572 li
371.119 112.028 li
cp
.915007 .926452 .419898 .616693 cmyk
f
357.968 105.431 mo
356.996 104.602 356.119 103.548 355.425 102.386 cv
355.004 101.682 355.019 100.918 355.428 100.68 cv
355.957 100.372 356.423 99.8819 356.726 99.2317 cv
357.172 99.3548 357.725 99.1908 357.725 98.5795 cv
357.725 97.9559 357.449 97.277 357.081 96.9337 cv
356.972 94.2651 356.06 91.5231 352.991 89.7509 cv
349.922 87.9788 349.01 89.6683 348.901 92.211 cv
348.533 92.1292 348.257 92.4898 348.257 93.1134 cv
348.257 93.7247 348.81 94.527 349.256 94.9187 cv
349.56 95.9196 350.025 96.9476 350.554 97.8658 cv
350.963 98.5765 350.978 99.3572 350.558 99.5758 cv
349.863 99.9367 348.986 99.9781 348.014 99.6842 cv
346.726 99.2945 345.768 100.072 345.768 101.659 cv
345.768 104.411 li
345.768 104.944 346.145 105.594 346.61 105.862 cv
359.373 113.231 li
359.837 113.499 360.214 113.284 360.214 112.751 cv
360.214 109.999 li
360.214 108.412 359.256 106.529 357.968 105.431 cv
cp
.638849 .295933 0 0 cmyk
f
347.384 100.335 mo
346.603 100.335 346.519 101.261 346.519 101.659 cv
346.519 104.411 li
346.519 104.675 346.754 105.079 346.984 105.212 cv
359.461 112.416 li
359.464 110 li
359.464 108.662 358.63 106.981 357.481 106.001 cv
356.454 105.126 355.521 104.009 354.781 102.771 cv
354.413 102.154 354.278 101.453 354.423 100.895 cv
354.52 100.517 354.743 100.21 355.051 100.032 cv
355.477 99.7837 355.821 99.3975 356.047 98.9141 cv
356.202 98.5825 356.577 98.4116 356.927 98.5088 cv
356.927 98.5088 356.947 98.5098 356.971 98.5107 cv
356.947 98.0742 356.752 97.6519 356.569 97.4819 cv
356.425 97.3477 356.34 97.1616 356.332 96.9644 cv
356.207 93.9189 354.991 91.772 352.616 90.4004 cv
351.712 89.8784 351.156 89.769 350.85 89.769 cv
350.579 89.769 349.756 89.769 349.65 92.2427 cv
349.642 92.4644 349.534 92.6704 349.358 92.8057 cv
349.258 92.8828 349.141 92.9326 349.019 92.9517 cv
349.012 92.9941 349.007 93.0479 349.007 93.1133 cv
349.007 93.4097 349.376 94.0254 349.752 94.356 cv
349.856 94.4482 349.933 94.5679 349.974 94.7012 cv
350.248 95.605 350.674 96.5698 351.204 97.4917 cv
351.582 98.1489 351.71 98.874 351.547 99.4316 cv
351.44 99.7935 351.212 100.081 350.903 100.242 cv
350.034 100.693 348.95 100.751 347.798 100.402 cv
347.65 100.357 347.511 100.335 347.384 100.335 cv
cp
359.75 114.096 mo
359.75 114.096 li
359.499 114.096 359.245 114.023 358.997 113.88 cv
346.234 106.511 li
345.541 106.112 345.019 105.208 345.019 104.411 cv
345.019 101.659 li
345.019 99.9697 345.969 98.835 347.384 98.835 cv
347.658 98.835 347.943 98.8789 348.231 98.9663 cv
348.954 99.1855 349.609 99.1826 350.116 98.9561 cv
350.125 98.8345 350.092 98.5664 349.903 98.2397 cv
349.354 97.2852 348.905 96.2827 348.598 95.3281 cv
348.11 94.834 347.507 93.9458 347.507 93.1133 cv
347.507 92.3496 347.806 91.8638 348.19 91.6255 cv
348.457 88.8687 349.765 88.269 350.85 88.269 cv
351.572 88.269 352.396 88.5415 353.366 89.1016 cv
356.11 90.6855 357.606 93.2173 357.816 96.6299 cv
358.218 97.1387 358.475 97.8813 358.475 98.5796 cv
358.475 99.3652 357.928 99.9478 357.153 100.014 cv
356.823 100.54 356.387 100.975 355.87 101.289 cv
355.852 101.394 355.868 101.666 356.068 102.001 cv
356.726 103.101 357.551 104.09 358.454 104.86 cv
359.932 106.12 360.964 108.233 360.964 110 cv
360.964 112.751 li
360.964 113.106 360.862 113.42 360.67 113.66 cv
360.447 113.937 360.112 114.096 359.75 114.096 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
197.766 233.558 mo
197.766 222.521 205.564 209.071 215.182 203.518 cv
219.849 200.823 224.084 200.489 227.211 202.113 cv
232.831 205.278 li
231.64 207.462 li
232.258 209.154 232.598 211.156 232.598 213.447 cv
232.598 224.485 224.801 237.934 215.182 243.488 cv
213.734 244.324 212.329 244.929 210.984 245.323 cv
209.245 248.3 li
203.05 244.839 li
199.793 243.088 197.766 239.181 197.766 233.558 cv
cp
.638849 .295933 0 0 cmyk
f
222.989 201.88 mo
220.687 201.88 218.186 202.649 215.557 204.167 cv
206.161 209.593 198.516 222.777 198.516 233.558 cv
198.516 238.712 200.252 242.483 203.405 244.179 cv
208.968 247.287 li
210.336 244.945 li
210.433 244.779 210.589 244.657 210.773 244.604 cv
212.09 244.217 213.447 243.623 214.807 242.838 cv
224.204 237.413 231.849 224.229 231.849 213.447 cv
231.849 211.305 231.542 209.377 230.935 207.72 cv
230.861 207.517 230.878 207.292 230.981 207.103 cv
231.819 205.567 li
226.843 202.767 li
225.717 202.183 224.413 201.88 222.989 201.88 cv
cp
209.244 249.051 mo
209.12 249.051 208.995 249.021 208.879 248.955 cv
202.684 245.493 li
199.033 243.531 197.016 239.29 197.016 233.558 cv
197.016 222.3 204.997 208.532 214.807 202.868 cv
217.667 201.217 220.42 200.38 222.989 200.38 cv
224.656 200.38 226.192 200.739 227.556 201.448 cv
233.199 204.624 li
233.557 204.825 233.687 205.276 233.49 205.637 cv
232.458 207.528 li
233.049 209.275 233.349 211.265 233.349 213.447 cv
233.349 224.706 225.367 238.474 215.557 244.137 cv
214.192 244.925 212.823 245.536 211.483 245.955 cv
209.892 248.679 li
209.753 248.917 209.502 249.051 209.244 249.051 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
203.946 237.014 mo
203.946 248.052 211.743 252.498 221.362 246.944 cv
230.981 241.391 238.778 227.941 238.778 216.904 cv
238.778 205.867 230.981 201.421 221.362 206.974 cv
211.743 212.528 203.946 225.977 203.946 237.014 cv
cp
0 0 0 0 cmyk
f
229.18 205.332 mo
226.875 205.332 224.371 206.104 221.737 207.624 cv
212.34 213.049 204.696 226.233 204.696 237.015 cv
204.696 244.151 208.086 248.585 213.545 248.586 cv
213.546 248.586 li
215.85 248.586 218.354 247.815 220.987 246.295 cv
230.383 240.869 238.028 227.685 238.028 216.904 cv
238.028 209.767 234.638 205.332 229.18 205.332 cv
cp
213.546 250.086 mo
213.545 250.086 213.545 250.086 213.544 250.086 cv
207.258 250.085 203.196 244.954 203.196 237.015 cv
203.196 225.756 211.177 211.988 220.987 206.325 cv
223.852 204.671 226.608 203.832 229.18 203.832 cv
235.466 203.832 239.528 208.964 239.528 216.904 cv
239.528 228.162 231.547 241.93 221.737 247.594 cv
218.873 249.247 216.117 250.086 213.546 250.086 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
225.526 205.173 mo
219.477 201.716 li
225.526 205.173 li
cp
0 0 0 0 cmyk
f
225.153 205.824 mo
219.104 202.368 li
219.849 201.065 li
225.897 204.521 li
225.153 205.824 li
cp
.915007 .926452 .419898 .616693 cmyk
f
205.776 226.423 mo
199.727 222.966 li
205.776 226.423 li
cp
0 0 0 0 cmyk
f
205.403 227.074 mo
199.354 223.618 li
200.099 222.315 li
206.147 225.771 li
205.403 227.074 li
cp
.915007 .926452 .419898 .616693 cmyk
f
204.026 233.923 mo
197.977 230.466 li
204.026 233.923 li
cp
0 0 0 0 cmyk
f
203.653 234.574 mo
197.604 231.118 li
198.349 229.815 li
204.397 233.271 li
203.653 234.574 li
cp
.915007 .926452 .419898 .616693 cmyk
f
203.651 237.673 mo
197.602 234.216 li
203.651 237.673 li
cp
0 0 0 0 cmyk
f
203.278 238.324 mo
197.229 234.868 li
197.974 233.565 li
204.022 237.021 li
203.278 238.324 li
cp
.915007 .926452 .419898 .616693 cmyk
f
216.43 231.727 mo
217.402 230.898 218.279 229.844 218.973 228.682 cv
219.394 227.978 219.379 227.214 218.97 226.976 cv
218.441 226.668 217.975 226.178 217.672 225.528 cv
217.226 225.651 216.673 225.487 216.673 224.876 cv
216.673 224.252 216.949 223.573 217.317 223.23 cv
217.426 220.561 218.337 217.819 221.407 216.047 cv
224.476 214.275 225.388 215.964 225.497 218.507 cv
225.865 218.425 226.141 218.786 226.141 219.409 cv
226.141 220.021 225.588 220.823 225.142 221.215 cv
224.838 222.216 224.373 223.244 223.844 224.162 cv
223.435 224.873 223.42 225.653 223.84 225.872 cv
224.535 226.233 225.412 226.274 226.384 225.98 cv
227.672 225.591 228.63 226.368 228.63 227.955 cv
228.63 230.707 li
228.63 231.24 228.253 231.89 227.788 232.158 cv
215.025 239.527 li
214.561 239.795 214.184 239.58 214.184 239.047 cv
214.184 236.295 li
214.184 234.708 215.142 232.825 216.43 231.727 cv
cp
.638849 .295933 0 0 cmyk
f
217.564 224.783 mo
217.879 224.783 218.227 224.942 218.352 225.21 cv
218.577 225.693 218.921 226.079 219.347 226.327 cv
219.655 226.507 219.877 226.813 219.975 227.19 cv
220.119 227.749 219.985 228.45 219.618 229.066 cv
218.878 230.305 217.944 231.422 216.917 232.298 cv
215.768 233.276 214.934 234.958 214.934 236.296 cv
214.934 238.709 li
227.414 231.509 li
227.645 231.375 227.88 230.971 227.88 230.707 cv
227.88 227.955 li
227.88 227.557 227.795 226.631 227.014 226.631 cv
226.887 226.631 226.749 226.653 226.601 226.698 cv
225.451 227.048 224.366 226.99 223.495 226.538 cv
223.185 226.377 222.957 226.089 222.851 225.727 cv
222.688 225.169 222.816 224.444 223.194 223.788 cv
223.725 222.867 224.15 221.901 224.424 220.997 cv
224.465 220.863 224.542 220.743 224.647 220.651 cv
225.022 220.321 225.391 219.706 225.391 219.409 cv
225.391 219.35 225.387 219.3 225.381 219.26 cv
225.249 219.247 225.125 219.193 225.01 219.105 cv
224.834 218.97 224.757 218.761 224.748 218.539 cv
224.641 216.064 223.818 216.064 223.548 216.064 cv
223.241 216.064 222.686 216.175 221.782 216.696 cv
219.406 218.068 218.19 220.216 218.066 223.26 cv
218.058 223.457 217.973 223.644 217.829 223.777 cv
217.646 223.948 217.449 224.375 217.426 224.794 cv
217.471 224.786 217.517 224.783 217.564 224.783 cv
cp
214.647 240.392 mo
214.044 240.392 213.434 239.93 213.434 239.047 cv
213.434 236.296 li
213.434 234.529 214.466 232.416 215.943 231.156 cv
216.848 230.386 217.673 229.396 218.33 228.297 cv
218.53 227.962 218.546 227.69 218.528 227.585 cv
218.012 227.271 217.575 226.836 217.245 226.31 cv
216.93 226.282 216.64 226.167 216.415 225.979 cv
216.098 225.716 215.923 225.323 215.923 224.876 cv
215.923 224.178 216.18 223.436 216.582 222.926 cv
216.791 219.515 218.287 216.982 221.032 215.397 cv
222.002 214.837 222.825 214.564 223.548 214.564 cv
224.633 214.564 225.94 215.164 226.208 217.921 cv
226.592 218.16 226.891 218.646 226.891 219.409 cv
226.891 220.243 226.288 221.131 225.8 221.624 cv
225.493 222.579 225.043 223.582 224.494 224.536 cv
224.306 224.863 224.273 225.131 224.282 225.253 cv
224.788 225.479 225.444 225.48 226.167 225.263 cv
226.455 225.176 226.74 225.131 227.014 225.131 cv
228.429 225.131 229.38 226.266 229.38 227.955 cv
229.38 230.707 li
229.38 231.504 228.857 232.406 228.164 232.808 cv
215.4 240.176 li
215.152 240.319 214.899 240.392 214.647 240.392 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
396.261 277.931 mo
395.847 277.931 395.511 277.595 395.511 277.181 cv
395.511 272.677 393.646 267.605 390.644 263.945 cv
390.381 263.625 390.428 263.152 390.748 262.89 cv
391.068 262.627 391.54 262.674 391.804 262.994 cv
395.064 266.97 397.011 272.273 397.011 277.181 cv
397.011 277.595 396.675 277.931 396.261 277.931 cv
cp
f
386.904 260.448 mo
386.775 260.448 386.644 260.415 386.524 260.345 cv
380.665 256.89 li
380.309 256.679 380.189 256.219 380.399 255.862 cv
380.61 255.506 381.069 255.386 381.427 255.597 cv
387.286 259.052 li
387.643 259.263 387.762 259.723 387.552 260.079 cv
387.411 260.316 387.161 260.448 386.904 260.448 cv
cp
f
384.365 264.005 mo
356.925 247.823 li
353.117 245.624 350.03 247.958 350.03 253.036 cv
350.03 260.794 li
350.03 265.872 353.117 271.771 356.925 273.97 cv
366.446 279.781 li
379.203 299.272 li
379.203 287.142 li
384.365 290.152 li
388.173 292.351 391.261 290.017 391.261 284.939 cv
391.261 277.181 li
391.261 272.103 388.173 266.204 384.365 264.005 cv
cp
.638849 .295933 0 0 cmyk
f
354.188 247.745 mo
352.117 247.745 350.779 249.822 350.779 253.036 cv
350.779 260.794 li
350.779 265.624 353.704 271.243 357.3 273.32 cv
366.837 279.14 li
366.932 279.198 367.013 279.276 367.074 279.369 cv
378.453 296.756 li
378.453 287.143 li
378.453 286.874 378.597 286.626 378.829 286.492 cv
379.064 286.359 379.35 286.36 379.581 286.495 cv
384.743 289.505 li
386.671 290.617 388.439 290.423 389.486 288.944 cv
390.156 287.997 390.511 286.611 390.511 284.938 cv
390.511 277.181 li
390.511 272.35 387.586 266.73 383.99 264.654 cv
356.544 248.47 li
355.714 247.99 354.919 247.745 354.188 247.745 cv
cp
379.203 300.021 mo
378.955 300.021 378.717 299.897 378.575 299.683 cv
365.911 280.332 li
356.534 274.61 li
352.541 272.304 349.279 266.102 349.279 260.794 cv
349.279 253.036 li
349.279 248.911 351.206 246.245 354.188 246.245 cv
355.187 246.245 356.233 246.558 357.3 247.174 cv
384.746 263.358 li
388.749 265.67 392.011 271.872 392.011 277.181 cv
392.011 284.938 li
392.011 286.924 391.562 288.608 390.712 289.81 cv
389.836 291.048 388.555 291.729 387.103 291.729 cv
387.103 291.729 li
386.104 291.729 385.057 291.417 383.99 290.802 cv
379.953 288.448 li
379.953 299.271 li
379.953 299.604 379.735 299.896 379.417 299.99 cv
379.347 300.012 379.274 300.021 379.203 300.021 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
364.616 261.165 mo
364.487 261.165 364.355 261.132 364.236 261.062 cv
357.419 257.042 li
357.063 256.831 356.943 256.371 357.153 256.015 cv
357.364 255.658 357.823 255.538 358.181 255.749 cv
364.998 259.769 li
365.354 259.979 365.474 260.439 365.264 260.796 cv
365.123 261.033 364.873 261.165 364.616 261.165 cv
cp
f
383.489 272.296 mo
383.36 272.296 383.229 272.263 383.109 272.192 cv
367.842 263.188 li
367.485 262.978 367.366 262.518 367.576 262.161 cv
367.787 261.805 368.247 261.685 368.604 261.896 cv
383.871 270.899 li
384.228 271.11 384.347 271.57 384.137 271.927 cv
383.996 272.164 383.746 272.296 383.489 272.296 cv
cp
f
373.584 271.454 mo
373.455 271.454 373.323 271.421 373.204 271.351 cv
357.419 262.042 li
357.063 261.831 356.943 261.371 357.153 261.015 cv
357.364 260.658 357.823 260.538 358.181 260.749 cv
373.966 270.058 li
374.322 270.269 374.441 270.729 374.231 271.085 cv
374.091 271.322 373.841 271.454 373.584 271.454 cv
cp
f
383.489 277.296 mo
383.36 277.296 383.229 277.263 383.109 277.191 cv
376.043 273.024 li
375.686 272.813 375.567 272.354 375.777 271.997 cv
375.988 271.64 376.446 271.519 376.805 271.732 cv
383.871 275.899 li
384.229 276.11 384.347 276.57 384.137 276.927 cv
383.996 277.164 383.746 277.296 383.489 277.296 cv
cp
f
383.489 282.296 mo
383.36 282.296 383.229 282.263 383.109 282.192 cv
357.419 267.042 li
357.063 266.831 356.943 266.371 357.153 266.015 cv
357.364 265.658 357.823 265.538 358.181 265.749 cv
383.871 280.899 li
384.228 281.11 384.347 281.57 384.137 281.927 cv
383.996 282.164 383.746 282.296 383.489 282.296 cv
cp
f
265.41 134.395 mo
265.336 134.395 265.262 134.384 265.188 134.361 cv
264.792 134.239 264.571 133.819 264.693 133.423 cv
266.527 127.497 270.26 122.437 274.678 119.886 cv
275.037 119.679 275.495 119.8 275.702 120.16 cv
275.909 120.519 275.787 120.978 275.428 121.185 cv
271.39 123.516 267.826 128.375 266.126 133.867 cv
266.026 134.188 265.73 134.395 265.41 134.395 cv
cp
f
277.528 124.88 mo
303.995 109.796 li
308.531 107.177 312.208 109.957 312.208 116.005 cv
312.208 122.226 li
312.208 128.274 308.531 135.3 303.995 137.919 cv
300.051 140.18 li
300.051 155.364 li
289.89 145.936 li
277.528 153.003 li
272.992 155.622 269.315 152.842 269.315 146.794 cv
269.315 140.573 li
269.315 134.524 272.992 127.498 277.528 124.88 cv
cp
.638849 .295933 0 0 cmyk
f
289.891 145.187 mo
290.075 145.187 290.258 145.255 290.401 145.387 cv
299.301 153.645 li
299.301 140.18 li
299.301 139.912 299.445 139.663 299.678 139.529 cv
303.622 137.268 li
307.942 134.774 311.458 128.025 311.458 122.226 cv
311.458 116.005 li
311.458 112.09 309.809 109.56 307.256 109.56 cv
306.358 109.56 305.387 109.858 304.37 110.445 cv
277.9 125.531 li
273.581 128.024 270.065 134.773 270.065 140.573 cv
270.065 146.794 li
270.065 150.709 271.714 153.238 274.268 153.238 cv
275.165 153.238 276.136 152.94 277.153 152.354 cv
289.519 145.285 li
289.635 145.219 289.763 145.187 289.891 145.187 cv
cp
300.051 156.114 mo
299.866 156.114 299.683 156.045 299.541 155.914 cv
289.785 146.861 li
277.9 153.654 li
276.655 154.373 275.432 154.738 274.268 154.738 cv
270.803 154.738 268.565 151.62 268.565 146.794 cv
268.565 140.573 li
268.565 134.295 272.417 126.964 277.153 124.23 cv
303.624 109.144 li
304.868 108.426 306.091 108.06 307.256 108.06 cv
310.72 108.06 312.958 111.179 312.958 116.005 cv
312.958 122.226 li
312.958 128.503 309.105 135.834 304.37 138.568 cv
300.801 140.615 li
300.801 155.364 li
300.801 155.662 300.625 155.932 300.351 156.051 cv
300.255 156.093 300.153 156.114 300.051 156.114 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
294.019 125.367 mo
293.762 125.367 293.512 125.235 293.372 124.998 cv
293.162 124.642 293.28 124.182 293.637 123.971 cv
303.121 118.378 li
303.478 118.169 303.938 118.286 304.148 118.643 cv
304.358 119 304.24 119.459 303.883 119.67 cv
294.399 125.263 li
294.279 125.333 294.148 125.367 294.019 125.367 cv
cp
f
277.813 134.925 mo
277.556 134.925 277.306 134.793 277.166 134.556 cv
276.956 134.199 277.074 133.739 277.431 133.529 cv
289.652 126.321 li
290.009 126.113 290.469 126.229 290.679 126.586 cv
290.89 126.943 290.771 127.403 290.414 127.613 cv
278.193 134.821 li
278.073 134.892 277.942 134.925 277.813 134.925 cv
cp
f
277.813 139.925 mo
277.556 139.925 277.306 139.793 277.166 139.556 cv
276.956 139.199 277.074 138.739 277.431 138.529 cv
303.121 123.378 li
303.478 123.169 303.938 123.286 304.148 123.643 cv
304.358 124 304.24 124.459 303.883 124.67 cv
278.193 139.821 li
278.073 139.892 277.942 139.925 277.813 139.925 cv
cp
f
287.81 139.029 mo
287.553 139.029 287.303 138.897 287.163 138.66 cv
286.953 138.304 287.071 137.844 287.428 137.633 cv
303.121 128.378 li
303.478 128.17 303.938 128.286 304.148 128.643 cv
304.358 129 304.24 129.459 303.883 129.67 cv
288.19 138.925 li
288.07 138.996 287.939 139.029 287.81 139.029 cv
cp
f
277.813 144.925 mo
277.556 144.925 277.306 144.793 277.166 144.556 cv
276.956 144.199 277.074 143.739 277.431 143.529 cv
284.043 139.629 li
284.4 139.42 284.86 139.537 285.07 139.894 cv
285.281 140.25 285.162 140.71 284.805 140.921 cv
278.193 144.821 li
278.073 144.891 277.942 144.925 277.813 144.925 cv
cp
f
241.197 207.947 mo
240.829 207.274 li
240.135 206.005 239.281 204.88 238.29 203.932 cv
237.99 203.646 237.98 203.17 238.266 202.871 cv
238.552 202.57 239.027 202.562 239.327 202.848 cv
240.252 203.733 241.069 204.755 241.762 205.892 cv
261.569 194.493 li
261.927 194.287 262.387 194.409 262.593 194.769 cv
262.8 195.128 262.676 195.586 262.317 195.793 cv
241.197 207.947 li
cp
f
265.636 193.768 mo
265.377 193.768 265.125 193.633 264.986 193.392 cv
264.779 193.033 264.903 192.575 265.262 192.368 cv
272.947 187.945 li
273.305 187.739 273.765 187.862 273.971 188.221 cv
274.177 188.58 274.054 189.039 273.695 189.245 cv
266.01 193.668 li
265.892 193.736 265.763 193.768 265.636 193.768 cv
cp
f
519.477 80.022 mo
519.179 80.022 518.896 79.8433 518.779 79.5493 cv
517.281 75.7827 514.709 72.5664 511.9 70.9448 cv
503.45 65.9619 li
503.094 65.7515 502.975 65.292 503.185 64.9351 cv
503.396 64.5786 503.854 64.4565 504.212 64.6699 cv
512.656 69.6494 li
515.788 71.4565 518.53 74.8643 520.174 78.9946 cv
520.326 79.3794 520.139 79.8159 519.754 79.9688 cv
519.663 80.0049 519.569 80.022 519.477 80.022 cv
cp
f
509.735 74.6021 mo
485.139 60.0966 li
481.725 58.1256 478.958 60.2178 478.958 64.7696 cv
478.958 71.7235 li
478.958 76.2753 481.725 81.5631 485.139 83.534 cv
493.673 88.743 li
505.108 106.214 li
505.108 95.3418 li
509.735 98.0396 li
513.149 100.011 515.917 97.9184 515.917 93.3666 cv
515.917 86.4127 li
515.917 81.8609 513.149 76.5731 509.735 74.6021 cv
cp
.638849 .295933 0 0 cmyk
f
482.685 60.105 mo
480.876 60.105 479.708 61.936 479.708 64.7695 cv
479.708 71.7236 li
479.708 76.0293 482.313 81.0361 485.514 82.8848 cv
494.064 88.103 li
494.159 88.1611 494.24 88.2393 494.302 88.3325 cv
504.358 103.699 li
504.358 95.3418 li
504.358 95.0732 504.502 94.8252 504.734 94.6914 cv
504.969 94.5581 505.254 94.5596 505.486 94.6938 cv
510.113 97.3916 li
510.848 97.8154 511.547 98.0313 512.189 98.0313 cv
512.19 98.0313 li
513.041 98.0313 513.738 97.6548 514.264 96.9121 cv
514.854 96.0762 515.167 94.8501 515.167 93.3667 cv
515.167 86.4126 li
515.167 82.1069 512.563 77.1001 509.36 75.2515 cv
484.758 60.7427 li
484.026 60.3208 483.327 60.105 482.685 60.105 cv
cp
505.108 106.964 mo
504.86 106.964 504.622 106.841 504.48 106.625 cv
493.139 89.2954 li
484.748 84.1743 li
481.088 82.061 478.208 76.5879 478.208 71.7236 cv
478.208 64.7695 li
478.208 61.0244 479.965 58.605 482.685 58.605 cv
483.594 58.605 484.546 58.8882 485.514 59.4473 cv
510.116 73.9561 li
513.726 76.04 516.667 81.6294 516.667 86.4126 cv
516.667 93.3667 li
516.667 95.1621 516.26 96.6875 515.488 97.7783 cv
514.688 98.9087 513.518 99.5313 512.19 99.5313 cv
512.189 99.5313 512.189 99.5313 512.189 99.5313 cv
511.28 99.5313 510.328 99.248 509.36 98.689 cv
505.858 96.6475 li
505.858 106.214 li
505.858 106.546 505.641 106.838 505.322 106.933 cv
505.252 106.954 505.18 106.964 505.108 106.964 cv
cp
.915007 .926452 .419898 .616693 cmyk
f
488.268 71.937 mo
487.604 71.937 487.533 72.7251 487.533 73.064 cv
487.533 74.4229 488.534 76.1494 489.72 76.834 cv
490.012 77.0029 490.289 77.0918 490.522 77.0918 cv
491.186 77.0918 491.257 76.3037 491.257 75.9648 cv
491.257 74.606 490.256 72.8794 489.069 72.1948 cv
488.777 72.0259 488.5 71.937 488.268 71.937 cv
cp
490.522 78.3921 mo
490.055 78.3921 489.566 78.2466 489.069 77.96 cv
487.479 77.0405 486.232 74.8901 486.232 73.064 cv
486.232 71.6123 487.051 70.6367 488.268 70.6367 cv
488.734 70.6367 489.224 70.7822 489.72 71.0688 cv
491.311 71.9878 492.558 74.1382 492.558 75.9648 cv
492.558 77.4165 491.739 78.3921 490.522 78.3921 cv
cp
f
496.175 76.543 mo
495.512 76.543 495.44 77.3315 495.44 77.6704 cv
495.44 79.0293 496.441 80.7554 497.627 81.4399 cv
497.919 81.6089 498.196 81.6982 498.43 81.6982 cv
499.093 81.6982 499.164 80.9097 499.164 80.5708 cv
499.164 79.2119 498.162 77.4854 496.977 76.8008 cv
496.685 76.6318 496.407 76.543 496.175 76.543 cv
cp
498.43 82.998 mo
497.962 82.998 497.474 82.8525 496.977 82.5659 cv
495.386 81.6475 494.14 79.4971 494.14 77.6704 cv
494.14 76.2183 494.958 75.2427 496.175 75.2427 cv
496.642 75.2427 497.131 75.3882 497.627 75.6748 cv
499.218 76.5938 500.465 78.7441 500.465 80.5708 cv
500.465 82.0225 499.646 82.998 498.43 82.998 cv
cp
f
504.082 81.1489 mo
503.419 81.1489 503.348 81.9375 503.348 82.2764 cv
503.348 83.6353 504.349 85.3613 505.534 86.0459 cv
505.826 86.2148 506.104 86.3042 506.337 86.3042 cv
507 86.3042 507.071 85.5156 507.071 85.1768 cv
507.071 83.8179 506.07 82.0913 504.884 81.4072 cv
504.592 81.2383 504.314 81.1489 504.082 81.1489 cv
cp
506.337 87.604 mo
505.869 87.604 505.381 87.4585 504.884 87.1719 cv
503.293 86.2534 502.047 84.103 502.047 82.2764 cv
502.047 80.8247 502.865 79.8491 504.082 79.8491 cv
504.549 79.8491 505.038 79.9946 505.534 80.2813 cv
507.125 81.1997 508.372 83.3501 508.372 85.1768 cv
508.372 86.6284 507.554 87.604 506.337 87.604 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.0
%%For: (Natalya) ()
%%Title: (2001.w013.n001.114B.p30.114__01.eps)
%%CreationDate: 1/27/2020 6:28 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBjVOqoD&@UIQmWMiXGs/mK6:RA.h9r&5YJiEC^:i,ak#efC+@LC]@I9GL,pB**h;FC`"IlVN7bB]"9c/GHVSNRakU5U(I::
%Sl9ZFL8*`[9?AW4rc.D`ZeAj?);E#h._S=(llNO/9%`ABUO(GXXQPI*JnAmR\:?Y,mTiqu8)JBAH;M/(52M<F>-?DnEn"t0h40a3
%#cO@nkLUa<"U!\0%c:u$lFgqW!<'h#:'9p.k`1'`IiO0u/t`HUWeaMln(e?h)o+IPRu4)[X(Ao/UXL/Ndkl=0.]R(@Q9H:C(U[#I
%*HZ'ooA_Tdj6]qWUSG%.YT#809ENfYgs#TQH-iU9)616C'tiodkAZ6BgjTVS*U72:o2N:8I^-Xe-O,BB9uVTRZb^k\?H_RnK?\IV
%i8YdqCB09&QuH9i*RoWH&@+\p''%_DWtD_B3Wn]+GE9X2Wuc@M>(9gZnn)c6;t*6T6SsOOV1rb<0\:p(>WZk,3EQ=[PQ'K7'@@-$
%e\^e@\S#>I%GP,S]QX%Jp-4WA6j6EHi58kaCqjl=\pu:MaCVEZ(KJ@6'*6t'>RrHCU4`^BS$t?eg)"06j?'C9E08^m:-?_C?=Pqh
%&[jc15kfB8'fM,J2h^C`R8]*8Q8`V^<=Ae&$sbD/r2"/VlA?ai5P>lQg:2),+MRa?g-r-SXr/ppCN72IDV(nF>h`H-@D@VK]HdB!
%`IEmq:u1Mn9nBgSSJLs_O^P$ZNqaU7QbCCA1T2JK1^Bu*3J^T71nj.=h#P6fUDpEgJ*./'\tjETr4o>M%kJ+d\1[b5('R[hnQ"32
%Y--ej?"\B)Aa7RP=V`p%/H!\sYaK'21Wq87`LsAlD-Rn3\F;lA>o0!@/iLUkp`#\;MqG+5`3.''hC05F9t?4,b@M;II"MmNA_)\]
%btr!hYrUKClmhGh3crCYCkd&jDet/M$#8-V,RT$2)^Gc?'CCAlX>A:Y^[Ws&$@h)4N*0t1,RT#7mJ$n%8/KRoGfh_UAk3j>`\up6
%_Sdo9nr2%VQ]+r>Rrr;l1BJEi$p-@3+YT-R1grW$$u*Z;3##Rf7QJ*$(Co>11SdmL1h.!\N&9O4r!NgAEe(nbnd*+ifF2K4heY$8
%\1m&#$uerb$\Z0S,dDG"7E0[j`gA,u_l.2N&Fp5e2DZ:V//r@KI]s7o-tF"uV!a1^FrP/6hq3n03mu+E_E-^qCkDjWG9Q'7P8O2L
%*)+e73")DlE_"2,O^UR"PXMT)j$(AAnXe"LQq,5UKb<r3oWagOT+0*N@/&=b8"M.ZPAI]$N'V991Arn(::-YdJaPjO'0R#Q9([X*
%]$Q!r&ug4%9g\H8eJ>em<Wd=Sm%j%U9*Dg-AMGt[QuuD/KmrNVRnAtGBH"LJ]WrWs@"0Q-lj(+k-3GQtm)QQfhoRDGE?+\]j2A8c
%r5\E]XlPcG'FO3qjH][/GMd&+jH]\.9'l$-Q2N-$&%D/?LA77?0DeuO`EnZrbpXL-V<TsFf6]rMGg.l3.s:m&Y.nWCZL=1Mc=_Wf
%Iq@Fl2')B/ci.uQr;PB#(]&Vmh']l;0@YK4o@!XfXS]M/5'tu7;,*:\Dtq(sh.^K'XASnmo\Z)PW<8_?KTW!o'q>37a<:^IAT?d^
%@@?LUqGeY&U'\^>R=qmr[]+VBN>V3_f\M-`5Ip?5ZO<e>%Y<GkfGCZ?X?gqc=!>T:^?:a(SjSGmF;po7H;\F8g]_$imm`bB!Pu$c
%pPFKR==M<P\1CQ3(3"_Y0GIZ$?kkKA8M-,4#K6n&;:n]W6(]:<@t_;WX73.9Wl'2EO/3DK5fS3Dm[aX=D4<M"$'&ce]uAPfn^nDk
%E=ZLIhI9TMd)(Uc>V0PjD)MQ@U`lj[6;*5hNF::0KWJYcD@CM3\3b!S-tOX0!L+3L&n;k.MWl)%I_m72l7>C8X`>:m\#q=S8=`@6
%<qL3s&*ERG[32=h1`iB/qkg5N-?@srps^pY=eGf:,Zr89BTD4'S-,L><q]Kk#ImJpX&q>:1rl(6Qje+,!mIe_7LK^gCBJ$[qmN-p
%/IN1q2OqYV:]i09p)Kh5R+d?//dmdsUnaoqjWh%-(#YSulY:aU@%,8?5T518[)k(cjpah0lmqRV,Qjl0.jON)erc&e9KOLb.TmRB
%Nsj,9@3.hM73IOsW'ErU7E]a3m:_@g4WuARb=mLn,,ii+Ltd,\-oA7g\6OIuV*UV6blhsb\S/9?irkhaI=c%X=M.DpJK6Rp-Xb&H
%KAhB895!MsOFq_AP_?57Z,!^UKbho;+YVu<q.pA[L^u]`PQE4?\MTZ+FqSSKc#!8^O\A_`Efl;W]7al)l4GW`Fp+r=24*Qt;W:(F
%)+@tN)!>=q88uPjK(S<+Sr+OM@ip!3$l!)-b#$9e/W:A$5r*tRTh(1Gn_dl/WWFLI('p$LF.amuG^/_0VLrl[fRce*E=O2oZk0`T
%gMB-<8oc):M5t)61)GQ.58=e5AS#*lj=j.c\n#Dk;2@i#(L%IuGK<nF2#+ooY79gW3sMX>>D.PAL"SCq-$7QP3G;U+m'5tPImq#g
%(1rN4.@qk?7Fi&LL`VqCadM:qBS*:d4j)d3m*b[YSXF@Pf*F/A1(k'H.N&a>_UB><d*B7.YD2m55'WC?Lol5COtQigKMi??>=r-9
%MD8<C-6$&U7L:_f2o.Yd@Pb2Sm_^51j5XN:;.3CC'uKAkf/0&G-"7)u4"?*e!I:ngJQ6K=QOsQlZ'33cY@OWV1h&Q-ObX!MddX(V
%:5Wk[K$quITI#FOR58(MVB)po#/@,DO[Si$,5rAkAsX,=ii.GJ@;2i[?:LXH_+'suNc<9rRF9dbK'P.E"q(7iOj]u@`dZ"gDVV,B
%'j=IH*\hF$<,ND<h:(jKMSe5SPsCj6WX=>kY`NCoCft;"?kI\Y;F3IOo1ht(WZ2qr1)i!*Zuk9[:qRffi3"]OFVDVX2ODd2m]q6<
%9r8OgL+WN^TBX#q2W")S]H<W\13X9_Ma^C7UiWM:PaE;AOs6!;SkW&6Mk5T);Ob3%<RZYo"&$`.TS+5Ei^>bQ'G@aKJ=/*kER7Aj
%IrU:,aU,L4AuIHB5VYQ.bl[`[KdC@\8LL8k+phg8UPP9OWTtrep>[DtjJ`u8YUi)=$3b1m:`,cXBuHiXQF8=qm9!pK+hb>/FM5bM
%[CE'P;&*(u8b-$V-KLW$(S@?=O6S<J&Kr7:.lKari?8i&"WgrGB[3sqFd$pNga=u^Y6qfI6<8t`Z/D\;rd`KmGZ@-M_Hr"N7RLbA
%kC25&`_p2t_'-e)/:032&VMiR-hL'lW"4g$TKCjEnD2kG18CLOfEJ"N&H--70P%S#F2`_XRN;4h'/pA4XN1^A=".&p@l#!8`_f32
%B\W^k`;j#9h;ERL,Xe:F<q45Rh!!?5ks&<,ps2'^gdPX%&F6%04fl\`Us#4$#t??spSFCZZilB"74NqKnhe1,[K>OCD.G'G1Qofi
%iuepHPKI:7b"Y*G<6YT3iFN5OI#/5'&_X&V6J<:u6OGJ?:e5QH@"Q?TE&fe&_"(8N3Xlg::aSX[`O%1#ib9IoWfecaGYPPMjSO>`
%-uP_D#V-aeY[B;_"^mO^^fiKopjsJcI+(M77g@\B)7YUO/R/`k/TF0jL[@oLclMml;+b*"g%$l$>'<T[&GB[/!j4$b?\+\#4Z5M$
%O6CoF84aFA$12D!DR68KKiN3R!/>Qdf59O>_dajF@+eX&j<]rlH%iF%kV>tM6G2?<lHU%KLq8H7&F*uj4\N60ADVBu!dYH9GYAlE
%Y^.#l:IXV9[Z1OMXI+\D;>O@+-Afi.XZP(ZO:Q=TcGV'Te-KpRBp:@:\>?K]R&gbYNbj\\a2Ei@M6SqnC_&-<Q("'gZ7&uk?W\SX
%EYMN(q^T\g&e`AD.?OT?Q$5>G_)Qs'_51\`M7<)<@ZO-[_c;E@$$g4NbChX9dC<7Hc75'E$*Qhh`_[GMBUMEsH!jhMEZ)bG(/M5Y
%/b10S-/mXHdGSEF-lNZ8&FE^;C"\"J<XG??[\glV<l1^g*g$8C#DA=C-oIlI$EolHd1h]130V^6,s![?;VG.1OUYpq&G*`^)@I1'
%rlu0CAT1BQLKH%M*>r3@cUDYaiE.79W%S`+Rtdpg]IRs"^iEYn\\O*59Vs62AqbAceq'`0)@JrsL#Y?lNUm9T!t\3p?>1aVBUF(2
%muZe`4PWPAXCFSKli;oJj?Ftt1$TuW2e#7r9$i78+?i>3SgZ%/>t(bj(<^^s:6>X4KpZJ&m$3An>ccFK`OOD$R>+E?7<k5pW"kSN
%qF^/eP9A-UaIk!E(K*j5kIKe\7V=8'(r6&EP_E4PU0VFO.tD#5!In%Y_%8%$#")A'<CGoe+p-adZ_!o<V%FM?3&Ma(o89AuZ679j
%$3eX9&M"WaH1loNf6OA\1pT^-3_Xqo\2M<Rk_N[aC89s"18'KHM25K;>%==!Ue5Wp-R472`,U6rb:lT3]#DO$n]Y<sj(N.lGf%Bu
%1)Ge<`YOtb(A77o2%%QP23PrDR(o;tdtD^/8JI%,C+?#A"h&Ba:di_mM]#5k3"BSZ(>!J@N:(@V94VndYDS,;hkpRkZ*0D8:^Dm!
%h70=!L9k'C7O?EWjJDCV7>Zq=I^8N3?7i91KUHLd?%JUh.O-CC`OoMn/k[CD;g9ddL`@2*G@'q`Y&-):Pbt<TI#YR+Z'a87iWF/P
%AHmci4<ZbeI_^r/+tD0^j:\M$OL\af-(Z+XZDrKL,`2!;YM(:M7scU0NOc;lp8nc>"tN)TThj_F]4_]/GnR,c1/TpI*[$BCFF15u
%B+EQs`FLf@AH.@lZ/(gI9^AJ&V&HFnV@)"5VJCF0a]='E-Z%CmE>VS;%#]6D[:5LEgL2d9\:CsNJhGj<]*#uAWX5[0-"/'E9JQ=B
%Lrc1C(c.CCB_>n[H+[@=$*]*/bE<5.,+eBs5/hsng*Y*+$p02i22d.u%!>Ep&a##[/]Dg(Wj?7TI++V+4[R2P/Vg$FS.pK0-dBdS
%[`MBYJj\X<S&_luIV.\7T/MkmR\VW?bj0;ZbN]P<j@,Z2.>:Jr">ssQ+*1a+/mBd$;6Yp#oFT4:;VagbSbfrJ8][JK9Bh%4>fu[m
%C:+7Y#CWpA^.69".-ed]4AMi0aU2E(\E%4;?>@t-m?Rai@Te*=8kF9/Q"0^N0eA$>UYl7e@?Eo8R?)E6+GAFZJZ?ND.nI:AhI=T)
%4g8&)Ms%;O5Bee`]:dE.iA`6e"N@.8d`@$pJ9.sjI^<E7g3f5ARFUcYSs7R:']\s:^aA.rUPld5@O"RoFmE)[g&X^L5jf"r-2>>_
%ZW?4p,*bkkfsJn\&mJ$1I!.Q(mF3gKblT[o'O'-iL=eK.,(4:`Q-n]bnZP;P?=R@>%[U_[g5m9W#YWk0EbB#I=)!ad,G%_*$Q(ki
%0EDr[1@7R@J%`#;oY"!P3rO]a'rkIdUWrSLlt,(K.PqJEoDIkj96B!4+!PjZkgJq<J&1K#Hjn)eg]`?:,<Fb>`[`DPDO`C&QGl,2
%Y8Qt\h!7LH6h(g[qcD&1MleY74CNE($^&`COY&=;CtFWP:t'YcMCNik':$4:b?PIi-J]8"Mk/tI$50P0a%$C2jmCd.CYV2dc9=S/
%E,URA,AgR^l-JK<5lSpcGq(Mq(+T/Wg'&c=q=A'ZmBp;;'QATn$7jOGWVg,#rMO9%j7"1L;'ZHid]?IF(QO=r8RSFU_:eQ,Y:m9#
%-10=/mUm5;G+Mk_^BfVhQ<@UbM,\K7)[OsHJK\b<X=X<6>=Zb=\:nN19[>9J?5%5C?l]=pd"%#p:/RsLMg'DMI.\loV5o+m%QnXN
%[];l9X2qKr'O&Ka3\]R`6R,df.#L7RbR_DM4BC+s=`PT;?5um;G!q>$k\Ti)`qQgCrq0MA0j1tgI3)1AY`0BQTa%tD_^N)CoS=2d
%"5ZIB??(sdo7c^)Z2RUF!"N/npfR)i/GAh1oYK)8(>&A1YC1@MZ5V,$j:E2@TC=leXt(<2^;Fe'*7Ie+F7_!EYiD43H_p-pfCe$m
%*?*fc266MODuR0^2=RsJpmH'oM=?.@<0&[,h;f*XG8,4IXZtM%g^.rr14g"D-@Y7XcTbaAHd:kA]a$L*gJP/^dl`]jr+!jL7V?/t
%9j$XLmFqTWC2X(<$iI9">G=VLjGqt\"ic)-j#6_+elnY!@(@>c_]68rIHaPtR\db@Sk&0;1&urmRbtu.e<1#JmBV[q:_0!\4%D6h
%!I&>:i(a9"8qt9=@J=W90uJ14"`0l0W(l1E@i@nIZ:qZ1CCUb=Yb9hN*jr1j_5^q*4Otb#TLW'l[rU.d/;O4gJIdA#AZei?S(19X
%$he5MBB24.AJq`ieEaN#G0mh%<H<e:YB-*nNhUh^qN1UE9_(?XKfq5Td1+jTr?e:PE)thgImU?pAUS08[^aqnRGd3ibp"!'Wn+sR
%NDRU!D2u=8+S34QZV85\oV6CAeSC^F4Ltq]!6qKClJ^-O:,gC-RuStOgb9eGDoI+`i+m>sGL(laG$\rb@@X*!XW&Uu))YUm#c$2&
%A^Cd@6_`[>18K1&ISKN?CMSG!U#l\Vfro8%K5(kNid,M,FgDrB^gUMf:ek#,(hkt"SdSJqrqXTi5QBC6o+/lrbC[of$W8fOF]=hP
%=L&=CB=lO+Z;%hOLpe&!$s1h+=J"V@2p3u8JrnJ[/]B9/&EB0IMY(0fr4-NN/q>#GHU>'DEuU_4fq(d%!LF:_$CBa$DAfU?>D0$W
%QU_RmY[,;W>StgF>WdG:\r'F@bBJhoJ'f^\OH/@A3_[SefbF:<'LI#4[K'A@/g%5/No2B@(7jWCO`>c,k/&2NAhU_Zi)3%W!':Xo
%1]V"k_*'p,mc%.Q]V=S9-*LQM"GOW+]RWE.&RIo9I(2df!Ujh./ep@F;&j6\B.^W0>R97G$k@Z_Et5DYjZidLbDlY)Jm!n)X(48W
%R'!;[Q]\jQl*B<lN\;coh"ZK^VWcE-i"u@=Ce!jLBq\8-C7\JQMAkPU<1m*2NLidQ5XpNk^8&<EUkk2;QOLi0%F*6/"4BLTcj*Uh
%U)*euh^B@R;_]FZUdP-K2jtjF2Frj$i_^ijIC!aU/]]<udbrPFk4$D<)+7de0#nq9Xt^D*S@a`p0(G7t[n-Gi6.Y!]WTQB=pl(Oc
%/s%<9F@EdZ.KCKZ')GECUOpli+T-Z7$q:8,D\2n+%-j"?0^1!L>bGUmL<?>:Obof<@,'q//E#28Mm/p'CN0)=f`p[FaVM1a]+@r*
%FJF6<r"1Z.4peX@VlPIeQZSLgSQuHO:m57P\3LEQY0HL%eiR6Xj1*'+d0C75J5!L!D)Nr1$1b&3[A$i(MFsRI-l%+@[R(!/$Imo]
%fVCQ?_'nMdBa(o;i)(5m%(bT=<J6,%j3kRu@3fXq@SPF,gQE1GQe2s`;:$Qg-\*^JCg$6o?82h?Q\$#VRPOE?7$b`O'rMUM0ag6=
%4L-oo-)?3miNs.:N!bnM^oX5)fIMWc:REpg8GEh#!_^lYNaIWQ`UIh<)Jl^4-F`4f0.KMQ&mKOO1n[+b`[)Smi$Zl:i[f!7%D$Ye
%qAMr&9"'Y'J.c-O^P$k]n1,7fY_O:/M")ed;:=D)'2h`e;Xj6#-h^2TiD5Rg&.P6ISI$cM![N:l:?pqn0`d+en?[GN!Pg@R/d3ni
%7!=jZie,:4#SQjVM_AI$=@8EJXi"^/\Lcu#q^uC"70^$C@WPZ*\gmYC._dgOFQkR?bD\).1UKgc>qUSB61O_MJ.#A;Nf(VP<m!6U
%4VrqRCFY]m'hl%C`XE;//3B:i<!ZI(JdP*X_$Dg)XHil1m"@U7#%eq$ZUX,S:lR;-XS#DY">qt6$19FdR,M7M8q\S0&F<PY)oIX(
%!h;jq:5G%S0g]]0cRR?A&/$JgX?Za#0EfTo&]HNe[4LaTcte3Y8mAj3paPaVk8+f@!aQjQBTSTA6'jrR<(>JO^noK`Lr"ng=<n`=
%_]Mh`'O!2S,qp<LWmMf[.\do6F$U&LondGtf-U1m]h%cdBTO8#NY-&c.TS&gOe>.i+fJd*,krT_"l9Z'JMB\<a&h1KoNi+h&q6F*
%)oISJn=UQu9?$QVp*2">,('Z@O?T,oQ',3!=Y[0n@atV+@dP#oJ3doZ"WsP*j;d-Zak*lC+&_4@X3.pTHibqBX39(\X`1Sc[*&=_
%K-V6dQX=:qGtjU5e6',LU,7i^P^XoBpl3IJ,#G)9!"iOggqQLSlZ:DRO<2ds1#]tke1jd-+:gmN(CE#2g`'oOl6IYgE*6jG5[Vp9
%kk&4,>D%t`,IX8LP*QpJU,7BOJ5*JrV#SZ]EKkHH@8l0qRh2A4;5J0?,T(_?.3C!8pu51PidcA3.5R[Q">1Fa2dida(H?.3<Wb0"
%6U2U_hh%^0f`MZh.&3MfdM+Dq+g0Ri_ZoX4jW>4+Sed-?p`D$qER4^ZF7'Y/I,^Sb*95i6>Z-D?5&l<^4`SF$I-B`ZClsT)^\DiH
%Z3**/8?r5QrStC0J'_^[nV"EQ==,,IMi;+sp&Z+cecW#[qI7rYZn3?P)=1+ZBS3?Z^)_n1`Crc>#"_=17_,s!dOFr:/\if`dZ?4u
%%65<S."cW#!drE_QSc$6)@JH`PcGeeR;s"B;s%]1nZ,C[)eO%AHhJGAm^#RsF#aqDLt$Bh%2>?77(Zi&0[t.m7P+V0OO+V6YAdh6
%SA,hZQ#X/rS0T^"s0S/70HtLrEK'FGnOhnJ1*u@5`#51gKlP$RDV1HmJ-bY[Q[-@k,I'jA]N03g@Udm?b'AC-`!R:YpecB__2)VK
%=fb(Cb19N:c_GRY,Z`LUp.MKj9@b[tAY9:h^utEqbh$(#\/)9Z_6#4lH(3Pr2dZN9O9%b/jIj_B+=uRYd#>UIqI5jQ-#]dnKE^^>
%]Qq\#<7aGbUn98&``C:9%Q%)R;7[*pJBt/WrTO=i*Lts('2g`s2]Z2aIIZ['M'Eq=C=CNfKGo^O,FAtdBB1U$O-W[1j.D@Mn58^X
%34=J'bL62BRI^t`=UI@6f2bSc_+.BbN'&\ilZpHlXIO1j1$b&8qStr87]E:^"4h?rf1dcn]"h`9R;I=-7[p8`2M28q#,K$S+kqZL
%R3&i>it`UY"Ld2F(lMYLFE2+;_bu>uIl\5%;t-!6Sg`8dgn%CYG4XqBG.CZBie+0O`U@m6nCQF.h3UtrV"]>?Je*hNg-6q>g;klE
%h5E9kk$$.![VKNhDV/+;X[5CYh%';9<%_tZC--60$SD*dVqFd^iihb\XC8uj-'7bGbIL,50PL&%h<8'>n*sGF@I<'[4/*a].]F:n
%+<%E.1caH/ea?uQC3[@)&JNPMVY&sIacr?[T[BOZ1XMJ'4Y8.sSPu`K\dV?aalM!P)5tDAdip,soSm$DR>/IhRtMk$8GEeG1'u90
%Z\dLEqlEj0S!@qJ-WmR/b_QLrcB@<)F##1W5pn4m_ll4r4Ndg#[@\4Sg18?p]uGMt)gi%"(e)"*ZtO2D8)7@X1<N*YUiiUVIUP\]
%g/>&N73&>ZAA[&/VcV1WEeoGfNQilAeT!QEp:K;R,blOA4J).C=VTXAT1!5>$JRj*C1gY5V!2\g=fj^,I&%qnCc*e2NhTjl&oP%N
%5?TDW7*sHVKaq((k_MY3Fnna6;#EBmJOb06T%dACE\g83,*eY:<6eUAEf3n7(2VuU4+LGIr\CKrDGDsRThmMB\Qf?NZ,l#B\_JBq
%>NBg_>],\Ih;DP`\66@I-?A5oQ\-ie&:P#Q8!cM!qL0ZtXk'iuOR6R'ib%@8be[*grbL?5XJQ)jDUf94e`]*D1Bl$Do4cTp<pu%=
%<-'$:D[3sNV\V)sUT'aM\2f2O<O8'Rl>1+[eLYmV3^lE-9g*+FH:@#[SZk1F)s18SpPH>heFGYT_YDO68lUl*lea?ck:J,Io:qnR
%2TXWI9BIuLoB>i#k<UCVWW^u\8i9tCKRZAo4tU9Z2bJ#fTfndk/mS[<"0-_@TO%E+'fEm@(:".V9T?jSoG+-5V]/m!^8/rB-6-gr
%%13t`i-uW3o"QX9Nb0UfAj$5sZRs2#c%1@GN,]EZRbce9's?*ELW0p-eQj4Tb[o.Bj0f)n=m27KSUo"I_1+PdR@dcF=gJ)GgqqU?
%=@Z[+Cc!`kb!O"E!_A1QA#A;..m47LqJ=WB`St2udGP5r>5,<7G-gPQcBW%TL*rC7YP9(2bGS<dlI(kW(XDOm0n7c%lZF\jo5^^<
%05P!KaN:uOG-WXPc!6=eMT+S>cf128:ib&)FNWc2o8/H9'\*TY0`5:4?*N!HaCJnE^fdl#B!Mb&q](fgcg\2WHmhW@MlMVgdot.6
%XWD$+A=fhao4B"#b<Wu#m)`jBO)#U'WCFQu]6/s;'9^2ec!VHq0OlnW`bpCuqFr'JRT3N,`p6uh6Z9bcfM%nVRs"DLYhq3#qYc=:
%0/H<+TArkS2t2IiR3ZS!F^<*%1!]$]q_K3e?@9>Vdl%l3mQ\mX^!)Jra["(_31`-[5f'Dj/[DfqrHQ2D5F7I#W+Q("`Jni-B,SX&
%I]QNR@V1'J`lkTG;7m=+c*2X2f'0elZg;E8FI<nmLDffSY#!q_QRR8#^Xd,LK1^sWjh)D:k0i?J!Z3Q-*q!9D3o\m.P[&+aXdXPt
%R:(?1,pF'5BA+QT]T:33;k"jNonsp`3)(>n`")t=NAD3RD;R+N`N3iFQHra[jmtYk<'KG7lSB+DX0mE-[-^!9H)^C=]q4U>=FH(S
%`$k(-<uf,99\+j*RhdFjXFio?4S_XE?m9T=mAEB`1MUM5]qA9f20rajlr0-?NMf42R6_7^=e71_>"sp6G"B/AL'=SXCYd^R9Zn).
%SRKilhMrLWC`PC&RZM+%!2D+@?SjnaK)56"7g<OU5bT.(1PQUFjg7RYf:$-0iPRI:TO-<0Z?ujCC-'nh,&#OGR;DBXn&!ue4IC!1
%=e%mJM$0r$P>7i_+_G''(Q4J*ZW*RA,[%IVlSnZ5"1(+uCiL5Edl%kP;(=Nh/4p[ek/I#;q,rpjU#hf77EHfSZ[WbP7QA`:9fe2q
%Kp]h^Pf6diJ&C"lcD&NbXu##:b0<&,P0"on]T9WqB2PrG1G9@5]UqX7Zkg!N*B3XB9'%Cj7EIm?]P.8IgngFZ1GtTOnetP=RVOq@
%&'rF@_J?ChoCm3]q,rO2MT%D,\5CR*oQEuXH7$l#0<Pl2U]8J7nQS-?BBg!Y]5_2lI*JS5/F;)5m$b>dCDg6YY\OWY[]jOg@Fn+g
%J1SRFRh`)[\>Te9[]jNHD6()Neo"Hk[]jKSX7i0oC@[D3knNj#B8n2T=R]+qAER\0E1obQ=!N'c7N#=4:nr^_V.@SFEb:%.I#R:,
%9P=-r[aU,Rr\NI%FAVirX<5rE+/`'4bi>eHE]\)*,9ONOD\$cc265\]XZ?692cIc.>%,eN1He)mC-+#qDU<H=-J?AW6YV9P2?OJd
%;6pPeii+b5U?VqH$)Q+fB;&!Gl"?WA1*%shW>h:h;bd%hjP^%B]SG)J\<6YO*t+KC#'-7^^<BboFL/^1mpAV-VfP$\dhe"ibp!(&
%jSTgTnP:U/poj.sbksul1MY.8gZM2YBLNq4?2&]@m*n8,B@A[?77#a7>(I+$^8k,=,^D,KdF8L/)/'kpVj*plQt#9LJVI#lR8Pm*
%ZV<e&RsR"]P8glEh9/:?c/M%OcoYhLq.JPC?I,UpQ&ki;%pus]:3%C7,-JJbF)r13nO^L7rpO=rG;f2FVsrW\=d.sdrpO=rGHq1[
%f`,7Drsi8,`W#=cr[*Tg7?=q\X=5)+,K[ormu/$4B"VHUf^iD8q(DAgY8ub9#]a\CkIjVmN1/ZJRos9<TZ=Emm719^8)G\X=Kc"8
%G+l`U"WtOJJ\qBr;i=P[>)&f2:U3d(Sm'X*_3F]Jk7H3V,qIf!`bjV7HWmT/2omFZVJ&gMMp!#s$JD.?p1s6U%)-p_-C`O@g#C2%
%(M0m@RI$:$.2s)j0PkVlPSe:gn#BY])rGC-4m['n_s0_@%[nX:[28MBBfpD`6T$[$_d=;I9iB`FR<'_X9u6jENF$hYQOTfCTP-@I
%16#Y96GtL2)H/egij2$_QcD40.J@/.DK80W;1+bqi^9UY<ZpOAs0b]5bc]H8b"I5n+IC/KL`Ph;2$,T/'nPa0.a<TO(58)DiFPl2
%=VP0XKpP6eAPm\T'OE,4.P.p1_@*Qa;#Os&Ga[M!FA[:n:>oc1_8XYZk;+mtUa)K#b]O*RL-B;1k'WEe>"+`Ga_7-/BtbZIOlZTE
%Mhb$N"q@p<Y_anf/06](-,Qs[Ya^(0p`$uj@nO"PpE6DoXLBjQisZm6Kl`cD+D',pj5NX(1[H*bR;U9^K?Wa[k/K>4T"oHST"oH-
%F^7+XC%:hlBo2)(juGk#QU*M*^A*k[S+`iZ$r<EtHn'VX6@ucJ3.$B5MQCFbVG_.c/^_^-_^Ia2U>bQD=-&cY?IARo-g[Qc[)6WJ
%P<<bE^J?]c(NY,!=l#R8%*[GJgse"#?=[_./jiQ[jkaMS]aV6<*/Y\1bN#Qk(37.@WgSm@nTIiPhuBtJq%l9TG:M+DWFc>8bS'qN
%1&T9c7$^7%a.eSK':FBYW+4%K:,DWe%-IiE0s]01W+4%fVE8]W^SkWnl56k915e35U5grUFc?>qY1sIASKPQ/qon6jT[F;70;D^:
%A(ds@7"3(l:PGUe00[W:SJ/@*%*sMc$T__,*IdC0bt=9aTWe=$BZor\QtEP,%taU/dmpD!`mZ-3)'*j8h9)[BBW=CLm>buT9XLX"
%:JIZ@e.h*..8*g"\`m^UnXuRLJi`Q0%:ug6Mhgm4UML,UcEhaRcfjJYqQkH&"^'sTW0,'s;7#LaP2T&p\l"d'4dmE,Me=>Id@8Xl
%P,;=Y\^"];ITPLk\CWq1e\NoaB2NX<oTLg4p_5s,Q75OqP>^f@530+"P\-n'goLTbRE/MNpkmPVR4)Ml0(<u4-dUu?crUtpSFIh2
%=\-'U#JRd5_QnIA:/LN(bq6nI31[CS`,jXEU(WOPFn8Aq/989i/iS3\=_)T3Ci5B[/[DqOB6+plc:'WM)^O5*D!hKK%o`$:*j%,o
%l!+G8(?sTuSQhn2Mf`j!c7RJT)k5-@2_1HB7*[!IS#pf#,`8T<m3%<CRJC**9t^S\>W*dDG!:-!^9f"M_R"J0_t606OmrPGF7M2-
%F8oL%`Ubf#c]sm8k=SF1\=7!@Ia%sMVGiGV6V,J9VgSHE*`T:#EXWYiJkE0B@m*b)\'t:QcVgV%mA;1R)8D2[DY,>%4nGC;AJDef
%e=mm`h>FeghopJ11TSADU4Xmu[15??ZZrfmgO+KX?A>A-n?8N:7SW_CmjqU.Iue:Mh"Suc+*4XW0*Yc&B16>4q`@K0^<GK=F]8Z&
%KlO*Ce"S>0H(Id7I3)A)XCS/s0+uoe6q6=BV4AR?Pl6M`Dtnr[X:3Dn$L@1_`q$@`G%r@%cX9M"s4&%$9`'B\bA#?kY%J*fjS<*?
%P@((%@5ls/o'5[3KT*]!GO9Ghc/&#:B+Z$*FC]?mn)U%/kTJ%Np]T]T^KXPkb`j@^G+%;?66LW7,]L!2+t-Ut7DCQ*>/WhD*0DJK
%_fHh4h7+*s9fo"qXfu4G">,Me^G4*G)V%;`$u@aPn]DE%>`IIh:XNRo2@ZE&d?C:jT5>LP=Pg)-)W%,mlWuKd9TSn>.hA&]TKE&-
%nYR<nY1L5i6#C->\T!QbCsWsCEAiE5=a,m/BNR77Gt:co^d2RV-k"ols1WIo/'*W%)k>HOkP*Vhq,rd9MT&gm`!q*Kccu;enXKH,
%fu80Kc.aJ"-9f(TNaoLXIkX_EJDi7G0Ol_O\=-@k2=+TWR7o3Gc(\O=iB1f)bWDqDkhR+t,]/RD"FZeQDk*uT[[FX.dEt[:`5h?H
%7,0VAB^VLTZ'HO[TD=7QXPJQ-AGj.kdo=EAs-Gn[4&,+7j+g=`\?g<B,B%Y-7rjUaF660uDC+3B*T+r9!RLK`K'TP`b_qpYj_Kq?
%17jdJ.`8.jk=pls5+oW(#5de5fIke0;lkJmg'W%VZRi.=(Y))/QXSp+#_%uFr0V4^ASY332(OH'Bh!!'OQGl"P.Tsf[_36YBoAC*
%o8Qm]WeWqi`PITt+1Hl7k<-pH.EnI/hmh+T[6J=Yo2Uk;"eKcI8$bXQDBunDI10=#3qDF`l\c27BB=8U`:EXBZ2@<5>k:UMmWgmo
%Ea!3Yj"EbDR#.KbQVm>S7\OH'X`8S/]Vm^L4+I8"Z:4L-G42*\KAZRu'fgf+=,kMB>bU!>>ita3AoJ?jF8P>Si&Kt5Nnl8kom6"W
%q*3a.3/[!^i-2AF3TTn/j]nB%"@T'5q$j-Z^^hk2L#Fd-*E"ckV^V1E\pcgA0"^;S]1;Wan.+[BMe;Up8UmF3/pU/@PJ./+@Hn3>
%kZ\n]ImdV9f;p<+R'fo+$u4$,CJs;(L\O*nD,uF946d$8X6XuQ10Ypce1.Gsg<in[^6;$9eG%_1nS4[F#+e6=_lsc)=B=Z=CWKX'
%*VasXj3KrSgiI`7"^p4r<HEMt%j.'AohW)CLc=;#MW:K"jZo<%Up4CJKZR(IF,pf_G'>??KmMCQ:>j*9)JFd\$!J)W,h/#$7UnWR
%N+1;<p1iD\,c!O%,*B[Kr[44gV?P?7gsYL`=S`dkpT+3BX`33OU&31lDs<9l\2bk=\YcFn9MG#GVOJJj/R?nD*VfOj^i?P$7V][T
%`KT2(+hBZj6(cT_@ASb#YaaX!$&=o1S8PjBGs85c>4ofr1P(GpTW8#WW9Ajm)=TAGM>6.;ePm5%7,?BE_ZW0c%FoT+#DHNm//M80
%YLnT/iiAfc)E,tWgG/?XO2&8FG7/W(E-K(8h>J"T=ST&V85lBSq2N,S"2KOq^&.>4SC\nf;6FbMkX-oUeCY_r0l7T\fXbje(eI"5
%V3qTd2:]&>U6uR<^%JPi6e'LIKQ8K^];,jME[l5DeAH/_AAfLY+Z6^-BIXVS>)l?r'TLn>X/M?#0jXWp#lQj@2B><`\4h9qq`j.S
%qSo.W*)q[_DWufq3QuFA1EH`GS)D6[E!M)Mp6`__je'.M6:s3A)9eQIA@efkm,l]V``Z9]U&LZhl0*b[RXl^N8!RC*Cj,cM$`pj^
%qFCT_G4EmXh$sE_;/aPCd3UP]*#H`rX^Q\+/>Hr_pJ/c[,4D'Th/@I3^BO#M`l(1h1r^IJ2tg]s3pAllSlH?1:+k-b]6[Ge$7A#9
%PqWeE=(d-#ZW\$W:ODZQje+3HbYd#@8^q8n<,V[cL#S^\ASepOhJ"lKe8QcsP@e?.l)>'-oo6ib\*R]-gWkPh,Ft*+V].L*_#4.3
%&RFi.)"XF3"[1'^WW._0*)6Esa1mV[bu3ZKq=bbgml@W5SU.DYF3M.f5k94<#5'\b?\V^TVG9[<VDDYl/Sd+YheUcacflesGfuMJ
%Cbf905ASAQT+QD#ZA@JXcbL.p5A#Qo<>=OadW61H+fO$&cb')Ag;W+d*/)ODVjWA`a=sne.g<#3r\>F<;f]e=#Gpg.e8>DQT:#nc
%cYN2mD!SH9aN\?a!L+b:;Zq8rp-mVf5RP[pSK0p.R=h&J;Ya_+d>1u^>,1f+N26WUorQ6Q"T$!T=]jK/((]+28ouC0#PuXIXa"/c
%Jd-Vi"nc%XRpV*.c3/-N(U=qG_:7GRDlc\IR-lXY<)/6@nD!-=#'dar7Ts[n.hk`\a&Y:5BSW-Rm9;J[9XUK!)OKlVkpMD<D-TkK
%)uUC2$ZXh;0]V&mR%un=9VB>[,43_$'OmX)mk]Mb,O>WbTKDE>*nN]trQ!"7WUda89I_L!:>>8)4UeBY35(FY+0\4\m'Wmr>$_n7
%32dJ?gW?\DE.V.,$EdTBY#\B$-B#\YG$7bP^N1X`>U?=q4#sLrNH0e?V]3&fD!P;$Do^*+mI"*k[&^`pA9B`.5o2a&edC.+1tLGN
%]2m1!P*&G_d%$5njg<fG_O;<5Db!fKJucG_AlQ<uH<h@LlEpiN]"(kg$JR7MUK:6_e8Xm+1/6RE4h$kqa'n7hWGA%17LT=>OS5?Q
%%P/2LOT>b$':XTC$SrGD2c_NddGr5UVn*^%^BL1'e?V_P2uoip[_IO,j7)MTY#MNGK<q!\&LP(Tc/\b@Y]%3UY$=ImeV&(=EOn/E
%QS$c"7!pZS>fHh9bEk:!JaYa9,uYiXHefH._rNG?gd0_=KB>TU\-R-\;+m3'8SsN`QE7LYRtk*dP]*&Np3&S[$gNLUX&na8\<p%H
%ruc.<=$#9E_JN,7;`##]^Up8B7tHONWMr@J7;/M%P8D`o*VESf%$YdS$m`=^/SqoM[@rSFgj-P]/Kk@]kg14.Z.u$I/$npY:]j8l
%IK]:JciHS!qc)jg(5OU2#5nu\E<48sZP\jiF/_L*Hc=Esghum=XA9ZRX@KtT%!*FMBGcLp"3GdK?9/GZc[mdj%SRtQGPhs,*ZeP)
%D0MaI:e+Ya[?b#:j),?%/_l>#jH[CU1$1!)Vqe?)L"*hfFiLqb45^Hr9M6QcBQe/Oi(DA<aH%rep417d[F6Ai*:-Or;0@\73%CQ]
%MR['7;9n3FB-^:M!D7[.B?,A2\_!B+\'mU%oK'NL:q8nkhlI<\(3`='j9X)e;)d\KHMHG^fLuN9>[1>^gU8uiS32l!3eoRb@_7TS
%(]_&p,`[Ip84^9l&'9@aif@SnEg#D4N/YGj`t/O<Csbtf<]=$_.k?X]Rm(p3-hUAdN\kf"5fqGI'>:R#c1s@>/`FRMe][0C]eQfI
%W;bFXVcg"n+=hoQG9BRT%95^>7!MAQOJC[cGuUu!]o[Vc^DVi25DEpSgaH%gGfW_hdYDj:=4#4Z"dS&abDfgeCO],tF]*!UU[Ob&
%N_3#\WDI4ERe"nc5/cZM)^-Nf48l!(k&<<ueShNXQoLKg6FeIe<.B'\@2G`,2d8dh5SHVmA0=^bk'jK;*AFWl\eN"S:o?S]:G')R
%obmL4N_D8qOY7ar%@o]=OS!!8BH7WO@gm.uNZ"b'?,ed@"Vlh78rZmG7kq*s1Z?%gm6X>moH5c))jBH98>Q]aX_7+m/:nEsC3JW$
%l8["t"U!6mdctQbfSa1+PT:/=.H2u#rX!JT5EcTnC^b17IoB)u`^i_dmoIs+@doV<a9DkAaeAYsP;@0V5G;I$Jo)*P`LBf+S/jP`
%,]_5]RM9?)-T<_,n6muOep7cSL\dD/#ca3^Fs\MW;F$+>"cPi4N'rl2=jA[66jb)q4Q\k%`V]gTpNa]'P`"Ca;9b,b^t(E?a;3O7
%`:;4oQC\dgl&"-GG/$9'RER3>=#r=P#.Li0,^-FI1\-G]*mUu];C-/$USO4RkY$#`Y=/&0&n$c8eV7&)h$Kj"io&?!9flFaeerH+
%C-k!kIS^j3+lW&Y6[VK+jRn-s5^uF(.?Rh1RU5VXWBA^%:oU$VB04B0-mp<`ZIH,_)(0UMaQ5K)R\B70rPCR/F]4pE)9*_&k)b<g
%7skEOl#c7e.N=:"Lt@"K\Cd=\PA7"*g:"!ja?8e5lr^Wp'1ZVHC6Ot$`44?4o6+X+`C>5];3c.G]WR+.9Rg:B+I?T:H$<fBe7ggP
%<%Ej[oC_T8A'8c>b(M-Xh3LkSO"G.n%L<C<#SI>^>Kr`;aSBZY,MFA1%Jr):_3/1u*;c-_]%(?2Z,%X`q"@:sosYm%!GY*#mg2Ig
%)Koj39f`!q`Yk7%IZS:1R+,"tH8)d9coJ.L)aS86APB;J+Na;"^6'+_7Q%/59j%*AmQQT)".R;MaVfMiCeWl42%Pfn`)a^9)K1,K
%F)[A1;>Yi7F`qFSMLpQsR0P+RaH)ZQhFN$G5ZL93UW3MXUJ5S"D$$Q)8ul:o0ud1t7[7RuX=Q`60''WalnOr$=Km+ub.nMDE#\n\
%MoJa\CgoDHX@^EDSbU+#UBHsQ1".^'`gF1Wn_IA-;5(X7%Q/@\(9B[1j$$[(*7ZhrgeVZaBh,9sD(qcb6!Q.D?!I0pkJVYNMKouE
%46%)1+TosHA3Z8mh2MUs<(8g4?&^_IGp@!0Fo!f6coSug6Xq!t@=!%Pm,kAA$.b.pC:2B__9t]#]2%fGek(;BC3>'^A7oCc(t-Nu
%eM,Vp\*0B11V=")al/U!XY;9$;`*NG#TJB]BhfMIY#_KK+:&s)kFc8H14WmY*60XI'm=TgU'^T@r"qJ$?Sd%rmJje`:N&iO>O['c
%g?nlV7F`C*oO=KXLka\J%bZ.GhN7,-9kXkDDu?]H2&)i"bRlG%<b7f?Tba2=b>0^i]eR>5[-7"maR?VR)(Y!*m(.+o$/l5%Gb#92
%KpnS,R[%lU`>\9:5*iA1Qr2V2fo-GKN+k1)eYk=cODCh:\6[2CP_tdl>1T..=%=QW%1)pn!--XH5U/tE;EM\3)Mnp]9&mtE(bKG>
%FYCZ+R&1^:ZC#a$ekGWQWIuLKD,7P]C.M:@pH"ui<G;8XGe3@#SoV\$Vsn:r#s>0b*S(b<p3@La,SMA^1U&X`FuuX3E176(<IQ'b
%T.c?6'tndq5iB%Q005m`cmq6q.iV`?1=e%pCtCjl0tC\s;m5pD[Y`_KT.+(TFTC#QY:rXTOLt\1Hn#WI83#TX)*k8?[+JNL>3sps
%q\V';?IXo`QgL^PUA)@C4r$/hR)90UDub&0"qN1?]DPVhEoA.@fAc^9=I:6C(q/`fNct?CP6BDP[:JTA/=f9Bon;-VKFinUXpX3"
%=qddM092?A[mj%WS9Wir8PP9C&t4sCo2=t\FGqdZ"&O)kDKpQ^CRd87>.h6uM3MH^BM!"ZJ`*?Q*FiWDWbm)j"-6BQp)(n13o<c0
%Qih>$8^:-W/#He5_H$m""mbY@C1$?T@JXq;'iX\$f)0bQW?s#SpgFEW/'(P[*7?'#dJ/!S2W9k1;?_Xa)5:NWEP'deL7cPp-t?r+
%.-l;U7^Q=[SOMGA=<C_Mi@8LNFeW"LgKc$0lVet:cZVCG`>PQ`>i^Y(_sfX4\FmsY-o7GR]9[-s<5IMDc>.F0F$3M`S<.oSimb$Y
%B6,nHKU3XpX8s1p1:a4nX-CF^HBiYq(3FbQ+(;eQ;bT64o7QRdp1_GFV-+RW^k67'0t]A\:(N`;%'hkjFQ*T%T5]a-]IP9<p%d&%
%X[QYr/3Ul#V$2$14WsXdhJk=^Mkr15Q9H1t<Xa0$L!Ve>$9<]+2Ga8(JFVY<jMQ4#Os0UO+K!\Xe1r2SO;%c:EHK8niK7sp@C>7-
%9JL]0YfJ3Nfpc1??21#O9<]<pLr+1o6K\%i>HT3rAph?%S%0"jNY=6j(jRd@`0f]nW//!WK/_J)fO:BH4F`qtU311-%dTH"pd`iW
%[35=lJ]NNrOs`*=TGRBnc!$>(b=P#"C(;SN#A=2;\Sd'&<Pi"#Na)^tHGKCU^^i39)USR2'^ZAo$U2A$/O""c-%iIjq0X;TOI,+(
%o)taj-eE-?iI_m:UYW6^Jh$.kCJpIh>/KWtM<R"PLC>[C&KaJ5A#mp)1fF$ZEqA=r<V>!%JRd=M?WccXl(goOJ6A+8N"aLNJbfo>
%Zc<=nJ7QWk!\2\fdd%ngGBOtTLW$Yo&&Ptl4PddP@:f&knUlhZmHSckrr-)0X1d?!>eat/H="=n](DXt$hBk#f'?rpld#@Xlg6'H
%`maV:^E2`Y[<iY#>gi>9H`CN0;3[+@`P5MTmVZlhb!4\8>]"Vl3\Rj10[81gm]Ep2ot4M=GkPlrCXWQMMRCK#.XjS]i*p)sh<I(h
%d.YZWf'W4d?2r*gK(4;,eS@Rb*H1,>Hb&^c]$i2,`nciqQhl=JR)V?lSt?H4mB5iJgM^DHprb`Ok22,h<Go;FEGP0Gr,HMcPAdPt
%X7pr%V=!P.9LJ_-Ig.k"T78u.$h^Xug\(0TA[cnu^K4>Rq0_)'W4QEG2P3/m@06PYS`6Q*:D(7Os4-#+mbB:n3FD3#7r*=;%#MGZ
%[0P0j?^=_BV2G(`WH`-IDJXXno_U.mQ`H`[[YbT%Q]#;@iKH4Hmp'a0._uk6X0%W3G;%Y!Wq%RBgU4Ycf5%"M<t"\J:EQ[G=8qK1
%]1;V1+p#kk)p^0[R)[j)o5Vrh<ZX(u*q*r.Z5\9VY1`NDcFNAN.m*%=e[cY0=n/,.h>la*#GHR?/(O;rnPK:EXR85X>$DFDFo.iJ
%BR%"5Dl^CSH0;!1lC.LL;Ldk^Fm"TeN'=@[^8ZQ`f?Wf3UiE"`mf?!UXG;"==[#q8euL.'l:KrLfimD;qPLj)W#tKpq2^-PqrM$4
%n(Tg]Kf;3C.+ABs;9j(J)"bkkPO^&M[s:kt_:f],9:smNg,j-V,l"LIo&NAV<V)hh4QZa:4PnklIX1aG<\q`4`nN/6@N&o[GTNXL
%0gS*2H@1ON6A&\.Xb)$plitB&e?Ie6?Rjp;s(0/6J+V`9.0q!M/QcYh?b$F9hS/^WMhM95r2B=3lg)Ua$^df!]K8;g%"3%ohj7*g
%PrAm,Xg_[2^RUf0CL=/5)s<3-(ZjZP6PXk@jKi\F<hj1lkNH^AKt"hon3u#;Y.e<!&\M^*J0N?Wj^5,PI1q!>,X&E&?u+f4HeUW2
%hX(abf>h-Q'4N]Q[Vq"rN^/6jMte^Ndei=C$gmQJ;dV!R[AB',Cjt4lq]I*o='#`kql,(Yd`dsm="FOhT;S$H*q9Q9O]h@)GM>3-
%Y*.RVY-^)NQ^?!)j?7)Gpq=+`pX:J,,g?q%GNaeCV>ICVih^dB<Ee)#QP4WJ4a7d*YrO:6;,F_e],LEp\3%mQMp##=hPe(No^)>+
%8cLgk4KH4g%=WZ9['k;C%U0_C.XY*HBtWK>l3\At-a$h/I<ROW?YV'ugO<e-KCY6`7GB`o#0!Ke:gQ>aDj5\A]sdKBq_LEP2B`On
%WgoDK^1eCb[J`$pHh-I.2led9s6+Oi@Gskgg*kI?D^+ZFo'K^"j2FVQ5c_71^!t4!fBa%)iVDR;kk=Oq_-5O*jJI"O5C`1H!dpb9
%AeIaThEDSg*G0QdnQ7G_>s*RopAVCJAmCpPYO>IPl#ug7_rD8Mk=^5?PH8!J(N>h=61eF8/6jd7C?<]WF\+@]mggKE10_Q'8>]Tk
%c?c=`a'VUTcdR(S"a[.`?N>]:d6Ifso?,'Jk8`i4jc3J?Hh@p+dHB[]Ib46VDf%Zgk+To[2dd/>mhaLJ]i4BuGAJOKWA3*`J2F^g
%Q1b#ja^dhgoPX9bI^*VA07l:.oBqAcji(,m"M^r?jb6n2fXp>8*kUq0m1Y!R>;Amc-r:GE7W'.6ShHB^MPB8MGdm#\YYMjCR"5^b
%7Ve9_h:"`9pVgc>GiKR3-:SPNaTKpI%DRB$$2qBSo;en;d:#!XFu0OK6.7M[Bh1X-\T#JpHo.RUVSV^!>`+[3T65@AEsK]pe9lKj
%Far9(hh5%6T>IcBT$0otJ*GFJ@-$H#M$]-;miT1VUO;VFk2J5^eJc09f3O?LPt7e"DJ]c1!NNg2LF7[R.?:WUae)7?8:5CA5pSos
%P@[mQ#51e#amZ,+7+n6@)'L&2AE3Wj?(%i`?3^3o2e\Xgr*n_"1B^2nWj2(j^64";<-'*-9^=&G3q3O:1",8Vg<'^#n0BkANlPa[
%qh43.Z=N3rAaI;X=aOPr0U:UcM;:u=A5T26^@8PH#1mG\7%kd,^Lb>TOqt6MdY[5K7Id:/Od:\7ba:j\NO(9Bqr/WYKS2$_+8hCa
%#p4K6DdG9D>7\S\a90^FfmgM<'>3MIDY`n\]Ck`sLO!uW8pIf4L^7DU0#TRFe^hj5f,)E[VphbGjm)/[k1c[K_sAG':3Yc$AEAKm
%*R**_)%WG+?`YhDAMN/[cLP>!dnAe4b+5Xn&!l#1Aaf-%s5M#LJkT)$2"V9Irr1KrVtLu4\+QkXR\",F;N(479)WjQm;k;Q^\d6g
%ncq]bhm?"@e`0.'CK4T&;G4E:G2\2e9@&c_MZTj?4ZD=/O3[`Fp8.+NN[u<&`<=hqQ_SU;[LEZ7epqXRdA+Cm^H=mm""8uec1h5`
%H-)/Y:]U/!PEu]GM[0Pt6!Zk;=CRiDO?["s)2qM?\"E25G^]%<LJ;]Z(F[-p=Hs;;it;mF[me=0lnAB-_0Q);/>!Y`D1-Y2G]iIb
%QU59Fq6k#K@?m@_ORtcB?KD'U06WFr%MK@`*a\uPq94:dh`^],?bZTG#;p'JRU@m#k?oih@Ta4O4kMC:Xc!^S)o+:%H8(.i\F4?C
%h$ZNp?>X0IUB9mb]A'IBB<JkP@D#9p]/q3lfmLSpc*hgqhcbU!(LP_8iR<3llh)irVmFDS6f?R]0qgS"]t_-W]_q*H3ad>].R`3)
%*XL&d'e!>SX[&V$E,NUOZAs4JVo"_mpf;D[Q?d&Tg8HO3<6nL2ZrJMmQN#%IUY+[(+!9>gQ^U'::[Ob.E0u$ThL5%4Yq*H4$a1&K
%%^b>ANL(X8hRe-kX-Z=p0I7Mo:;5q^c-^sY^?V70.(cU/IClg-[elp;lIe,nYFZZ0M']L@eS\a.2V.UtT$e#db0u?rQiIneF18Y(
%%DL^L4=_8^JtfE^mbCF:_hV$Z]CB>^^2[t:c.>(DXd)qrg:*\=.mI9F28F=)5Q\;rD1]A\/=0/!Dd=QhqUXf^VrlRPX-NSJQRbQ`
%n:p?I&pMGu&!T,HXng;t%mP,,)jHgrV'i?YXN@HhZDk*@H2#E,;U&g:-L46oEkE;`R%P?b[MYPOCRpn_jbL5S&6+n.(Aij1:^rN+
%I<>pf\PQdAh(HF?;j2@S\b-T;_",*iY4pqH>%MLFpr1FV?Z!<R63NWm6TY6HnVb`]0^#eYh0P5s"TqeB4*bYFLS+$jS5mlF*Ymu9
%6PTegC/QSae$(i>^32]+:-[S3!9deFgA5"JZkU-Vb?4VV#$Z<?!AiLOoKa:iZUaJ"l,\VGpBO=\\I7<.^];M@fkVV)rAeY.DsF1'
%oP+?l'I&hPZp!TqV94\dQY.k[YJ:jD3%R8OoBUV/2P7^tn*`)J*t%/"[s@Gm_h/?cn9CdgH?4$%UKtB-X)0kI@1MGi,CemomR)pu
%%]KcelHQ)4kW?iZmiI`in(`EUT**7DFm&1ms*SO+M*dfP$;bteEUO5[_nEa'IeW&HaK,TUe\b-rje6fLq`A&denO*lesj;-DERSE
%/G$h4X1MTUUp+5JkLWW+*o'Y:5&>0.0k-JBFks_akND0=#I!hDem%girjueRLCokfB<K$,)]tgcIuS7:k+VaZZE`<=A0_#ZHpr1e
%op6I6[F/g^?3N-!Wnrk@rj^eJ5(%nJ^;S$'5aLh[^piZ9ZLI"UoldtBZM<QrT7HFEO7o[d&5n!@KU(Ej.YWk0-m]BD5/FFQUA^9!
%l];??I:69>b?plYqXn,M$'=sLI_'UD5<nua'l1;IRNUM-^=Rb<'+GU#=rW^>rM\.bpWak[hYqic`R[MP-&:S%\':bOp6s`'$bbZT
%+0.'nF8,:$deg7q^Q55ZQhH&AL]ouUo:jG,LWHj0aM^pirV9NH5+qRj7hV(7O"GdIPdje$l.E>u6]*6erUX)2FOJBJE.";6.2T[Y
%(ZjZ-`Sn/8O4>8sI<=Q[DrNqXZM!@)-R`p0>mVOUbBIiBXe17_>>D5I8u9`Te!.6$LU:A19*^edBk?gAHBc\AqHd[nM7rirrQWsg
%)t2e:d_T[a3`tBk"Z#Z1rmmS1j.8+&'C0qicQ?3>[anf7\WS.\piUE//iS]9lR(3;YF^JQ&VUGa_pf;]W'@j%5CF=6%LngNch;_b
%ZVR-P^Nrp5D(a_ZpDP=Jh:Fu's+r`a1p:eL41ff7!Ruk8"@g_I#;P$(,QI\O%JcZ;hN1]VVt9HMp:^%!(L-8gT=Y#IeBSSe>8R5$
%`A2<@]e(&HTB_7OM>RQ&"rkap/G(FLIJ]k<B]djA^]!5"#]YW8Z-$qFc216umRDJ9Vg<q$k[/!ThYQ3n-VPe3.nPa<D\M@GQ^/Yu
%]l=+ide4Jq?S1K'NBb,1g3h>[,:fUHNo449Oi0eeZhiO)o%GL;k1Y_pBJS'\dnhP]oi#!T*pTP=QZnpqMV3Z^fCI*Pq";G/O7p`#
%%dsn?a?*`I0b&+%KemJ&,m^N8MtOau*IR2CrEG[h2C8<LD+5s>>dmeGT[(SP:XPc"?\)m=<_AX$D:@Bgf(pj7Y=9Am=\P9mhegnX
%qb`"d/!$=;IkEG]gsF).h;5_9R0MO[[;]cqIb7$:EO``+^=eN\Q"q+]c^'h_^#&V@Qfh#)-Fr]Rd[@E:5`Y=/O;>IeeUnG-2"':6
%O5_0L]3To/s(bU;:fk=Im?GAZC$q<;\#k^Ql.g$?9?uM&rWqTNZbp'@V`2m?p[:Ims2@SsU`iUO*n]pZSe`<D)&$\"S<R(J+05GQ
%5HTo\pLFg,n\ne$\ssj#2,"\0I^6@a0/(KLHN.YKUD4>_q.oM3ao+mCB&uVI]pfj21n@1fj/#i#mkBB>q5AILI?V^_U/h#rrl>.n
%C"9]Z[hg@:g$Ws%,CQ],oR-%#;179aCkV-K)aO)TZ97fDY71gla[/4oKPAogo:3/<L#aDur4[Xq4G+b1;DugI@CtD.7h>Pg;NH'`
%R3W$<*+)_?#_MTAEd?sPK`.in>b*Fc(1kM($-X%U5_`#j#Z<ST]VF"/=IY5(c."QqUSUTOp8R5Vj_nY-B_;ZLpnq_+0WqEUlcnaV
%D]JXgnQGDQ6hN@7@(3U'?g43\(G@[ba8=0\h(VSS#PUkq)]rES6u'J?;7+lW'eoLQYJ:U>\%KViH'0r)_:u*;o%VpuMs!,ls.)Jl
%Qus.!!"Rl?a/?TtQL0_#'Hd2gVKI6,[J*bIHLg`;$.>W)?d"r#$5^k;<lJZCQmZe#3]uRb\A.TZbJ*Am@0FC,A'mK?7[k6p\*e]K
%9.H\%eS=2j>mh\p'^BK!nb1`3Dk!shh*P$>@ng9Y3pW%qJ*^J#$'#7T4KUJBNt#8$H,16lc;(elkE"1h@.dk[H-N[R:2K)k6[mH%
%j;"M4)l[i75[=2c#<[BX%ntcZ??2B*g51%Og-/9ak?`"Rf`g@S-`JjKEr,A6poKe0nW_:b/ZFh(r$jh]4SBlJ*`Y+"hn:F_cKYn"
%GJAm^OOhEkdO=OA"lc4_$"Bu&`S5n4%/4$\hB=8R'MbiLK<GPFC]l-5(JJfjQ+l$(Qe\N?qXjLP2;"M.G=1)6[U/EPpqi$8DY^Ju
%K9qq:)c<SD/XqI-jlMregj-:o$%%.>q\@$NHfYJTeT]o;f%rD'"li!XP=2);C%]>)p,`eeY:kL*O!0-^K'[8O9huUeo'eC!c.VsD
%A,g'+h&T)BidiNV#9VG422;+1Ge$g[o69K=PJ/_9d9ccoVnDYri8E</]O-XD(8NGD<bs!qR%p+HZf@4:R*!k-mkL2S<i&Et.&OY$
%WVf)N['!BWopPJNnG18-f6ho1T_s*"UP;D2QiI!7\WS'`#!`'nZ*XJscrtqrq@';/b<0qNJ`Cq6\UjuoN;o2PL;2e1^U8ORA#<0t
%VL,mPg08P_qc6``Q]=/(b*-HleEd"6]C,"5LV)un$"hV9gG>qqk<F74Q^'14q0u3>N'E<"iF@(PqfJjCPOn%liSq3gq]oMJ0ta8n
%r!X"g:-TLd*_JI4]p,$1AOlahT`Ga@fDgXXH&*UKa73tehac[05r8LfpWkshWRe_^GImU-o^*.JK8Mb8WuQSRnVBsh*X1H<]jABV
%CXkeUn'OVHL\Pni_4EZ@+91XrnKXq.q)i+KY?jF#nUP.t*dM6$@FDVupO/n/4oA2iACR7"(H^*d#hX?AX8FK\n[IoJ<6`P4=&nEW
%K^PH1q8X,U`oiZU2MoP+gTW?hH+i5?dol!8B[+&cS3li!_k*hS4iE?)OF!/G\;"p:*IOSfhm;50(Of^MI4tENmsk>a6OLMmp_%]H
%?>dg!0Ak>ce(&U7`SPl7dnS)`YO,A5>E?NA4nH/6j4Di/(SN^*&d<ba#2#1@oG9EFhhWWBJ,\ta'OR2OJ,-XpKn<BW,sI8c:N;ft
%+jcmj^(-fRd(Dnt57bX$8VK[$5q?2IIhjlAorp%4?3[68kD<+nXKNG8Fu*qV#1Zn\ZbA&`;n99ar"ddteNOD;IY[^b*k6cn\@YL#
%2IF$s2Vb[3`%?=#))pqd\>_\M8+p8'MT#+<`J7^q)XfLup],tK]`=]%2XihmZ%Rq,V/LSECO[Nk(FE2_r\<qI[D1>S7je]cb@=Gq
%5+AC-C6a*+jn1U7r$7'J`5hLahEfKu)P%JLdmhX-/M6/BSd9KHl[p:^m'AnhM#SLM+K7$m2:B#7U_3HW<bGiQ(1q/eB)Zp/UI+V'
%7--m:e"_C'HPBpd:o3Zs;,,#'$BLT3c-#@4iT/Q4WldDXD52s91c'%g/jZnXM[9N<<(/_XUulO7<XGQ=3^OrSZOM_`=]Yc91k8bI
%hDH%-[F7g%JIE"I3#Uf</QXZI(#G9EmC[4:H;5O,c5VYC8^d`/Yn^P<bL*WrGLNg;&eUFlLO$+>9Wb/SnK,qik;Cd:TU*&D)pr`t
%L9=_hUq3"Wdr_gtR]B((m&R14"o+9rW.?)r)@<3$W^@o`!0.Z42Yk!HU&`j\+TkTD%1S<0@VRe'=ZV<5!&AZ8AlNGuWNs6-hGG8N
%5onFkH%@QIBlOW]MTnD`8sEJ(%3W`k'Mqj?PBUTe>/4\!TP7]fYW0_0STn>.N1d%cB[kD;FPbWV/CkWPZ:=s2)7_Z,LBQFE:eNa;
%<-K@;G#^7'8fG"XZ?[t<[Of6[h).n:<GcKK)h#'o823,RWi`c4)-'NoZS[<sJ>LXNK<Z-Aa<H`23Z@1p-Djf7J>^O*aY@KB"iOCu
%ppsUgS!"Qtij..m&7j3D)&9qm>pkGFX!X$LeUedMa>DF**J\E^"7!lk9[mHT7n\J"YtWN.MWi6VDI1pcH'@2lR+?<>GsS-(#?IJC
%bOG[=?n0ed-3A"<AYNW[e-Zb,$J;)`G,c]>cZ"/:_q&YDA]HYG86$ALAQTGejjVqP_j6H=)Lt*L?$US/.]G<3&mnos"oqYF0G0JL
%fSGc%b<c@T(ek`3`MF*=$Ah&"UB%T:LCM:X=b)B'4h0DXkUqL.%8".OHA%K\W[TG<Jo$pu9;7i1[\4YG;CBE)+B<Uu7:uf*TT7=[
%i)TpsBK-tFDI-5bO6mKDD,k)9k17ZZ>u4F"%3VNX\mjL*q#dR2l#'6OOu?EV;q"\9_EfHEZ.Y*U-H6pXZgli_QW9aWr8DGRq)$n.
%ltq[R+k];VVPB$1F2<uT)mMXoFu`8>$?dMIr()tEAPb)=NagXW@:cBK':7]M!+]7kY#gRAKhQ\.W;opULO0=pePp:^BdRbs'7LG4
%Z"YQs_Sl]P]*W;?_/r%ajK@ETd=KI#]6R=2N.+1M]EM%hKe\)deOn48K89OJ'`k_1A0E^_R<KBE*t=K;R"DWC&7cWhN0%J!Zj7X]
%bQ1<;/!5W1=0)\t_*C4-gpUUa!G9m0XY^OhW2jCl=C8;=0O/>o43p8$)%eq@$`p0Y[dt7?E/H7c'XKKE$@1CnLGH]A8T[ZB?UVnB
%9#Th]@q.3YU&q&M&SVSNB)n(A9irN'7E/6N/HO\hN-9nMnEr%"P=ab&8mrC:AqG3=jp?#_.+UFN3'b2$#i/4ugb>DF`>"Q;\'&$g
%C]jaVc(p"Ol4:@^Jj<9jbuJ=5`4@?Q1!s0mM2?C']ji"CbV<M:qJ;W-L,10lZ%0.i%b5C3AJ^aC_09^u1$V=t/6-2[OQpPYN1HgX
%8#B\S/^@*)Xh;X'_,S5I+iq*'mF"[I3gM(+&PW>SVs6h8BpSip`KG'R5V*so`=kL-iYntQ$'&YtH&]cq'%.%r9a,qI:uVS"2I2/@
%(5<=-/b-3bH7H':Mn!=r6fF$D)Hu'b<P)$.!3"Ob^D`N-&#h!8!g$olnJi,.+:,oK].(d4Ba+Ph=6PF7J:J3P0Y"^Ipmm`SdSqil
%QGmet+Uh=mSHhkIK^=AM(.Ti0'I-g<l-Ee8ji$r0n-FX0b"WHL9N;P"Nt3@<\uAg1I)(Mq)<pPr$dBu(%gkAH"?#B&(_Ee$((\M\
%LnL+RJ3k]F+[Kg+'0)iY>Y.q$%NQBp2l13qc%F]#B$3ZG_4W7g@YGO_OK'/'X\"(QUR".g")uY6E&"c9>n01e3\1Sp+@G8X*(hga
%U?aGXBcTXOL%N63hU"a06QdsU/kL;!#UuOq/e4./FUH8RRP]fhHP/)sK1q@BIT3&#/&0#R`,JO]6+/,P$ja+um,W-i<@'L'/ZRBW
%#662!Oq:*EWu*Tp.8]B0,q.s,DEjA18oodsO"h\q@BNg@+X@0VJ\73IdTobdGeGC5E"FT5jCF^RpPVZQQ+^Q4asGMGH&+#dBR>a<
%=9>2$#W!!F3OrVBRZ8NHE<_Ap.Dee^q#P4YL7[[J`]79daai+<\Nq2+5/ld897UcE.8"\j<o[pD]hEud]hG*)e>JsE4Q8pF+c<Nr
%8K0p39he2*VOXq:6jS#m.@_bjS3.S4dSc-T_2uQ5#I6qWLiGf1*)Jjij0h55)6K[=1m&*&Jlrh=FOT/*#9/%o$3^&8PCMFj5[feS
%cK$6>&IWuY6aJf`;dBYcJP3'pW&QgRQ3O;/-NIk>9jjpIGnCK.q[<Tf2HpP7"':!f0egm@OKGj:`aNiqdH0kt,%SGC_M55`1g2W<
%7K=Q(&]qImEr#qF%@6+5^&j0`XQ*,E_phZj,3MSj)n%.rTLa$:*F<bO[5TYN(d]fR935\F0lV+`-7B@)>D1WiWWIR!eM_4g'eP#6
%=GH=jZ'H^,,AUF+B1_i")Ik?<<$L#7_L*9*LY7c7_e9K+L8%YgTa9Xo"-A?s5p/]q%A"B9Nbo+Y%8Gpf5R0q"!3n@eA(5WPL*[BE
%jAK&J`u(c-0&r]-hO_imV/T!-dH9OPpl"HG*"nt3Rl4]Un17[SZ)(,C#8(U"-ZQ8UTY"ndVgin=Y?3K02b<O3/50!!RA`0@kX&*D
%Dhk05=M3'&U.Ea8CoO[#RUCllOthqB/dS2'&P9<%Q,+._&b#o1UL<^=%gQ!g@?NH#-l,r&c:O%(>XD-*!"]@i'"K"1a%-D.o22`"
%G::(X"_A10Kb[p1F>6-QVE-%[Jcqor'7tm%!;//hK0Y%]5UK**OnD^+;%(?]VIpH+M2kS=$0!X?:_>hoPVb`G%+Ki2Oa'd7TUT=Z
%Y0pm&=Df\."9D\CPK+/DMJ-&3nO6`>U3k-Nlel_p^c!BA>gO/j]=R986Oh4kXur5tbC8\i?-E:?IKXsL<Z[Z#(Gm7j"n$tEl3])h
%(nYWY@=]P-q?Pac>20@?H(9IACF0JqQBE`Tah2(oH!cS>/-7Gm%,I-O"j&W=8!5:c$YlSsHjX*r=>o*/bsi?Mb(RrY,nlSsF"2&5
%CW:dD4PHGNb6HTfhkP2K@lkILE<'!-F*QiE.>CIIoBIDI];h8-`-i0SVfJj=R]*.PU9Z"7Mg;AgC*+j,";tr&Y*P9,Z[#8.R28,!
%&p[h]T!TUUd90gO"su`!oo84T%2`>,0!C9e;BQ>L0S&XD0A]'Y6s\M_EEqI(j+`SXUebe`=;E(Xd]<H!pkFVj%i.gf,m=kdigC(M
%[`H[V_kVIGAX3bC8sNd1/G/E\:h!04W!e0k-5s2K>dfP8bpuh]cRVV)64AYY=]CJdc-dl*imMRL>f`EGm?Ag`G^:pLDBqf?p3;bN
%8/d@3Man^#jiX6%LKF\<Y:CF()@S*=V0Gg4+?^IhVa2N*Q_8AjjP$>Ue-Dh(QBEm$.=<L@UhDA7fi#@hN,q"03fYh%"\SV&A/K?q
%SV"f5[KMldNYI`>*RYoOmuWWnndYtAO`s@'n`3!q6(E-a('^Mq83+[B!j+G1?pKCD]&lNs+G^.OKaC'*oUSfJ&;b!c=;iIUD&Jf'
%gM&'VQ-H#Gq)73PWb'Ts&JW*)BebH$eWK/J1(07m>??>'UL0$,W0D4uTj0PXUkgjrM_OWu[7"/Wa5.*P@O\/s*C8V>jT$AgMQ6=1
%gU[HDR*H4c)-##%4M3anJD,0]Oo`g#l_gm7GuI2@_-dJ2^6gAQBk$[pd@LEYMO?_@L8n:eTpCEoRa=C08c[k?_spn3LiU-"U8q=b
%KF6s/O=h_,&tp"-.&IDI'Jg20nghs.Ug-5U;?mMDTf3U$>e)+$,`7FK=]/7O>m@Yn78dlR31@"l'-P@RqR4Z\l<9Ki9-@l5Nib"P
%;P7,H-)dW,.4B2$k0RD%on\Q:g3mai:dqm=[[9US,"m^8!D+q%/[e'1^a)`Z02k\"S"N<T8:\5RA*._&ji"`b?O[rmC6Qd?-n22O
%`R7^d91eFqLcQQ[8F%QeD,nft]0e'F3a-9]5.0_.b+uI!lQsK@L70=/@G<4dkqXYab8;_PHj\"b6d1\6:Q.q=cl?(ZOsSP-#XF[R
%#s_`a:%&r#q2f%Wm27'D*/<I$FjroSG'4.s<21NKKXtp@(BMS]K.k]=!lZ?:6$YAqgCH/YNF=%Yi=VuH%B';\=TTOn2TS",1mp6a
%ec73Eo72H!)hk+g$$8*8Kc&.a35]\C<S.,AkgE1"Jg*b9?(SIOC=)>F>TA91f+aV4-SocoPf:=."R5::S\s_t.>YtO.OcLY\1oHQ
%kV>XS:OqO..trf&_@2H\^_i^SjARg>=JJ]SY(QfqeAjlc9s]r,-95ZhF,"Q@6?uliTX<.U3:17VS23`CBk%$tA'S!_%%1sgkm/PL
%MH$$?5q!-&/9F9_4>q"2O=<+_+IDg/&Y\Ts<C;H"J:[%r;IsQ_$mCff)mrdZ;ar?>mDPsB"s>X8"'2JKX;Qo6>B(uif3P7;C[mfl
%"@46RX'B`nPsDq+MnS+H.RE*X(*-!nOD8g0U0'ef-&5B0-pNqG&'#3W9(PZQ;C)IbWDn]_E@Ot_2`[/')lg9g7Aj%+"5h1b)r31J
%2ci1l8mP0<#=hKG`/n(;-C0$1J6^pmVG8+'ea_^WUN1!@LJi6sFP%/Z=*,i*6)(HL*(iYulgd`<8j'\9qT@#%5Ee\^/:OZlB2[2D
%3k*5BlMM>ESOl6]O8Y7eW<f:Ts&sdqQ13_gM4Z4cOCO)FT]/Kl&dtt,Hr+sP5on5";Vg_"EoTYfM,C/&"qa@'&P=G0f#3\MK'7WY
%i?9D'j!Tk_,#i&l+$Yl[/&['NINfLmU:ue\8AtaVpb!"?Obt8]<uos-8]$W)8Pl>i)FD_WLlr#^&sQ4TBI3mVK(;a'T1EN9Ta#T_
%<<a`s;Iq70-d0Et'<0EmdYUp05COeV,!lte,\j/j"gLKpe5SeC*o!t9-W5fE[`],e3#"s-_2a/)'<0*BM$'a*g.DTJ,p<h42C1p,
%#>uk1Oq+9[Z6p-X8eNUKPY.Z$*CuI6?94/tkss/befo)V2:4>H4K>3Bi]O6:]*W=08=W28Muc/(RMZHQ**"aF.F,sL8/t-bm$,bT
%UIt7(:6))AL<o#&;'kf^C9t4M,XpM,hBqW!UMTPNW'd(TT/SPLV`3[iU;;A[D5K'!"R.*8B7;rHMM(O(.L52e-jsXN8`Ggj7RdlI
%9hdYna^SoshakdD&<Oi`,"=N]:po%Z0/E%tFXk*aFm3QE+!9*S&.q&IT-iUn!`/Jg[Ojl+!'L?0-VeeHL#ncsBW/k_'U2;p+L15T
%YQ9i_MM*t/)PO-N)a\YeQ.ZBR;fV]WD0T1&mc,?0N)@N"%-spN1Dn7/!-4V/U`Q2eL9)*+TP-q>=Y_C;?ilT<b7p1t,Yb#fZJZob
%4RSJd9-hGMSa&J%iTbH4S?P6g/e_j=_.CL5Upo901.AiB.9tl/9TY8N4<[E'`S)Y17XX&lP.)SgR=d8VlSQ\mj/17G"ED=-+cTY=
%TB9Y5Tk^QE.QgL+;!)/[XYL,kV+u>Pnp+S#8&)V"1M7ECC%?!t(t:7f(!b<#+3n:4P]/U:VDM2*Em]jo8H_/q-D_#N/4s[dSnUb2
%%P4\B.K(.kd@I?2'cleNPcCT['(RPA(!U]=L-Yd2]Q`]7,e'p=h[Sd2S/2:u?qLd_JrH*F<>l^QkBK+n>C_5n6VqF;Q\Mfgcq*BJ
%[i_c\2p!(+AsEi^Q-u=BTrN.pT>CDQo=*%piYQa&!t-"(&*VF7.@%?!:Pm?+mMKD?kpN>2=-M>'AIe1j?>lhqWgbJ,L"XqcgJA6V
%>gG\<ekB_j*RO<,VO=bH^K;><1Yg.\oBp0[W`Ke-caK?@e)>a&M>#:02c<Q(Sj#khP]`;:R$IO;2,ls[>t`?P:Fo[D*;E/J;i\eh
%4kFO>98oa:*TN5'`c*`U_1-DmJ+%d;l6"u1i.louDM&jC,b6N%/F./\7lfC:Zg8,(QgA%uRkEPeCa3\ebN:sJp.Vj9oK;/%$]aCu
%^rE@i/]f[Po_DqcDYhdu_!ZVg"E,<%6no,uO7=Q,qu-)N2>%6cr$8(]kK"V?\l%irU3b,rWLQI?$;aY3W\Nga:0S6kS/qjLf#&ut
%EqZZaf#)r2NBKtBG-<aNf*ism$X2Df0a4n`0-l>#7=]M_?Tmr;,f$_0h`(>,p4g2tY]9YNC<mp?k>!`9Gf6*KaIqdu8iuNYH%70+
%UrM$hC)\8FfRo?/Q"KB&Q[0h4<,"5PF)(&Mi\e^s-@riB+;`k:8t&Ag60gL6]/8B5V/[<%h$ZlZgto0$@^[3ZfJQ8uN??__6U+/+
%cTPL<Z1UBKD$)k94eSg_M;I,7m>#U?j@q&!ZPgG8;\,m0DptXj8FG[fM^da?N@M.^9g.k+eC;CSCJ6lb!h5Ina@.n]0Y'&!(F\_*
%s/g91.&!,c[_iF#d*4!DbV.<%Da22;NV!.[UUPXbDlo?V2#BU2+O(+cbsYR#l-h?ZTW0Z[eC6j]6Od%0l>`01BJNOEort&e;\'PF
%1%cCJl`C/Td&4=cXW21.@>lg@/>_#;o(Wf.ViO^0R>>S>k3up2`qWuGZgkT*.BdPN/t<[3f">\cf?s!pqdaj&gM3/)DGjh2%Me/p
%3"17aWd*!%ioo]eOVk\QTk-m2/L)o]bT+.*\M+^fZWL[74FgH+pOs/mf4i+=<r%1dI)2]/4kI#:bAH'^@AS3.Rk:ZpqjN\ST6J7Q
%01`8JN`MRu[^B$KP'/?,CA?sb?BsNr\O_pq\k+L."]!,^S^#070;\+M/hGjn:_h5)k,)ma,EBAN&/#YJNs(j2eAB?H!uXb@D5Sf_
%Z]#cEBpUQLc:@B\1.E6^HbQuc#Wn&a:t8T%nN`>\:/;J1(tm2C<.&l`Ka^tP.!6\#8Z<9,OKlqFHL<7!1A5LpO>5.OL!3(o>6?Pi
%TlDtYnbmoI/1BKi3heuC*d'9j?K\`h8N`/]n^eO3n]:;4Ml[*KkA%0K'd)tW>%mb-6IY,eC*s7UM(7VSCh>OQ+!$Aq$miU$eqM=R
%l@jUafl$0>F<P/R2%(:c^to?YMf`_^=5Q]4"U.LEo`q9tGG+<p%7aWnQpN^S(tOEUeG*J9n+?M?VM8n&15N\JiJrU#e5LQ(3]fX=
%9$8FA0]Yd.Dp:n/C?gcs.iCsi(G/ZCGA/mUX)]Lr5Gp"L'<bQ\QisidJB:8b.@C%%,mB/gq.?MD[7<@)N^(o+MJ_Wg.>(eP+l.S`
%gMf-d(4,#MdFN#9cXV=uHs>0^>i=B\=rZ:A&iMVI%TbDb6>i[f=NT?p;9D8VQ&PO-/n@YWAg(ZI2d1cNp9(0mkf(b_8\nkmV3nXq
%bKdTI5$'/@WK3m7WK$Gc?>&;>;e',bAYP)l_''I2"pm,3=0!g:G$TNikI>u"JmRil^EE@G$8k4sZV/h;/^Okk.-^_.YH+c^0%R+m
%3E"V8!HE'()_K>:d%X^No&p?,D3mY1.0lj?L$BlRKt0?5)r&mm,e>7U$o/[;1-`X_XYcMG)7!Q8KX'?IpT`O[mC]7pd,Q9[2akVH
%Om$eKe@6;771g;9=D+u:Es\%\pH?,ShLS%'m4fQ&QBO.PKP5HLSmXnmau;q5HUk%THA-hQ\ZC4Xnl5H<noT_O*Z:b78I,'a='uYW
%;_Hr@;j,G,=0A#,88W$#jZ+5*[B``qSJ4EXp!0M>=u?(*Y6Q.^s%+7=5uQ0a,S.)d<6+pX8u*``V9%Df?W38BQ@YnZ*bVhF#?V+,
%K3HfG#4MWcgMW40r;b?UG78MHK!s'mf53?$NQ@'I0))^2rkl(WF9utJ$E9S\!ca<-CV9$u508lfam$ED<"bCH3O*YGP1Qk*jOMa]
%@LCP4(ts%%14?67]BW4.2GZ/9o=7MK5nbnP#YD*r9`jW_&n1TLZ@RQ_?aorF]^]^:RU.Zbl0p%='OMpm7lf=TZW9VD=kJ1*X3I!`
%[Zn9\LG[$?ia$6BMCV=k+Sl(BUn45?)3V(CaDe!CC92S=gUp-n3&*Qqlr&jW<(Q&*O3asP2/l]`>UpcG.jb-<m1Lhdp&N!Weu+dX
%<q9#'W`iJ4B1sm76]KM&7jN?PapJub.:S^KW>R(D1*2k-'esC0V4`t];2=">W2a>AZXAApN7&)-7,fgk1i(OhZk4dRL@!s",,@[B
%.e;s"0!PgA/aY.">%PD(<@9+HP*VcI-=L6u]_)bgD-6.hTXLmTh2-.hlj*01U<?-'*GMG(K(d:i]=5_h$B7@\(>?p_1k2i"*g>=Q
%@?ROQj2c\S,'[o.4YS_=QS)8+HX'+Qc>,N#]@9S?XEniL_ZEU(baNT"%DJ<X[)nTQiK0)JY,;Za-/>?P(<&4tQhpWMDn"$6X3s!\
%Z-G<\W6`_qQ:ho_m<,rZM*Qp,VshjafreJtE=0X+H^4`0/dkhc=NEbM`HV1[0gpjaQWj-4)JW8X/L10Fe[igA#;Z3jM!]Vg7NA.=
%"E0,,WHY_3kUHdd96<_<VmTERe/;`/po9e.[X4<\Y0oRZ8S-\Q?>FcXP%`N_Ur#E?U!sI7NJ6&)*L8D5PnD'9c!?UC$7Xd^;'?tY
%1o;:XTLuAfZ/iFUKV\:gc<VR?;"8^FK;RNQRrN6H2<W`3(J(=!8gJIJ*'Ns2#3#If6)jkSRihUR3O$eY^d%gb56uW0+6?j*hWj"t
%C<]k7^.haq^q6+:%D>88Q,&lj<<V0VXk(jk^fs7kIGu_CD_kH,Gb;RI;/^JV-/15$<V0SjWeB6)Y=d_Yri3>W>lq(6^eG$6o]9?c
%CC@hr@?o3/,Z^/_5)U/LpM$__<&T$'&pfnc.U?\!ZAQ@hA_$4]a^o=_\&bY6n4bgAeDi0P'b,,Schb,cqA2nm^DKo3RaVUlT@Bm7
%-W]P3IiGLid^mJ77G+$\.dA@e<<DVe>;c&kD6<Ytgj7Rj7J[>_<eT>k[j(0ji%":=_c=SA;HtO?b]/'rD^2ebkZsLT'_"e;eUl]>
%\S@sZ&mas#VOPlf>NAu%Qg,r[>p]+igJnH0RI2R$0&Le/2D."nWc+#+T4&J($@,'e'n)/;MQdKJX2pdSf,Am&I8tRP^-;5!OC'=#
%-MnO/=7fR)I[g?eJN!n>#eXW^6=3StU!F]\;0PU9deIDiXQ[8Q=RA&[GfH(N9N]F89SJ27ikd=_o=F:`LW6r:`/;9%M:Krd-WZ\u
%9SsR5P81-HAWIV-JL=dj;h#`@<^L^Z@r'F+2-/d$DQJNI--'caM&lKChaEOUltl6&;7nE2lqP7@\=Z$KQ-d,_=m68L8QPIhQL&A/
%>r#t[hkeIfka<sueDE`]e[05!AJ'*_b<k%HbLWni5a[h`RuCJQhPSLhi(_Lu,^Yk7/"q/iZ]af`g+5SZo4Fi`c,<c4GF>duM0qmd
%PpX)aSs;ufd:Xch-@]&/]h+kci"^n<Xq0CUZK0$RA^-s7'^jC_[;\$LZk@\O8?67O(6eGuKUk_^P7<(d=a8i=-sSNBU$kop-1i7V
%[Y<N]eOnao<\4AkdqW[V:Z0bIoJWriJbPS?)L@TN/"q0t[0XH?Y!mL#ZYLWbq3#+nI@jpuTm%ro)L@TW/"q/Y[aLI#=gk8pD47SK
%_-NY7$td+>gD5*rBe,nOW4(-;GIb.[>FT0XO3\2L`i\I:PZnS[EGgnm($Sck?.LSoDprS]nAMqel>Ip(8r!&,[j\lmobR*VpJq@a
%P&DZ=beAMjDkc,]i*H=66E^[)2uRo+n0o&V$,+Nu7HbHm=7fc6m\34TR(/mY;K4Sd`5SkTP)Lpf/fRkYDpiV_nAN@ql>Ip.9'AE-
%/dcM_aVB)bP:M3.8\#,?@c]fH2plXl8Xm@t"C;[]Du.-hIf_JDU%c+.dMZY;Y3:6!ggr-F0m#kAV!)ROM50sthaGoCP]!aJCY0@r
%=6*)IXp!T-l:U9.WVb3&7b*dN]3JWp?BKC!qOm%=?dX!B't\kL<`_A9>mWSIG&Qpj.D$49Qa;#l\j>&`l%Z4=/TRTQC;k)]FsZc%
%EEC%ARCa"*/_"(n3.'Fd)$OXCY3<Lah:8a>AFLf1q\3?C^!#Bbd$l:e%DBgA7<*.mGS,1ma,A=A6sbQ'Ab%&32O.>FmrE\"dkdCn
%oNaAYK\iNr9&NE-Y;Cf968(ZD1O>lFmo"I9kWM\EFIQ!&YE[]mWu%J=Bt`4s2L2tKHC*874a(H2C/<]]p1d[cjS$%/460^>p*RCQ
%.WLg3/)=g$hn,<h<ubS0G=fLeH=H\6of(9G-1D\r(I8j*?]d:8^(P[Kl75.JY&BSlADb"J/'Uk_qb$'(^+Y)`KO7S8)8?f/QguZ#
%B?osEIiIWR1UP4!Q/\?K^S5Z;IO4J9nb:mHN&C0`qJ4W.M=-RW-1EPa=8MqjrtTsCs190ZQQ0D\G=fRgH=?n>os`>!26Ar&?j'aH
%JOSF+!__H7.W>j/j9"62Hbk+3)d#Gqd=DmQ_$:a$P7T9rG8\40HD1O,jgT5]-1if==:0:b"`(qmdXol^(;+$*5K<\>B!AZ(9kpp)
%bF';#qBe4I2,Z"3_GKtE_?dhL&T30o35Q;SO!IuJIKE.ZU%`9<#eeIrQGC+#@1Bol'UI+X<+1I:k6`I+/m7seM6l=PMnVb"7c8^7
%Y_:l0$u=XFS7--Q];/l7P?lbDN(0;D@0sTi)fDADLr0jOP;t1*[RhK/i-k%_pK6E+$,k3b)8mG>U(BQ^2fXX"WI#n"KO(g<7GagP
%9AhrSZ%S[)`6_RZ@aVZ``!Es!-.]jFRJ<brND1t7fq]9S1RS!VU@/_P(]@i<.Yb[^.Rr?5>-S:gj:uIo/RgHOmPBb5HCnAG6go)S
%-1EOt=@7#4M^A!:]bj2HcS%cOI=h!;_6i>AMnVh>7d,8dZ%h,2),&+rH,e9sGDX=;0:PXF)38s?`Y*T]CTN*]aMo-CPAMj>[S&PK
%k^C28a-TJ8dP:BBf!0nbV&a@84l3FJhBO'dn36F\U%bP,2=r88NtH]1Hn:s=p@2(1)uWm&[)kOuig:%n>"j8OA-on?6'f<u*+X`Z
%-R#7!mB_nN=mse#-1if#=[R*?OYubX',dM<WQ<MYGIbfC>'A$/g<(d$ZD;33,=CAO,>76+6F)?;(s,SPD3SQ;]us!5Z"GC0Mn[5(
%QE\!.A-kEjP4/6OM9-%:btOEHBpY8>SSOR]]\9)4q8oXT&sO^7`))3$U+!(Va\eANRj;PO]Z3o>fEFuPj@u4d%D3r96XMR5Tl3ho
%&Tkih(3u+F/:i#uaqB#aY)L.(^@GR<Vb`r%=I*^UV(>:6QoW?amuiuTIJXiM+nXfeIJ_j00-N>a/H:;$'439i=T;6BaQ]Wj"\r!3
%1\:9(l7dm?KEiX_=UPf5/Zbc5^[(aMj!StgWN/hSR"8ib7.W)3Ld1j9qHs99CB*>5*A@H^nmDC^naaqcl<jP>O8d.N/7Z/?[aaFn
%;k*_RD0F_8g)u\iL%et5k@8*^?etYU:3)q^c"/(WQYu\:H-PNrCJH[h3B#&n95>"nXZ=V4k0Wi^QIXc?kfp`;M:ETWfs;t^a-kEs
%B2Wg9b@f"4:,AgDS2nj)ff\02M:.o,8osDIc^)tKB1?s6)9o]24Bk-nmcMf\ceO-`5'*=kbdeZS><6hskfe=L1ZrZ@Ct[%qb[sU+
%RlPUaB1lis1RU8KAEMN'/sa[#B.e7o\BLcknlgiiRAnDAVD;M,f3qX[WZOpsI*>8rf.ELEOZ?*'ju=$BA)B%D*cqA?i%`9?`uM]k
%Xedb-RDp4Y)RJnPc'H?8B,7hC=j4%<2Hpg#Rn:hA-8E,MfPERlY+%:Q$?H_A.*QS+0Y;5QC`1H7Aha+M_<ed.ZR%=&M81*C!jaKV
%_-`3YIlU7$jjXa./U]Y(o]:.k0;!Y%D;!+qb[+%#HT?7bB&e0T!_?6s3EtK`RYf4%-8)41DRNg3cn3T3l9nhd1Mo/E$V&<C%Pql\
%9W[@&QA:4%*89,nEgBqV_--3`+.Qo3O?m%;.3>/9ShDTOF#0k_DPM%<[qjM.iD#m,at5o6Y&%!RfZGe(L92FB[dkh56WP7>BXl2:
%m,0Af#Wc&?-=fr<H\r%p\`_..]a,'/3V>i1?(HeoXn`m0EpChBb>V.l:H?Z^jjY*^QDU2Ko%113HgnjLmZ@pDZ;&Rd.JI?`Ci[jl
%Q$TVilHtQQ/J`U\RSpet'1'/>!e[.^dV\d$/VAeMgkoP0P>*2=HEntf_bTWn#<TK:0b%ELZ->OC;eIF]l>`8Ka_;qGVbTq"LK*39
%V'Uml9=Cq_0XHq[`(D*Lc&e)YIl!VU(3XY[_ot[^SWdk=aWo2fKq(1Kq5umfa_;qEV[hRkI,m-UO]rh95-el'L5p(RJ70\3d"[OM
%Ai=[ECh-1.:,<bJc",ma9Q.J_U%=<s("oUXM;0aI/.jne7-'r%5t!Wm@!Kc$*!Qk_#9Pe`<n;=ZIm73->(3aB*+V].G+EAa)9Ad5
%O;D8KSc,-`Yc:hu)!Z)[71A1cNAWYo%r-iE*'9\-;L\(LUB/DlG8t8PEU3r?9-K<Om5RkJj4LUaG6W)[WUHqL-gA.cHT1_?T-,_]
%H/]g!M/tc`NZ6Z\%31+B*%&[FMdS6!9f`^A\0^p1-[l\gbsZEufJ+atogq*&1Yp^5OC9*KR;LaEgQXtiN"\iB[`rCQMp3et;^\Sb
%Dngp>Ch>uN1i>+6@2ekpE%m:=+?51sVXp9I0g5<i)>?\!DYKM&%:[l[91(FOq(g%NQM[0$qk[^9RoY#;-\?>V7"\l`>MJ'PpJs<L
%`NAA/_m&CM^=/!7Wup]f0X6PRbV"p8?#7X%E@)L"R9Y,_Ej8X9bUq*R\%$NtZ)&5&M->;OeDdN-M_2:1R[M.HP?H,t?[@;CZ.R=>
%@Q+sYI7L\K29`_m0_:03k7q3)EL^a^Br2WC:+NcSi\\!!>;n:<@aiL/WS$hu_^Y#i#H,*)ZFLY%.FrH]9.(EX5&m"d`+@pAQd-te
%FQ34o'Bb3II!.R@9q9kSBkA$Vc6fu1i]*'Wj%Le[SP3kY\Zp44X]dc6GYqMIR'9-;fQkE$7N?%ZEL^a]U!nfL3]P>7@R%2TD$.8#
%ie^(i-5(;^3f2K9n<c2R0FGF5LfLu%Ul+neCdmj)/?[Ntb[=R`2r:sliAabkrCe5Th0+!-JoMS&?k+En&*EB3mH<p&P;lfZiikGi
%28%mhjpe5F2]THgXJ$)YR5WhQ,&WLmIUceg_u5@C2&p5ZY_gqmL=8O/5%i;_l.3E]$X@;hn259A9c;j<-Y4.<W$c0/F\?#`(iE'`
%0S\W3(lmEUee3_d6l8+#_QZ&B1jn8'jpS)T00Gur"0fVEL2NSu\\_e;$N$5Am(.2>JH0bfq4J(%1KE(.JlO1qE1*-2V&SQ#U2Z]\
%_WOT,:>IhZn:]iG'94kEfNbj%RW+d1_JuFZRog+m\0]J*K_*D#0&7T#Jq(s;'#%t@YT6KMb(]kd,E1UVaUr^P)V7l?rKAEFAr:Qk
%f!(G`*+t"F]=K^Kh;%N;JoL`u-O@b\+?ZBHNpE!'3YqCS)OtDSE13cB@o704_.K<M(qFjuZ#na_b7JmXbR6=U3CE=r1G(R]Zs^5p
%^+k<<^>mKWIZf<;^>fDNme`"`j`obfLPZ]"pDnH3Y&6?Q,</AUi%Qs=7nP<U36['60GB&YIbUl4^O91UFPo.-JO^_`2K52>^i<rg
%O8ZL5"-44-q7gFSI9.dGE,WUG$9ZnrQ3j'n-?,EA^gea"M83UK@!TONpitBA,FNl7]mgO=W9K\(!o.g-OM<C92lV!p_Z2RuC7)JS
%[BX^U/K'.XSGBpsdLDI#cLg!Rd=4[,]JG+Ca*b+DTB+n\b&8unhApL`iedOO-LU?dQoEH1l^3G&)^a]cMnh#r9hGia[jCj1l[9Cq
%9uf)jl'OF&8c+K'mFTjM@K"3&p"O6:P^r"bL@f7"N8aT$IX+j>b&;47KCWgSV.';1/n5a5X^`6gYN_C.n8%lsiVW?,KC@P>H$$Z2
%Y8h3P[U43XDpQouq"CdnBlqP7mPSk\VETjN^&8A6YAIs*kM'5%i;'fn4*\K7akum$Xi]H[\)G0oD%YR5\NM5t_!XV]D>Cb7]u_3N
%G)l#sSLD3lVYJ/+n[6K!1W)/s%,]\T^(rXH42KOKV/pr7ZIZ%.D-LUqDjf:lV6bO;:u*M0pR91:="!b!`5_0b+rlP)W4b;G\5@VK
%##hJ6-H/e'b[-l<gmPiM\eedRmmTe%,iS=N+gk?Fh>DA(ou<EM)`t+PP'Z.VlAZIV2g/*&&^A+'`@%LkN<"UZCIY_Jk\]@>@J%!*
%a^j9=C4jlK#IVD2m=X-NoCbIe)RUX(R_]^KRoE&B%5X:$cW&b0P\Lc@bp_+mG+2@o*Ric%;X^F<M9&n5,4Da.[63;ek4,=:a4m^o
%/WD\_1u9q8GfLDWAb#I9%MiuM=hMX#eWP1;9]D$fM0Bf5)@g\S3P=P!iU&P&GB'AHk)$r:9N!Hp2pVoh4>V5;8ZF*+%[0l8hsJ5b
%IlG^Oh-lI]l+;58n)g%P4%rN]HhX&`]4kmG%Z=:ZhMj=:2pUL?ECaQL]5d!$VMVoH%PTI[\'3@X1/iCP7B05>EO,CFZUhLJh-lF\
%M7[1?m`([)4&.:WDn#acn93j9gDrbGQF7_Zg2<9l]>GcAZ?H2jg3#2eG8R,Zd]T'2]5At_%YIa(fc:9rQEo7t&'D&E.(dA<eM;=(
%bh2SE@s?S#>/IFl&pD/dfX3"ipptJ-l_]NB43UPR>rU#Mh/fIZN^I'heidZSDOT7i95@K/Rl"o&6e#sO[)(q6H2K#^7CqI?RRR'I
%SS5TOaZF1IAnc'`\nqm>=LqpMl&IX4+mG"E]&Dk]Yec]M9H7?-OA=3jl0UIYSggH,"o8dc`Mk/RY#SDH2g(kX[aZ.?Y"A:okI0.`
%G&E]"\YJp(3Hp^ZiT@SAK:CW15Ie6^*J9g8'0I=fpM=!3(SG3sR[)u/SVXhYi>Q1.=^2kODHllR?>`sg%UQ;@>T-eK=^2kGD@bQ+
%\NPhdb-bq$UthR*J]7"ZZVp7/7d]oH#(4&29F4mB,38Hh57"eHd>!_:EbG0WXU#=Wf9Dr%j-gT#Ctp)c>C564)gAtT2b6OsSf&_i
%04AY\1D+VD#nQI+m?(G?BXka,%iVV<$(Ze)Hd#mV[Vds)\>Db+'!CJ^K7hpq%M!BD3Okc(E%M5PbS8hd;/emti*,KHmgNHrg7l0X
%'E>KUQ/UVhU,)Aq<`Xs()^bFK-nE3L*G&g'[k6qhht@<[q:;ERE,U)d#NW=+bY!<Y13hR'W4-tj@c!uMH(-kdee2oM9Y>5u`t3/`
%k;0bTe+jF>[Kdn]gGIAs;lAH?#'+n<X[1[p&_i*TkI1-/_7?t+jIk<%dBlhiqhR<^[s#P.N*AAO&&N/oh?gYSMJ5%qN&R=)3D;Re
%f/CoZ><d1GLT-'&co,)=_l?^@O#uO5?-_<WM.p1+VQJN%)5?LY&T,ubZlMUPQ=h.KSo*6?ha!e3,f%cCq[WqV2U"!^)t.1fVMSl2
%c7I^Yls[`:AL?):1We2^nkFOQCn%\bjk(&Q%nj0ENPJA,j%Q]u<Yq'1Rq@EB3AYKr7_oXPc^A11Scmg$f#*)&LTQ=Tf7o\ulXt8*
%0_I,efk0MX@C4Y1XgM/:eVRI6Anp]eoruZo4>CWtR9;Uf/hF7ccG\Er'5PiAL>g\&R9(>??EK(9ctZbd#H]o1[+\sR@F;AlB%:3D
%X4E:X?#?G[k&\es_iebiWJBH^qO(8$Akq_I\hKB&3)aSHR>>S>k4$;CCASMHUGgDVg@)<>0VhIMN&4en2Ha>Z[X-r]RUr:gc\>2k
%]rOpUD-LWi-EUF4(a<g$\JQN-R#&+ZBk2Iq@qfIeZn:X;dImhMNRjuFO7hkXU(%co2KT_:-.0_-S@ugAXZDuG9GH4UT[:\RTsY<_
%3&>7.bb0rT6#/oqMRf]"J$uhF@Lde^1<.[RgDXSKBA5Jc'S'?+)"t%6`Ye8_%mJ(@4cZL)hcmbtEfQEDjitf%2sY,5lr_=G3c&$A
%(l#+EAFBBK2Y>eTM)ALLf'HM[(t.b2P@i93RN2bCbF&eqB/[u(fs-XDPhH&R6(&0<A_+e8(pdpcbapV#Ft@/T&@Tf9fkVqYRR4`f
%:VLXLaB61C=NFUUChj0E/fSH7lr[(d[VVDcZKKGt*Qo9mQ9AldCmrJOo0UIV2TJ/(&nSsSPk?h0G-#3_rjAk=/0sqXH*XlP>BQ[^
%QC0']<\fseRqJ&R3O<8:P/<Amj%PVq1J)a@AIM'ec5bLsF(B-pK-K(!2^ktWVT=doN+'GdR3?q%$s?fW?#;*[n[5feYlrabOKn^c
%5P&C&b`<c;$;6G>1HdYAo[pF5Z0^-B_nh@m1HY<j9,UBEMk(]#H*Lf?`VPu=lT-]Mcs:WsrLh-<lfpPs[U#uj)7!%=CmeG2\[,`s
%.JB9&Z"YQ(`_ME!SCfN:@bZumK6d0qh,%S8%h0gCb`pc,.C#0N)eVWVS/JT21L_pZ2U-p-F!ehsSIkZpjf.lXSER3?9SYbm*S.N)
%c^>63B/XSoCfj>bc(,8Y\ZgAA_O_DWp?Z$d98,NA.dT/o@F+Z&gbN<aR0f?p-L@rYYXI,''4KopKJfO%iPEO%#9.:sD!F,b97oB?
%)XKK5?q[E6>'+PJ=g2IL_:l'G<Qo7i&o9aD'!1CE=Nc9g1C#h^*8&UuYa,>0B*rGo%h7[L%%N%QgO<fQY]49jL<b=W"P>CA@/WcL
%Fe&MZkJB.&X.c*@e;ct7We%(VB@hmE$H]]]ks3g3QXI&"R,/nF=4jH#q=W$cD1p!B3`07fRJM5PlK]Hn4#(*GRJD/Ok,TfB?Cgk+
%H*8g0iOrPRn+BT8X/3L91[Xk(Bs1U9]fqgdb'LIqT1Q4p-G>./HF99p3-/ET`-G(Jo4f_XBr8P71Zd.<OU^@DS/JMEB"Z./GdX#,
%",\(r+-u8^B!Q3@afa[r_lBjo2D*H:FK2BQ\qZX;)J5j^kTnNeqBWY,RHPPMK%0?r_p!02'@4'.Vc]C'5>JI7f+rP6>f4d+%@uTq
%8Znq_)NJUs**5dQ%26]<9GH*@BZ"d0M)GLg(3U6o_b>#,`FntJXdfib29bu!;epUM6#R2g]esnXX+dg=G%JU3C3*H(DJO%8L>+a!
%8h@A-c.(<$;d7;INFfPY@iJ'WD8?[d[7)ip`6hNLs/q\1$`!A2=R7+_^\m4aIrdO8Dh%EblTX;Mq6*SK\,PcuekB-.gJh2[]ZXm:
%d!K;($,"Al7GrSTCCU4KHrbpW-aY)i2PV"<pF33_od6S:Z9=CT7Gh[a9'AuQWs%;@[7Vt%-+6DRggmic?f%Wf[a9BV<XHH2DFKu\
%ZWe#fTAHSBAWu"$Tm$gGdWK/VX6@/0=7+;&*7ksPMrZ>ohdj8i4mpa'd/`odXp^9rCT]2[IBoo.T%L2ArG?XX8a@GT'k(alX/MMH
%<scN4H.C7TkI'SJdd(2R($R*m?4hLMpPQ0_iiC.IbZ>+_97<)P1\^RA^Q&.@Tm,1n;SY*e<==8>s/M?u8V"K3R:0iWCQT^&Dl*::
%,ZkAdab#e/@&Cbt^<;.7NK$R`XQj##fOn=*X?p7@@7B)6_]nH!&1d;u,IRe_;.<Os33c9X/YlJT]?,q!i"[gZRG[/G9&NEQ/-<#B
%Z-ZS%=QhP"<n(DqX>IYZ*@pt=4ne=CFNoo4gs6[;kUV\[niO%u5,oYNf1]>pGH%kdHK*(>e""OcU2R>K[BJrEAMrtqQ[S.;,KrdD
%/]MT9\t[E+]Z6G*Ye-]6%6^t.TDG$jZ^RFZhCOP.7@_'UpDN]=W3[+_QTH^'@4'<X^<<*R9t<n$Xm!A2=p[?5BV5.U8@4i:/J]qT
%c88_']0+dcp(N7h&pfa5Mnn(H=p_j`V3PT[P%c67/t5lS^.Y@mk^>Xs1qf;R/,Clnp+_[_8[Zu72d*POkq-)@"Pr.h8tn8$[0XES
%f&$)9Vd5VD=LtTe[?AC4HE@t.-GNSJmh0GZbh?OYhMQ8KD"$p;eh.@!q\OrZVChFgWi^s2j4^rG>@^qE]ZITNi,-&B%K$N[>D1i[
%g`l5Oj&SNc;JmfQ0'="D[n4'-Y'nmg@j#+kDkZVUD^G$.oi=FuEc38r0)8Q%ng=5LeZqoaPqKSi^QlWOQ[mgWmkJc-oH"0;>4O9N
%=))N7K_t:b@El_*I@#hlTdMHFZEPP5MS@9R7HeSLXp1Km\53'?KNuXG*[;JT\"MeKhWElki*B6`KUu>W:]4"p>RA'db=1V01&%R&
%c3lgiROb(U\[`!Z,3OitbKaDckS6Hde6Rs7L7UB9<F:o27Gh\@9'B!<Xp1JB\ki9A6sU,4a4*Q:/Z?6)DfTtHn1Ii[TiZ'dVuA$S
%Xs@_FYD^1H_X:.5pZ#&Bllu'cB3..39\L50O0uUd`@L)RkaU(-%6SWSTDG%u]:./"p21>OU@3uPakrB!]*)FH4Yq>TqV*F2&pfn^
%MpNsemp.$b?0EdWYG>Woa4oloLWCuS-RQ$^hb*!qYe+/s>L=<Dmp."L?>Yf<SQ@=bPKtbQpB\GNp;uNHaD[dEC<,#foZAR9PBo[T
%AbE3\`?hi,C#>i^9'BPuYD1mZpM/nTFt\__S)0(=qtscRhC&(BoIe#t@CI]"&pTc'/")u#^7t)%HmSD3buXsbnpI8?lk4^YHCO.L
%4aECZgHt@KIAP\7P's1NG1jS8]hS7OL9eqqQ-d-r?g4gOj&^Tu*p$J8ng<P/L#+!O9!UBY^J]p#ZsW&US%RY/N4@mHMS)U]e^,!,
%pSkoar[WQ/pqI*G+97>4aT.XB>81HO3cT\N]HdO8oil-Z!Y&6uDt/>iF=%'I]#b)@^q3QR#sE?\TDI<`^m^r[2R!na9Eu>]P7K3q
%G6u*pp0t.d=-VX4H7RBk;Qp;\AHba,T4u-9n*u!2_r6at/G^tZ=@5mNi2?Q4HEa8hLEDJJ$\GV(Rg`^3]LNR:@@%tmRsm$#:LFK%
%kWP@g_Cg)M,&\*J-1ENc=@,e_iMZT3Y-<T9,n!?HcYR#ApeA=R)VBWpCur^i^WdU][_,0LQ@:i8L.0uF%Bi7$"`YCE5'%R7\#I7s
%n/cdU6LU%lCY2Ej%jU^1I2JZeq83hiQU%XG2]9OHHC$sWd/+elK\e!eh^rj!4CZ\sM8T\4cQnh']2W7!H]LfN%=+:6/9S8A-C3%m
%P>3Z[GPT0/oH'].6>nW:V9ChH`<a-&.K1A]S0bEWqED5f6Vl4kVuA#\Yp=IQ>`>lpG-T,XoO8->a"Na_1Vjq)MIA(4(<%+V[lMGH
%GTn"ios_2b,r_;M@qc-'cWKgFU@Ft-XNAK/\(Sb,]M1?9^mf^]%D>1i7bE./0gb>-Nbdj,cERN/,opdb:"HS&hP2*daS'o"#ea"r
%^+Yl)gge`Uai=\#cT]q,S+L2^q(D\LRdr'3=mBR^JLoj//d5BEDfUpsn/_m=")kK,V9!goa9]K*6iQkDBh_'O^<]97d(=C1%DBeP
%f"cWcA-Cb%,U;qF-+Sd0"AU^=murn\oYa@Nb&=%$CQ^T$a\j*70j0EKO-qPM2lXn3GaFnYd/2m71p)1LZ8ClQHEr4\jX4j-9nK[*
%hIJ#ZoKG]H](7OE=^'!$8Qf9n`);mXbqs"qq`JEr]h;>UckB@RWP=Fm/>79uati\7A7a0_fZFhMQ`_m5B>3qBIk+qFTsko_1*l6b
%QDJZiEgBd2e0T$9ohFGOKV"RSOB9qCeMk%^&pfbS/:mQJb6Y_Q08mKb?`nsH"D6jJ"uGmG$8[8d36WRbP*dQb/rNk!Dpk!bGemn(
%bP(Sm;jbd,9tOA:koMXI=nGuTo;us2!^;Bgr3L=Vqt;<]-VWYen:0GejWEeQC/pKrpGE3EQ><WhEQ4L^YSG&_4&ip=HMON>k23rO
%nrNRpJ#`PAhlHH8?JP)A%kmtE^E,&cr2BVV5Da"r:KqP"C-q5c/q/iG+J1?Z5Rgss@s_LcDMN==1#Jcf&)i*'HhCCge`9L8b=>$`
%r97bp?TURil)<Vl&_KV`O6'ZiF\KksUi:A:E=!DA=UnFO)KD%*S>j2'5?3(Z#;nKD_!5BnPQ_;B>N'!%()<!sp_0:Mi;kJ3/f$d(
%PrZ<@B9\MA)<]+-qS9\5;D!*8(rJLJKF5<oD?4`H?]mtEi0]Sgpm@spWPX0^>SU7=34)LFmbK$T>%YBg^bl%TSXFjXeqWCW7g3e&
%<NV8;0l&)1O18;&o`p=U815;]hFT^r4HOU!-i-2j@NnruOCC=hbsib]B^O`gL/TtfjV"B+Ke&t1d?9^-',V9QWMLEo>7R3^.Nm]3
%C1D-ZE(MtM]TZt:B63<j'13(Qb0'BWe8PRko5Vj>JgXb/;T'W2a'_:^6h4P,oEXZ=m>P"7/08au&RuN3Fao`E\@R<l3i+VF]EC4,
%`%0@WH14nrS;142\i%GJ:&>.Q]@i*G=&t/*)<GC*]^FcVEn9Pg9!BAf!mDHb##t"r*EKEsNZaM:@mm+<`THLiO6n4)!G?u=%"q"-
%^jM(BW/LY=YL-0E[HS.H*F.p7#t<O/Q!TY/@q1*JOuDbr%R/d.Iu5c!5_);X&\,h))%Bk"1*K"NY>L?_6R3"8@^s^bUB'M.:ni-)
%N0)j#;]Qm$nF>J%eZV?4VK?68N_F`ESq96]AaPLCQEj1L/1b&jeLm#(L@/H7-T_P!kRWqRIqT/K>T14iW9(VOL]6?G6N5snV1+po
%3-MZL<$+dDZNhF4X:]_1kP,s`&e&6U//q6DG^2@c>1f%:APht5A_S)Jp]9V?0A4C#a=^UCi<.@'I<3*>;E/A.'fl3=qM)c.8X-fg
%aSIb.XcCjj8_sqC4hllCFS*:d0IA$Z?t^SVNgE:t)<X.g(%<lPm]^g>I3q!7^@4kLeW-1\nq$I4%f_XU0!:79.L'%/^HU1OeiMGT
%'KAA<&2mEa#8u-@Xl8bP$dnhoPF*&+(#gYC$a2B(&?S^Jq2dVtSdD1,\="2)&gnt;M^@]lBN#'`,X$`=LiS#fp(!Xt#ugL(>/rgH
%1rWZ7TD_,Lmc[A7<>`@",Y;aP)IXdu,0@@h%*>BD9'9@2kb>&r4/d6lX3nRGJuQ@2"FLY15oW]PYY,n82C'a'$[`?V@Yu4VK5L&+
%=Phpug3p:,$FY?H$m^3(Fb^cQ%"9'/Ot[Chamg\/$;#a/HWKqLV.rQ<j]Y^HH,&BR"".I"W>r-]KE-f`B2=r]C2RamVc,q?V(0Xg
%jioeC8=qO%<lIZnim?Q0e9gX$.Q;jIc:.8DJB7@kbbS32ZFd%L+p6?+M32!%/IRiml#dj3WAn-kTqhQ2VkEu5@)CA..H[(Zf-4=9
%@VA-#.+RFL8@jPmo;$bU2h#fHa^2mP!leQG&fca;_0MA:s6-KT%k3p9>08/I9/sbhA/F=ZNK>f-$DI9;")dDR-KDe"Zb2L5[A$04
%HY;/setSt>S&;d\;+F8YDcQ]2<):0(THn;.NgZ55NY':a;X-<VeKSA]Z:U/fM`MLj+%SS)eRtlogOlQ6C?2hXiLN^UW31rc17m",
%gQaB)POs16`Ubi)[e?92U-XPR068Ps66,PX(Sl8*U(C)S!RUm$-G<WLi[`2SrEgn*,-sq84)'JbHmhJGkXM9`Ug06O3kAmn1&-i#
%itHeSVF`uEfD:V>2lJhCB9sfK#u^.[Qh3@B=^s5[.C:]\-FTF,cR_;F7:=P&Tgn"L/GHuTM6VcP;f=.gc(d,P^lmuoNZM$Rk]5o&
%ZUAd&OTQA4HkXOD4'a<>XPn:t-KH%^^c_)7lQ.(A0-qZPA'oVd*XXFr..L><T%.epF_9<lq*T<q?C90&"D%stQb'ai+pF'C?+q$P
%Ydh,=o4O33n_l5^AS5dbTa`$!A4_VF5T3naEhhXJGpjs,RfgZb+-TDoQMm\nk29!,-;gZpE@e)1E#PpDo0KD8e=J%b#E\l&Y_VR7
%LSVo52lZNnMUfn3d,SEY/Yd7S69UhkkC((%NY\O)6Vb39SPc^*ne`ssYRYDcOU1+_"`ra'>77STV5u@G[UrO0Q=+!sb7E_)(F<ln
%YSRo[C4=Ggh_p/#1m/:uNWNO0A&]`6W1F5\#ABm6FM+tB0=aE9o3Bu2ke?"hi)Q_YaQAP]*8D]Kl&o*,I]s";0e#%_`FY%[[9_G$
%S+\nA-eX:7cK"8_We3-#4N@OI"8fn[r?D<\=qV4Zn\V\,/;-')7S1kPQaW$O>=@R3j-?/,qe*c7,hcpn;KCE#oI9&bSS#`a[bOgL
%YH%e)s$Q2iA0QYeKN$\<nj5;"J\m98"Dl=nV8HB&?I%:9h&>e=@;bs)\Of8_KN/H,jn#H!1#,]2M-EC*Ji4??#2Mn/G9e4N?)N'F
%*fBNQknoEo218&4d#\Je#f.W%MnAU*LZO1J<E\/4\frD!)7q22D?Dc,peeJZ6&0Mo_Ig3TK$)]n-tAr@E'q].^/Ku5\3d4]db)!p
%=a+rm#CTq47GSFD]f!9lB4$thJHNi4[/D/MJ0;Cq41Z'#VJ0EdHT]nIMR*_/AUK^GO$%sT,a\,%QPj,m]fKE=es^\Wk/jjqBQ^a$
%e*&XGg(fYdktW+#53OCD6UXj5S/++@iq!TsFD3$Jj$V2@$=bt9(dhl>F.#9T(Q=N1r6%rCdR10@M0UZ2HlMOXXSZf]P%urdWQtoX
%&.BJcL<t"'/.8DP5"=2KGn,LPFX!$uFC"3GP8TQqo*WJ)i3UY"]"1ORgXJtF?#*Xn8OahZ_'BOli.d+6"<U2+GdXK*>KkhY^ZV,:
%k[%>\CS5mj6Oig8fHZ/'Y)R-s>K\:n0VX4PD=*I+aEM2H;2f`G4o?o-cm+t=4Cfe5XTG?QIeqq!C<$as"<%'i3Whm/8L3h!64(EY
%rNKNtYq)O.kjCf#@8KZnYM].XPu9U7P2:QQR='qKG1a)o_1@X!d^7W\ORtXq.C>\a61hjqN7"GS;d,G+PFfFEPhn&_b]<VZL-+I:
%k_cVTYsH[=cCX&_bCKMS/F,,d(SRJlSQA`WE,s&L6jM4#HT"\!kd?$Fm%K=J>kak-,aPN?JCVIRY[#o8%*=Oh6cFk%aq)0I[(#PD
%*(T09lV])X,s(LN0b;ULCVPsP]eep<.%[?(1:21#rNDH3GA`<[3lB<=KUfqLD7)>c0/?JC;CV?U#-KO;\(;M:ku+'@Kt6$3Q^m"q
%3M*EPS$-rMa(tURkb@/Qqja?h"lR\7<%'jk3MMtl+ju1)T_G`#\n%VRJWu@NBOXi+MqT=M8nfh[?s99jLRNSs)E,&.cbX`4(;;O.
%o9;;FYiY)l!:OKA;m)ckm1C!"FX>X?<:4SC%XJJ8[4bi?lcMXYVho`BjZjqN<MW93-ZknLafF#mSjnNnpO%;N8=qY\P*fjFGLf"D
%j:eq.^A\#]%:$\HQ4&b4F_@B_D*W)I3%+iN^)StIJ=&<qnstVeJIlMF%jBpY&WEtJr](#9nm4X'1tTXC!hOu$8qY`hHimHq]5h:R
%rXJt@a;o;`1itHC_92LlPCg].\d>:o&*=-F6_Pm&DAXPVhBPYXAP7OU6EJR/Y&S>"SKsts%o2#P-3K50>p&6Y!XcoJN1,Dda<u.)
%pt/096;CF0F+)85p_[07(&<+1\juY\jJ=/G#tpO#>Pou$BuRiSn"-hD*78DL`T.kR,VnDjB6bBjaLJCa,X(na+Kb*NJ+_9_rU0E0
%s6oE+s6ninqs3/<n`>7Qp1"eU*O*H=^&7MpJ,d-1s7Tf,If/lj5C<G0%j1f8]ANW,^\td2rtW<Hhsh4KJX@1.F^AsfmIFG(0$2"E
%LaSP'`2BkRE"dloN+[r4lFq^EPhMC$X6I4bo("Y%=[Wpsq(JF@m\+#*I]!X?)Ksq*5lN^)[6Hi^7sLUAO&WpH;B>+..O;9d#Yo5B
%P+`#_<fhipDf""\dG(.T&13,WB2]@]\dXR!AIp&##E%,VFE2fN4h6NB&F9,Sj]aH4KpRD1/RU7U4I!FO^02^KUo/n&k.?pe0ekjf
%E`G[X't>[=qnS=p=R_L<e?Zt*Y9[Jd2iH#9l9=*&40')(e?94LAYmt*ld".*NIqq%Ud\r6&EL)cU#2q"`Stl@7BLG20)eHK5T!6h
%Ed-VYmA"HCE;4_m0j>^AmIae?`B'EFP-=r(ka'Q]=sA2-#;O;]&B'nBO@*-i1<XdG7td%m5D0+lEM\`H=XE`1MDX8jX(3*kZI;\A
%aR$,I*^*f_WF_8$Og]mLdHHV>#YmVSC_:jsg&,!-`?\%=+pZ+ddU:#:*@Jar[$\Wo=Bc4L3U=oAX-V*F+bs5]Mn''spZY*)=ZD14
%/>7,#PUTN3Y:hl^6Ik(A6q7\Uc3BAQ#Wbm8VN!\VP1`Z(6#(R'+apR,TgH"jH50<6B[AK].CDSs8e,>!"bA"hBGi3Z*Lt'i1#1F2
%;-p-6epq<-l@LoM*?nK73*4ZfBN&=7[]q%.C%7?hK]^$G/l8L>\@NuJ5$p9:.6'r?$GftTC+GVZ%DL@@Y6]"Q/,nA)bfk>mVg@d:
%1$s_JB:[u7`"%nMfkILibN1-83@(NoHu<4ZFs(Ig17WW4;T)'ig=K:QnuP]8Y)&TUP&EKb742F5#iULiP"[6iI/bIP1;Q.;pm)?A
%1tTk0e;AG%^jIH+Pe+`jOUBn:S\__*/))r^c]0p:(9rDiMHI:XeFa5b#Ke4_+N?QTK;I(D%@?\aQoh-caUTO2f`9hB3+LIP/)$u7
%c.@_Ajpi*XaIT6q>o?qqM5-(l=%`W'jXUBdMY(0?_/MKbehhrFAhXBuafXUs8h3E$BCVcF?Fjf3V4Zo0o=^FE)q1SJ$IYN=[Ni8a
%gZphr/%)<hSI@4VTMZ;H$M(Op4JWWsR't[-6KjuLE#>=#QBQVIX^Sc=@s5C?2=8)R29M#,kEXW6S,Fk+*h=_M3?.j:aYM=PO_*>E
%1FaoqfR!!`E5bE&U@qpFlBI&"2hb93DH1MVhn/&SBuU5EP@o/Jj=MY(g0Pc2L2]D.Z"W4C@%F7Kb5.0*qiAOa;W7Eta]H:N&EI4C
%TM]eb&`>(frogcia@,Oq;N%3l&btAuJTl/<nfo)>=[q<c3Uk?7pdG\j1C)5Z[0RO.#gXKD71R0j#L>&;"C[FFnB=1#j<-R+nGH1B
%@$-*:bX#Lp+?jl9r/sM\(HI;t*5k8Ui\Lhc01c:hgSJp3&KFJL)%di?#C/][5>"(jkt@It,:k$0cNqfb"R-uDoVE>>+p[P("1Q@&
%4.[%cF5RfoE6fN671S*/#L>%dHZFT/jKe!kq:Ut\U*o,H:X7:X>S]I_5C7ESo]3[QanaVRbG$BIB2;9\St+Cq3Bqk2=nLeQm)`th
%POl@5k@[RCMk6H24ZP*?EaJM$r9VO:d?F1.-`9C/IRLE]6$hZ9/TQrE3I$!E,=m_4Uh:1c+p[A#KBJS)"H+7icQ&I5*1Y=p4MR\E
%?.O8\(eqsuD&f=Mc^KJG#"njA(epn]B`quZ6$Ypr((ldD"OAa/#g+.'FZ^kXg`1nCa@9!l&R:56>gFBpM]?!J*'D".QuG_%17+@6
%qLi@qlApsN_RW1`VhnU\ko%=-"9$V%:H6Z+(--?[*4SEIh!p>2SHH@BJU?Op/TTd@3I$#;1#^ajr%eS,OTYX-_=L<\$0N)?1C&Ak
%"96T]o1P,Na$pW33=(N_KP(dd?[>C*[g8Qc#`B[UB+CM?H;$:VK)!PU>i["kF7B+UA&>cFnB=1'j<-X-nGL^E_Qa]KB+E?6#O.Y/
%kEd5'c7OW\%alO+l'[1eQQ?g#NSo3Hi*>@$I-0A_-&phfjPYFJi*>@$I-0A_V&$lk#Pjd?]Z<Bfk2?%]NF4JPL?Fd=(/ngi:79Rt
%1kN]2)4jc==A5.A3FtrmHL1qGlUuumjek?Cp@g4)rn5W`_#42D&-)1U+27^9jo>.c?iS/b?9Wc2c#<#/%.X[eLQ/99[X<cpdY"jq
%5ubC=mOG&T1^V1"Pf.PY-(a`p</<@PIcGkqP.\YdUFiuLTcuZ(q8>k+#G?sL!^)Kp!=T\8jQ3Ze%5G[]i3-(40U"BXQ!'&"s1m/d
%K"Z!k.M;4T.1?(e;AR`CPYSWQ$8aiTO?Qca"c\0\"\S@`(Nq%+>Wo0u`,Rb^bS'@j2$uMINjg/\f`ciDE%K5;W=aYh:'W"48Es-n
%QM[G/j94or\*NJDBE,5Z[@ZkU'8OV1&d=ZdHnZa>cjm_I8[.(2_tu]XNN5\M%F(][K\Q`u6\jD,"(-AGp1mt!Yqg,s$]I_nq2Wes
%1<%uoKPfrm^Zud'+.KS4rqe>;^,@oos,8T'ol#?Om5P(>YCHRj5Q?)t=?ldL5PglLr5\h^F?_e_@l8]*iL^m;mRm9(*7]eg_FaJA
%9hh.iq$J(%-1U2J86QL#$GWX<#X1+SEBmGJ'Ir&m,Mk&X8],!j#5c<pKu`A2AE+\Y]dGLB]HB8BB4K5j3RG46ZDGt8S@XRnQ8Ojk
%&7Al`d]G?patmQ>X782uocL'ZkRs@/g+8AgrJ-cR23[EK?+Q@l=*k"R[,=TMOc;B9hf!tm7YebYCo>VGDnL=jJ)d'p][3\Bl?2Gb
%Zm$e_dc$S.Nf[l6BG-6j:og#S6hGh&.cYS>dWjNF,:\5X0UEcOqn\Di-.)RoB4H=,b3p,e4N?$I-j%HhQP&#rHgR8*4OBF]SdC/Y
%0Rt),lWqL&mq("U<9'rm7,d#iTBB-%XnN7s"A9rEp\6/=(gt0@)lEsW@HWTF]r,8,2*Wo8CnEMHM>+0E'(iiBc%@FijRq=CZB`41
%ZFV7W/9Vq8!(!n_[]L$Dc:9+R3;q7%1:gu7p`rK?1g3']Hmb]?l(fA#I;N`_UU)I<oh@k1*YPQPXi,5i,9B\mGp2l2A!_^T5,Oc*
%_+m(a:XL\b(&9rm'L6HD\GR8A0pe?"$K,O%-eOtVSY[7BC"1c.gXn9Jj?8q0_C9@s:aNNRK1onVR0o4dnHrQ=r"'[;RfE(A,FLkU
%Wj7p4WEH8H5MpC/3R%Tr5XJP]>\s4@Vkd#0T`i8@^9@).[drX10]e9RWq!G[Y1r?T#0'kF1ruK,-r:s=$7N,#nut<tE1Cl$7Up6&
%q8fNbYhd.O\-J?m9_B&AQ,KnR*73V<INmg*$#rS+96a`sb@6N6)!Z4D2K60_VO@P9X&7e#-q6[`qe43IF(W125lV17e>5(R5M;Xo
%F"[3+fo8,p$QRIT5)>S>C#;=XKI1*O!/7U<WJ"3n(-VrT)c@Bn_/ps1(I@`a0-SFn6I[$8LDe\A6kU-k9t,@JW1Xtj]Rl$jXA;Zf
%[*$uMPt.XA2&%=PM-(9fC!*MT3h.u5X-@PXh<fDPrPCf\;]R*G+D$F$"WIo*D/XUE88,B&BV0bYBd"bYTK*9*eN5)C,:r>BM9@W"
%X0,Z]6l%$]kbAPfOQ=AARSl3.d52dZ9m8`k8-.Hd]R8dm=^,D1MR?sI.#PT(aZ;S@!F%B1C<H-V,LT?^+Ndl8f:rO`UXZk"mDmTJ
%!n.V],LX))Ti_PnH,pKL_o;c\Uc+YM,:PMUHEBHl*FD?&3XZm$QKk/Cs$LQcX"?G6Y%f-MKcm3^;2FdLMEotKp7L<k**mZ5CbQNX
%UJ&68ZMaN]>0C8(p/k1:g4pbj\7KgR8Kg8FhR#C?.:R(2\J5hRJ)J6j!^jIM_35BNKRdf:fT18N+n(Vf*`<,c/co3+RW$,[8Q08#
%h7d_0TB^63\l2Nu)k@Ku2#nEaP!B$*Mb$OKmdf>A$DtbiJpk3(p4in0QppVO+ga43\P74u,qjYda6Kf=J6BMHmh3M2jGb8T/<%p"
%H*(MirbpkFrSlRMJ,S=bhn8mQmsb5[^]3HNhnRZPbMU!\L"ApNO??hVSugLh_p_%>7@_YLpug9/qP1gIJ7@$rN`X\s9)oI;b2gFp
%!Pf&FMYR&3icb*Cq.2-l&E:MfWH0Ha"8jr>6[j`c.N\K1"-Okob-,U7nH^0R_G_l0;s$&ZW`4R<HG\>#lP_5/R_g9r((,:Oq@&[C
%`g*A[6_1=rX>XmMnI\g]0RoRDJbb';nMM.c'-T(Ik\kjkK<b>rF0Gp*%Njes9-0FKr?mn)atSh8qe*#1Yj)2a]p_9:rO)':VWGr"
%oM,<lr`k4L."JA,*#>JS:@(djhb.rX"]uNE=<lW/VQ"C@8*t39@seYf0O1uFGe:nG3HS^N5:k&Nh"Y-@DXe4E-P4jW+aTW;3PWa)
%,^1QfhL(F(Um!069uTdSn()nCR5`Qr1qJR>.(hjHF,KhT^qr5u;l(+",O4%8nO#>G@OD!8L3+r*Y4_u2rPJl(4WAHkJ+*p!B0AP\
%9+XV>U`QJ+6S;+Hr6ibffi1M<:dU:5$Po3'q#nfRa7?`X5epQF`,K1s(Wq?M'cTnfYQ?*,e&NYFn%(jH>=B('@6e#k4(?DW3Nd2n
%P+502*#Jhqg-S*^^gd+-!":-HJF\It5sl:Y#,DO:=C#1C,:,q<!MV2:@TaJ:\l;AA@WF>\Va<o]:KWDun=nKg<qo&9K2^d3#UH+"
%G^6lsiuSVp%kYI+\Z!1U%:`"YWh/[mJG<BO,+tm1rX8#_C'WMQ)7HT-KTlq&6leh0E.ufA#ddVF)IOB!*B)3SL"GcLhK#AM"P8A9
%51($G$WQXW%@*Mm7H3lubV"@IL6\DQ0@a;88uLfNA^)%L^Ob]M8D'75YKU&S.XngG]L$^_<<;:A6+i-[=ms(Di5nt.1R3ANq_;cK
%qEDko'I6tGk:Ef'+jkinPZeFmhM1npWj:Un=e1E+$N3g`J#6GL3eUdl6$YX-5NP:_W7\G/IY;//E9mk?r4$uZ*c];G)2YI:(!+@?
%s5AP'?fh!l+glQ;+BK9g)K8_353FQ2m6kOZGe9dC]d.RpE+G_nDU._NO7/s?cM/f%3XO/EKi#n&MIdLXc`m?=U$F:q=:Tp-0^>>[
%MX`^.=_XTpipBWJD[FF\s0+,YF;s($2^B@2:jW9@k=.Alr8*_S,?=#YmXql9`Uu&&NU5(eWY5gdh+FHC^<J\:F0uP%fO7^TOtJ8"
%(8CaNHp_WqgZO<5.ug_*"SU0$Cs;_RZHJ-K[3[5npa'(m_RE[icDV&0o.C3TiADDSJ]g.OpsD0W;Y7X;#nknP@'qGt@XqUS:SBhf
%.S62@WHR:?kK.&&k7`\G8U)1VD")NH@@^KZ:Vb?$Y]YC.5R<YfGWlN"3osXsB'--n`1N,XRe6*VoOU"t??hu=Z_MRKq)`imPi0/L
%fM_4P;=ppo>JPJ?#[V\B5NLfifQIKpct[hAjj.0sTLr&4W)fh-R"@_4TIoo;K"f=C!cJ99@oRD5n3L#ng>#\!8K'8g%kpmQ>S:<<
%/$ELO<;3r_Ra][2#M1_U>:7(ua9*at(g32I6DP1.D'FO,!)ZM:0b_7<GXWFt%0_6HZ_EA'VlX<TQEU?m*qD[)\-ULim.>rl<Q51`
%enKb!5ZUl#7_ig-Pa_nJ-5l:$'E!e;h\_opAN.bP8!"cW=[>qB@K^Sr8_D*3="()[1f#^)&tDdqpbjD<>H(iK5H<pC?<o*W$V81s
%&Hh6+6,q``H?\Rn#d8W.*%8\_>`]\RUW\6A^"81(^f>b\,Q'6AmM"=;L=G7c@>tU<+dVBQF&HYe7,&F,G"Z0AfuR=restDXa)SpD
%'g7i4%<=XX#i&Bi<p4'B'crVM8JB_`jVWO."3]6o2<<?ci#\^]8W-$?+NG!G/1o2kIVq\$g*-1NNN`"K/9:WTeMU3dGFbmBQ&3iA
%Y/[M0S55_M>ZS.Ad6pdc$BM(=f5OoC4VH9jQ:6p'Fn<KP]X]RJgZQ.Yb@68ZH/i[''8tY[Bhj0,b5]7*)<=cVOPQO"Y%td@;.K<C
%bTQ+g0H9R"A697n^IGIh+BX\K5KDH#F]:#hr`7<opemDmjQ-BE6tFV/"BrlIJgHK,>Ht@%i"_:7IX>#h<$BFnO/'OcUTJ/C,8V__
%[`&Ua>5)N%:IqI2I^(Lm@j\*+K>N>Ib410Bn]#MiGK<5;`To*GO.Yf/oqBMEM,Ic6aJFM(j?]P5:=(-"7aG;5*4#]sYFpVF\G>/0
%E5>U'C"e]Jq2@`WO0\9tS8nt'cDbsb\hPjYG'm[-6eHXk'g7E?caN>V>9\;03^Au,lGE=Ms-p3,s7tQ$oBY9c[Q^>Bgu;3U&m>g:
%.XY?uYG0/D]SX#kTZ]&^g_$9Cl>>c7p9o:gFiaD"(SQ@J-+Y\d%N$d\F8p69HSlRDMH:m;Z_4aA!RlbaPoJ$^[8:C#F6RAEQW)K<
%#g%BXXl:?c@aO4IeuRIlf+;2Q1d?J+,=)bud$XBTjTY(@c_.r.M"NL+%@,GGdX,\tb-N'P]K4@na>GR@*u.,tS51KC,Tu-KVN57\
%oGp'r"W/HDPT;+pFQ2J@qT!n8!s,T@g%C0_J;mZ:!405eYFK@ZVNQ%HYp8P6%M*#H10!2W]U*V+:C2#T"']j%V]9e`JFSOmZnsX$
%$fD4%LNEh21qd<S%Hu3dltg6j=1tDYOF:X[P_r=`k8tWS>jOL\,:&oDDY7scV3ZD*EO&#X@[f&.3Lk_p7k=2;2Q#.%p:0/06AN65
%RW&`%A8&QeYTIjbI0_d;(2n%aZ!R_`QL61i@WVlZ$F.s<P65Q,Vnje:Kl14!Zju$@Wb*%4h7uBH&u_:RTNjFnLWue'[91Q!%?\]#
%.'0$al.8I/oJ]3Srga0DpK$j2;bN5^1_Xqmed.b<6]X#V\Rjb\6o-@7lJ^0BahnO>O"(VA@bjWHG375*5ZVDW+U9%*b:&s8GX?0I
%62Z^#0K#0bTBneG=Xgd*E`5__1jUHjiqV+sB;%m]X?UYa=\B^"E*0SgNfmBDDQl6C2%0(Wg2HBG:'SGL&qd6"2H@U:'.4k<f`G%K
%m@=>Gb2`hm%*6]#?TKf^0Yj4sqGE*):8+TB1iZtVLP#>IfaPuLEqoi6jYS'U:US/8[Acs0^<O&eT5/R2+pc)\a&IJi4o83*ku8U-
%T5*E0@uXL<TQ!q=gY,:-57;4)f3W?$Hf_uaP)S<^R$`K@TaP+O@!1^dgp'?(*6V0G$9L;Ojn%`41Q=rjVus7a\kO49[Cmh(<mOM(
%ca%F*)pgO8Ce%_Z@&-88e1Z_W"bVGu1iAtmRKf%o;^N?O'Vjl35V9!DIg9m*gm=)*%B2e>Y[,42!JZ'p\Id-;SVad(gsYrXp"ta&
%oWQNMrA/7`-%3Es;uG&K.2P:'G;YptTj"&U^i2.i,UQ?G[#;G,U"S&m=pXLTY".4l/JmrG3IZe=k"C_DgZO<%U)d]=hY::#`11$n
%eXJrq+d%58*MOq9XfI;-8m38h>kf8[QGjCg\H+Qp_h5+)U/]RHcjT@B6_']^`nT[8ABLX)4aH('4VMmSIrJoo-eQ8PVO!!Y8E8\$
%B"Bt`j5ITC8j*,?kLP!kE2hC(Fi`*=OE3:F+eK24^<tu;Qe-Qe\brQ;'3Hh5^7s\s1reqh-IL:%gYIR_>#+En3opX>S'&r:l7<__
%B=eSjQ'-4B[nkePUOaG+SV^>m*4mlpqRrZc?e,W$DOamU]ACk0H+c.9ecO,Z7"Vfh,hY.Bii/-qS:l>_$QL:,1gE.&&:<qfM$OU;
%HOl58O0eHl>ZmEB3ZOEGk.nA*C5-%m'&;GX3AXWkr?A4V"nP*s:4jrW;amgG1K6n6-Z`NaGqi@8ndq/?W7<(d#tGghgTS"WGMfLP
%hAqMm(9'kGYi6'qmH[:$4U_'D]SudP:@Wt,KL^62ULK/fQONe2RXd1C%&*<ALN4r>?V$#HM7OE6.o&i3@T.j--0Z:^MN$)Hdu/Xj
%G;b^V(N<OlB]'3]OW?[C@%sMN+78Mh6fFeZ4M->L2gd:p.A[bgd(B(OG4$"6<&5V!s5eF:NrfWe?0Rkg83rMco0e1<]Tq8W`*`3>
%%JWP0fV]WgIh4J`[dBs_14dbd.FC0ajuD#h;c9tPD3#116+n>MCM1SW*G6"HKPq<VHPaA)&Q^]Y5^9hrag+[Q"P8]m"RYQ+lbbBU
%FtkA!<ktX=[e1o,B./Ve#CTFtW$e-F&?PQCD52Ij8S?S1*FR%d$l[X:.-h8"]$@^Q%R)nkaPo0='*c^?"Z6P-:.aXt&3dbT]H2XE
%QZUT.,7D#]Q\=!XJ(2d<hN<3*$T-WB\Y9f7;T,1@G0FEQeQ#.LNXdM7,<VdU=aW<bBI_gU8_E_s>-P"eLMOZ!UjI-cNY_I%:N]r;
%?aT"81E*s9_a=YK;nSIG(u"nGHWn38q8P1I#:=8\d1,o9V`BLi&Hfq:T1#TfKi9Q/1p.S&&.Yc0R)NBkfg#*D69jpiRSsgqfl6$D
%<ch7XJ!%@jGf^SVH)3GtIEZu:Ig8ss"ZZfWTgYK7j*p9,2&8i7Nnpj]Jq-eq6bX5-ErpO@W6Z3sDb&BB)E`]D7;oBokRPqX\0ljJ
%K&aWPRi8GmI[3_n:]gU4]mpF8L\0T8,IZbaG]'];:=T"Z_^6R"`Ntfhj2'4t\]#MkP:-;t/pK&>7A8,O!sH3LK(Cq8ANP0^PE\Rq
%B?g"+O3RXQP=k2g>Z>Vd1>'r4;erhTi#aiKB/7,_,&[YhR%lk#eOs;VB_Wt"%8fb.'R+E-<mo`gOOENOFDT7Oj8M%`BtOj9<%P_W
%]Z&@G7G'9Wop!JN,jhV#_#?]bNV9nC^OMiEe(1Z"(coJ942mtRWj)CO?H*I7-coE"Q-3"/V"\nhUgM%0E!j)%Ue08tLZ8g=+^U^$
%nO21sB-\/Z:g<e9f6Se+gck,!1f6Q+\9_$#\sfWQH42rt(P`#9ftnRUbV/%V^4)&:k8oJ#Aelh1j>q_qglH5W\bS+XfV03t9A]GI
%cbu@.[k-\(XXRM.7!b^#Q]*75jA>6,;5pOu2`9#PB9GnZX(%XA1Gj*M7+=K9FXU,@.<rB$Wi)\CaXW8>rA)Wir=u_UU\'+_T1.bo
%]gYk^F4hP[)@Q9K<`1TJn"bb=ogQn!=361n.6aK700I`*<Dlb&PFsAd[uQ&-In9f'c`O4ZHAg*na)phEH-5FdYKgacGgWedWUsN>
%Y8l0mLNlX?jSh0MnF0Ln[V$n`G.jT`\69eXQRVsNf?'ZZAO43tf=a`B_M8OSGag.2_4-ng>d40g^iq$>n6Z'U>IB2KZTOQ"EcXP`
%J1r)cjkD%4?a2i1rD5XSiZ9>BplN#(d'-5Ef4FYs;-(.a?Bs7".=P.k&+PfLZN7*_S66]Nk-qCd@#F<=m`"oKk:a,E%=V<j_,&T#
%r)C?sZIq)bH4:@en_uf=b.0W9DdHI_Su]?EeQ\?iHd1)fc..0/l7MRM_u(&NnX9o=*l:XWq$g9qi^q(`HKT>J"EQ],C#qf^&u(nq
%Y(iSu`a-,IfI4;b]!=nRTmMZ*AcEo\/9",05<#AR0+20dGS>N401J1hf`?$?@$>^0W!VfT1mr-OS+HMi?!$#6)#L$<;D;G$24BF#
%MWm#+L3.ni8HNr`R&22m-b<X.k<-eggI0I8/JraV5(6%c'5*=(3?sr:LY<D$51d+qkBFVFoGmA'[Pi.2/METNY+pHH@I]AY>:\CT
%kUIY=">;80rEO2^a"p^Fl)Nq;=2+Y&C3/V6>aK9>7VrGOTBk0toD<)0$Fu>DcZ,>l.H*/p8(UsP)fCC@a!IKi.4t;+!o6179TAKt
%NN\D4p4k]?@f"C7.@k%'D(8eL6ot`cg3Z;iOre&2A&@b'Djo,5?p8du7W,h!MT%O#e$e`eV>Tj\\8%@Q2;r_<0I,F#OdQ53_]mrc
%:^![M=ldXc[^C"cs7Z-ZgJ%&VZ)nG<l*p[:A&g(9CDA!4PUn#kQ4ZmLeHf+R$TUG9#ZLa/#`n?tB90:qp@\Dh59cW4gEPue:F:jr
%(Xm)>fS_SS*0/o'PJd4.Et5BR%W-kGLY";:H'uS9,<7mH15G$BLM'lRnFWb$T(+$c4I:280'i"3f&=0@_afBT24_okR[:/K>di(%
%fh0SO(?r-PjCP)HQ]:-42O\93b8dBj%aS\rdkZ^MGNXu.QUQ3Q4+:FXI)#%C+7"]-fh1kAQ0)X.c-'.6O775<HSM,PC/cDYo;A/)
%i[.2/KVsC*\RP6mQMC1.fDBK=5\XPkhpp/lK<I:%??AsT_Cf8Wd/;Ha3.4jQbf_!gAIe;eLO#<*q7A5qAIcm=LLlmkZHV;*h:;T'
%?bdMgf4"[b*0']%l4LJ^^>=<3YEc-5hedKQQ4^!*KR"GD>"(E#GA8rm_S"*$?KNppF#\YnC,EC*QT<:5*9LfBkO6]=R$Ml>0'b3n
%lHk5r*N"nJiNhLUA]K#<Npi8Sru'cNLO#<*]Zaejk&C<;RgAjtGZ0BsJ&Ig;9Kb^\l>Z[PR6$kQgZgID,>?8do.n1iMK&R_e7ecc
%j83E.pWJTcQ6"k4XQ01ha7mc;n!>'P/N`qV_D"ks)GM231lWiB*1B?,IVTkHr8#q;_D9!8N%cn09WJH^n'8$l/R.JMCo(jr8oG;j
%/;Ir-_mIWr>37LjF#\[D3?PiFRL`\1c%l8,YP6qWk!T%#gYe%r%J/M;V`FA,h1'bj]O;+2&)R#hpDhlm8#gEZ,DS0DPJa]Ki?Q4F
%b[FZ:YUjitQ8tJM3u@-r&VW.RX!1h$U@9.6<MU^P1hG?Rb-KEZAYU]t7e;G?/9=pZ3@r>nQ=UQhmnQ;t/R.JICo,ahQ'Pu3]ft">
%Y@T5tQEBd_[aMHtV:Wakl*Y?(f<UZJb>qf4Xn34a3E!.d@Y"840/<<A?gka8/MZU1+*G*[(>#ir>g%#)/\AtX_IX5#15BG/_m7MF
%r7u),5F+,)Z(1?FeVrt"jc"\:U^h;TRcXEeWGa"<Fgt]A+!2BSmL_'mR$ThWb8egbSbIo?IX$dT/9=pZ3Lmk]qRO<<aD([P+7tcs
%/H2.`-tUXKbW@lH;%^r:`W[*/qVW!tZlaES+e2+?@.ib-WA&.R:3qbq;KP4?kp=0K(QrQ'hl5:O^e%G:P#uk+kFLgcEaFOR$]=>!
%+L&Y(lQnUb&Z89DlTgdjYZq^7Uu:AOkI*ZSG6mA":&M;/\!CA-@Tcec\jh:T#p7[9M>@g+o#atM2RcFLlQB65HUQEd9U;*'kd9ha
%<,6tMO+W`?/M/(O$I>%8]m@DOc"L,\I3@!80AGtq,/teSC'[@!.cQHp[Wd*p!T.`;P^\f_LZQUq70#=^fUf>*_SLHKWI'B1N)B#>
%#,Cg`8MUb/U;OUY!0/3>Lhm`HEY3\`Vom^?e6*18AijuPUlC\Ic7&?XF;UiLM8hhh&bk!F;:NKX'd<Yj8rQ.%,fZ<d4c#G#-3CB(
%E8d3'CbQFhYIAs+Ej:Il8bqa%Ti@gmLoI6\c]tmEOMA\m%H#,0fGV`1K.7"SM6c;5VVJN?U=FfQ94oVT3`uLuUDL7=\KVZ[Gc,^D
%%&kLS5NCuHOmWKJW'S&Qc/P<Makp#XV!B=PpBE(:FLDqW+\+=j,Usd.aMBnWgSLYod`e;bnVd#?]_r%&PY:e%pHtale.8/A6G'\C
%KW"c.J4`no`?p?I4Ss=h^kb=ML-ZP6,DA&B<K5Uqq89O,rS_bT51)p*Qg]n2-K:"?8u4ur/tk+P%fhpI82;S!+nV,[HoPG4&0;RH
%Gkq'NaHn>C_L<`1H/D?@-Z3e[k=[?]_,ZRUjY2\WT*sGNnSp9+lOrOkl/Z@H;]i[(00*-;bpE9TcdQXh9%OS<:]#-FYC0d7o^!BK
%15F?jprsgUMKc3p+%f$?JA>lW(r=a&*_jHoeR9iJ6GT4Fd=GL$R_V$Jpo!4J!pD4mPQ7Pj91O*[`iH(@#f?"jSmeSUrL3T[C+7/4
%C:23-r<^!7"!emlTlJOl&p-'971?"&H`j,VRohHU&0[hl[<+h\'dR*d$PA/TIaiA]dB"186cc1@;sW5<@9k'gF=Q:bE2D<9FYRq=
%]U-&k_X)IBcF0cU(7nc>^gI^,GRcAY+)$hGn8m$!fR)S1KWgaQEn:U;VCs$o)P\L4<PakhI;h$]!#(h!1-UEgY,s7E3:X'1oS'4j
%NHK5Lp+i$snJpk@=lf0->Sde&1:VJRgqdqVG8Sq6@(X5E&G$gt@T=j'$o%+X$kMW]XK(6T-$T=I70JRm4d#kF-NB04,Bk(aj5#8G
%R:r3;jNlXs"=CQ\QS!XPp[41iO#S?@%F*T)/*\2Pk3Ph)-4ZVU3;n(SISkM_j4g6\,@$cnA<d61O1N,`0927Q9r_b*9?`bBi`LY3
%gMo1Z^$_L3P/N6>6OR:Bf1h%rR(2`<2V'2ulptI_iQ+FegbZ.k>BbXIQEK_p<VP*="Lb^;KQbHUL'JlI/$Gt*^N(X/3ru/s.1WY6
%;=QUa:X\aCp0P>]0HO-FH;]U%it<tsq4[N_Bh&!1+k_*qg(OaEhL&n(NB+bn:@[1epu74.!CnrbWb<m)YEq+5YgTX1\k9H:n7D`7
%=e:Qf!5bA-;Mh4N$C&<l&)jWk1YFrNUg%PT[3lOHr-[A,1$A:hg*n52iia1W?r#$$*8UQuaf*FD:tR0:=qouY%?cm9TmA/n94$mD
%H5:O!iH2nkh]00u?6'gQq*7OZUF.%>an);ei$C10],66H=@.lJpOkRce\Om#Xck=Il0M4(aTOs=4]5/rIG6MDj\&4G[/G`D4l7oV
%D.!#_:7R]A,3`4p6*(W9!I-L/7khG3F@@.sL#"P\'Mcn)+1c3E,LJkTaVeL;`%dN/p.,(/M9VN(Q<9ih5mb7q`S5-+*B%h%IYa=s
%%jApCOfZ^7kOrCol@_l@=Q6F[m>!t3,"`GX,JN32.B(;(mLiQUK4!o^SmIcNU^h@d;O8Sps3O[!E28:^Q<3W4'T,se05_6oRXk<K
%8;GA9-$<cq]V*eY-NGi"_PS,p)UgkS^VPp_\<r$aKN6#_9CnrZkh;*^<M'WNH/O&O\PfTb"Y4p[%mpXO@07GX$sS*3F$2!hWnB&R
%TWlO\ik?<Z9mPEJBo,>I6fl66?6;F>!R)!N,ha2KfA;g$>S!Zj53)o/H?;.M0N8")m54>FJ9?XGdfH$ei^=%:JQ"Esm&4ZaLS=,)
%iXLrHMW1m<^45DYq8s.fXZ/CtP]:<Ol'M'c!`LSL=/>O(JjtdkGQuiAoRB=$>OXmS8icVmGFYh<SZ^3,"-=.c"EQR<Z[0`p`?eCr
%//TcT5,T1)[SADua_bp/L/I)3ja=^8gg3d+Nb1St?fG#L&l6V=V589!ZT[6*;,Jb6\2>21.b`d4\8UUre!dT"l;EPIXc$2UbPV'D
%^@hZ0gQB(P\fEeHT:7Y6=1Z-E*f%mOh:F)h1ZFFY//WW+IiA"QY0mua;>jB%aq/W\Q^N:*Y@I;P"``@3<T8hAg3lr9PK1VWW`'Uk
%8o8&N3T0TQROknn)9KgD=.)<E=_L#O)^8jWhfmDN]bKVWIJk]kjKnE)D+W.b[;3HVmWZ7"m)\]\[gneWA9;W/F"\mOF/\q97T?cP
%]Gm=PER$*b7rX]=EDg:9_X$!4'Z?(%rJOYD?hD:XT@+po=NhjeD+_(ubL\;b6RZubWpnFfPCSR<)9mkLpI!THBJsfVIU-gjT7cos
%;>!r>?AP+4?gh>mFnX`-JEN%lS[,&(.TFjpcfM@b&)k'!oA;`E,ZE2^F`Q:58Bk<Yq>#WS+Pa(%efTbR(Bl3u>b,0UHo)Sd=ZC\i
%%A&bSI.RX$-SOE79A&<#7A7oc%]1=R;p]>!M*S^+2eMNTG]VdY'SV7[&D1:HUc9EY_-i^lFhp,<4eH/839"N%f_,\<:?*r@ZlJah
%$]doiSV;0Kn:ft^3`CQ"cY2mc\n&"ZK9JKsEC^HApE`I07<q;)dCRPA$eH=7+!#8;3@Gtg3/2Q+Y.kGu4PjY_Qa2[7cF'=^;i'p!
%gh@.FY+[MSCaI?qe3d)X`;Ulg.;[Ze;K6`?%29ZQEhLL1$Z/FiDD`*R@D&PQ>Z/R^$&fNj/`Te.NBsS(9KJqN0IjRPV!#>CPhQMm
%C['7^Or)_GKrm[:FeB)J!6[f9O?cF)>XR%AX^eC3<BW_p0e?:eY\ube"nG#Qk8ZC7UIBdDI?="ka.M/\3)N/.HZ%f60504pDij%#
%l)b81APj_Nn:4AZQe[lo9j&Asc6BIr:NQS9mT"G6g&:["G];u]\/E)uKi$_JSF?jT"IY$t-'EEKWG\fI3?b(f>^mddg84`Sr[6H[
%7qUY8m4&D).e"[5+8Hb=HX*;:i.8SY3sd)7$UuO\@Dn-k"JQjqR)`5?"aAC05cT_F<e8TWUp'bM0NQ,BqtE-^/FrW>MqCk8F/T%2
%+>L\K\W0UZEkr.BLF1"r`8<o"`q%K68K>LLp:CS`")#&Mit)KVf"@1S_GZ:/RkH4dE+!UFQf=?5gcmgiF<Hg*;TJ%!JC=YHgKd1*
%K5=<*&4q82$<i?I&2Ji40H>)PYOL!2F@r;]^o7]KN,PP4hA+#W&RfLG?Z;]5%p1*c7D5Cs$JHF];-hlW)]KF-Y^@"aQ2\H?&Uc=(
%cOP8XY2.s*D'g\mp7\>+Td%Vr-S%Tsa>opE`EZtt1"=D*'L,/27!"]FqGftXVMdeM,ZkV_ILCq>o+\BOg>;.K';`W<HU8I66f@on
%ES$5(L/9k8JTFq&mj\WFfebgaXU*`id45OGk(oIm<1:V8fF3Z4>87;HXs-Lc*:7B(+&][TPJ#[kZ`Hf;2l8kW)OI5:]>FrXT$sUt
%]!IE?[6dJ)AO6gj6_qM3*EdnJNoR2riIhS.<SRb956Ka=J-g@`mNSf)IQ?GVRWqfapRc:el,/p^%]u>d*O-GKKR4cmNEcr?4AhE:
%=Ou?42PO=;TUQud)3J(k`"'4O)6$'XngZ-!Bip+KYH\,FLZO?"9/UN]>Sfm7g;i?'^>F.nr`/RKmdgH\I6$G5@Hm")rMuhppTL/0
%aQXo6jLPCNCKSTnXZMChenAHokmM>;_]nSmn?SEupUU?^XFCZik$L87].YCPWVM]-<tlbD?TihLcN,7flL`m:Za:VW"$XE1cN+.5
%8(*"4r7Y3hnEJhY%d:\WV>1Z.d^=.1;ZDt:.e#47e7-$,gi`A\ri)CcTA#qk5Q/@2qu&bXk5BM=qkc7rrr'-Z]_qDoIe2m_rkkr*
%QiCFjkiKkRIeNC56X/Arrg3)&pHee]:"M$_rn06frO:\^l=W>rIT9>DcbKM?Dh%AZ&b4=&_6L&9;>Z>Bh%GZrU('aUh&$"8<S@E%
%UW7"21A^omh,lK71AuclF@)[=@chB#OL>+B.<d2'8P[,iN&lAqA&)Y>(KOpugN$;N-\b^WrU_1@^Y2stl=ANn'<=u7l5VD2>W,_e
%A9E1BNJ]<D^D95R)4@:,`JiWc;[VZ<Tl2?f+M([E@U11J05t8:#R(H-kF!HXfWHs*o:2QT&A*&/T75$U[t<gY9-'?f608m+_BQ$f
%p4aNp"12O@.q2ZXWC9*5H!/]t8Bk(@&a-!T%c5Tb@+10qlRjfPg$N3cLnKM_%$bIYYqGW$llO*?&q&%0m`huYP2/@iAnlt7Eng+H
%ah_bp6TB'PMFYV?(*hVf2RMlda?Ju2H&`176tKIm?-OZ6h(7c,QPXl'\>k;RTf_2BPqG4J&r02gLQIuRA10MK4'X>R$7k^lFC.Ch
%`numC8jUX_(JubtOp@4o!>#ln-RTJ7npXQ^T=b>WP6D\KZ`7Z3=SoZp/V]VnT>i^,-98g`c!5-Ydj=.a.VXZ0JJP6`LHO-;j'+ud
%0t-Ko.TjHa(%\\$s4]G0<Fcll[&GqrhnCr1nZVS"l#TWJl7KQnL:ZSjimht>MOBAR0D0D&;9_q5\@bQa.OP"s.PKg\!-a.V?;-SX
%dRGD9Gl/*`()"+5m;#0HYo:$Hc?ud+@?K*\FOF&UQZKg$J\*mqWiDHF3S<SHIF\Sp&8X@K&\+/gcA`@n&`YZ-.^dBo1bYm"6QCFH
%gu2a4Z)'-R9q(l[9E$-)?ZmnZ%s?<Ob7.P96;Air)(q0:VICW7T@`."??i`o;bh<d$.lRdgO\CI&"SklWdt=(%sE2p$(GD6_K:1N
%K*X*"R%?>K@6fO7!W5r,eH!R"S.B-#a3=a#i4P>,BtKBOr#"]3K*j/"i3cV2pu-Q>?3TRh)j;?09lr#'+V4=)0[?$&f\B5k`&s`B
%l#`FB"PDC&N2d_HYX1!G)aJGf%nd._Y]R,8/hPc=DB8#aPd"]Wr!\b$Kc>_/f?+o?)W6Sl(0qoOcd:!cH*l-j*X-QmJ\hN=N'1m@
%nkRp:nK=Q6L;35.NfBZ(@ed)1=ASXi=I^'/oeR:Wj)C%]:Pnl=U%U,CW'5E'i@:X6E='``F]W]o'iNs.&aS61FOc,N,r'jNZ!l%7
%h`._J$qk6]cR0DiSlc](;XVDP%crN`?8FP3\kp=('D$Bfg+0`;\PW2V;K4hf`fQ*0[,YgOb='g]J.&e1h+RKK$2^XqF_0l$LHW/j
%Jlf,d<lBDSXaq;&mcH)(NeO6pKgMR];O?7Lp0gC3R1dIhJ:>^5/Q09t:_a?e3%XH(/'ZYE8(s1GYc"U;,Pg^oF"[KmGDf=g'GS,(
%in\h'j,q8G\;E7N`7m\kkrt+gL(8p*A8<)%<kIRGrC_BsT1><hTkHU[@"/$4=(eW'p*h5G(ld/\2Eo\j^W>MHB%J;6ikJTQTG25O
%e8X:%o6+PN4;:]q?,JB9*bk6Wd4O`12,2LS3-&g,o#$^b1qJ1]8@B)@f[;[lf$ZeGnr(fZieOf7oYuRUJ`;fd2^83T7K(o%lUJ;c
%)-+Z7ZG5,a.48HYiaru35I_Jl9--4C4_dh'7=$,t=!M22o+"!s!bYK9\&ga`B2X9m^;Ql\-H_1'Iuab2p@t%81P8"aXLX>H[!"(]
%V[Y=D3``"qF'UiB2R2`S_?[[AWId=F_8b'J$_Z:Hk5l>j'1t<ACIuj^/MW.)@2I&*YAF<S^b5>9Pf2<]l+G]u_`3kiYU$K8AO4qI
%VZ$u2?P&f[cJ]<e2rW2LQ7+.iWA=78_TU>'CopHts!:\Vf;\`^koq*cc9>(cQ.ceSnLs9a2dV>5/F>ofp57KFilmm9MnGphCGAMa
%]Z#I]Z/_k5('sS!c].3^6fs<$Y2^XFV,^"g0mS=JQ_=E\eJ@+C'.sSn.m`V_lQ6&BcZjA!-/odejreXh"IJ;/2n5CQ3TmMAoJe7U
%E^RX<?3a590g)\4_<Y0g"5""4R669q(.7'na;KTde=F,s&\lFm#\Le&4uH_=*;->QgFdq>pj4_[C?&*(")iM)Q0>_Q&&prGe<4??
%GoI"p#<)g*cZV;WR3$;@oq(r/q(>C``4Z9nV7EA9mWti,,4**4:uCAIileGk*j:'IjZ&6[NDp."GNpYoW45pJ=Rt49MNu:L'/JA9
%?4$g2]Z"tpQc_`%G.G>T\6H4Mn$d<]lfce3YisR#19m?dYUarAO8Gl>2H6o(:O4;X&BiVl<9q$(iPP0s]M1qEYDJY*rKp[_,a1PS
%iH?jIqf-Ud`lB(OZCjHFT.knL*G,5nR5QaM?EAREnt#9`BlP@J4I=#E9J,F+/>sVTrgD&HG.fb_/uqfNOWSl_cTN9*N2/B32\h$r
%PigTP*HIR6/np8PI]2YF4+q:_-46dUSg)=E!m;c?*K7p+/%=k4Pt%g?UKthc$sQPJ42R"X)e1o(Jd'/.oF2H.3`I1K'mM;@1?m1b
%4R/;5F10EK4!!(Ro22":JVX-V5VLI*f>0-S-=3qfZjue-?Ap%t$trA`j.YKUIA$TOi02)^g'-:s".CFpI?t)`Tr/9@3-*H/lWRX(
%Th8)&A9X&W,NpPd:"?-[0[eTG$3j#1ZFh^W8^:he6X+T.P=rIM=/u[m6""S=FbTUIoKRF9cIpAkSF_sGmHe>j4t"m+V%1pVT"eMR
%h:g3)cu);sUDVsm;!s]aRij=GRS(UoJX02oY%tq5popJo%lE%L2odpP;GS)@meSV>7>r!med$#!CST"c%;M6D$4,XEQIidT@<RF;
%1dqeR.?@ME:%b'arHrP7YBTX`j9%Om?6"\p31e/F%,-Ps<<-U]Wc,(nNY$SB+5u;$_=WX'6abE%,a4,b.ZUEA!Rn#dh:'cE"th5U
%FkM#iD2T7,(<m*?$Yg@)3OoWLOVVIV[oFf!rA[p?-G_(c#%qS-,qj6mK#IfR5qms!QN>qNFU#Oq#Fb?GA"SCIhK,CLP)LSA1d,#j
%qe)6ol2*C\TCk#QY=iQ@#eW2F`"-maF(FMOfFH7NN)/6Y2rk,M,FPsn.J/JfI4#hp%i&qN$jSdi_13qi7;sh>Fha%kG&ECSkckTa
%2s\ZpCLW\c4Y2>59c@tUXf$Qg4#&?;50InE?m#,<.mT,5*?CKi\/"gQ8a:tPB3q4KkQIF""<@7@I-CbRY;QEJ4p,/?"qG,IQFq2E
%52-dAq\6]1K25)1UqZQa=Dl;:s7+WAl-$6ZqV4MC(=^8i>"=bfh8pAD77A"V$M/fua(*,5ZLMjQGWb/Lo'5aA-"@LYS'YMe,r*]t
%hKD6k1n9pTd[)Ca%Ru+3@;VfZjf\=;HtVhQn/bENH<$*P8NF`7:dob37e$+#UM,UlND^A/V(b+$T;&TrY6E?aljEHo/R_p)M/T#T
%oCuC6n:j&?RF\JeG:Ik:0%\NGjJFH-NI$.7B;:D*%^BOfD=p]@/@r!ZUeH^B1[;3IeAS%i'>`-H@]upV)N(Z7+_n=ZVg?d`q(o(,
%Ss4c[)BJp3P+h"L.cS*0o2GsaHs4L$I>GZT*,NF].@SE9P+mGljr4Y7i\^2rC7*@4A/(7#0",<`:\CMJoCmn#CepPEKq/tFFAL/Y
%n$hVZSGL_=B)gu2G-QjS`/,)t!Y:4XI!KD%=TBO99EH38IkS?ap%i(UJ8HEh#j"4d'a-`GKa(a>aa;j[(S9sV)hfOGJW*#:HT,8@
%aTHO/,X8\^OuEM2C#=G;"Y?Q#K0R_&s)J>4f0NmS(372hM%:!]Q,dA)#"(fNk,@H^W3?@FiGhnBcp]9t3/aAFii'Xcfm%lFkC`$G
%CM?s:j"7SR>GSU3)@IP!"hbbMX#!#b1:K,;l43!R\9<k`'KPqe2gbL9(H1k[C78c1f:c!@8U3pK[!?q:f1BId^7W/8]nf(/_buP^
%:T9V2g=;s$o!jV;M$'a[0AfN'Jl@fc!G(6m=+LUg6d9Gl6nol&EMqE/,PEs$@\?MNHT=)Z<eFI1CJVhO+c)cqBHED5J1$#V'`&\h
%nmW:c`&3dN4E8D:OFp0O"9cibUqKZa?4;3\7"Ml'^/_XjXFWa_T<O0<46)6`$qbbYJidXs#N:@R]Lq58OH8;7fK/(c';ph;!"U.A
%!KIF^djYN+G#K!&g"QSp9J9R_7DVH@?oors&&=V>$O@e:6X`cj$F_B^a?`+HEJ5NE?1;jJimfR%WO?nNneBS=d-#p*$W$g4aF!<Y
%$0,Go\9MEm:6#Cb;Y"ERM3l25,?9".`KNR,-T4LlGROpI@VDqXGpG!KFo'mt^m^Z]l#Phm(F$9M(EC??er85fBo.O6+%7r5JBLcR
%pdZX]el)akUVKW.::(D;Ib1Em#@ku02fY\H&tUT4HV\KC1EAp.EY%qnes@cb8gYSa2-!DU\Cs01]V;1OS)XMX*kf!,bQG0e:IkJC
%3;HC^r'W6$LVcsbCmRV^Hrka]E@Q@AGRc@uYf!(JcNO^52<29)#@Cee_HjJhYLQ'd&f&Hk4A7`07W:s07TNO;PE"U=61p!m\8+=A
%ZG0&;]+r)]jl#[dpfoJ_WJJ<F;9+7,.H`L[aNgi.(g#dlH;c!W_2q4f?ZkhcE_2F*Mp34;5NJUfJgg!a(uG.0"bHj)5R91Z:#)Hh
%M!-A#`>/7Do(=\\o5dZ<AO_-6SMc=-T-&QMD;/[2D=+`HlBWlUl`/T4N<%*^I=Z^cP\M#QS,'I2NR0LCei)6!+faR54='2GIQasE
%@E1i87*38Z<C#^B/R3cZ0aJ)<%Dun_j=\Z,U$@D6U,[Np,GPNfkLao:PpMR.;/(#]e\\/!8s"i4<LrnJ/`foCU]_QD'$gk\SREBV
%<oCWJqf!D-*,YX2.g1C"6J=)b!I!).]q7@J(Ge4'[G5(tIMP]4g-#'%%-"A#=PdOAi6"esJg<6W6OmhmQu3]e&9,_,>'IRi5ElcC
%'?%2Rr,gbPbb:k&_FH5s%B<Jk0=tQJGC')+5O;]uDq/t*>$-q%=r0g"`tQ=HPuQWAIcP5("sJaHm2OkqL/!h*NG?Df-o%Fe1+[PZ
%F?8l4!Sd2ucu4'`k^)jP:OHW%piV`&q+P-KB(k=4LSo6+Ck*`VN)!p`r"DK2>18Ts>Boi9@Is9=hWVP4!`gaWpUYmg!D[UIfQjOh
%j^14Af.?,le$13PFZb36bSG7ZB"Q(Lq#rs*&=WchkI2gX:)roaGRF@?-?,f)HXe:lffCD&\'*?l>drDu54RsN(]IRbQS3hK,kj6!
%IF0u`Ol#5(oIu^/"L6N;(9,H"UThXjpmZ[u-P3$+R,/kkM3AYC*aCqEKBjtBi:@rHI$9m5^'uTGfD5=nal`%RG^C.c34b\WhZ79;
%+UdO1O"t0kOBUF^R:j%s<nX4ngn#9q!tf'"pt["[?MO8[8AV;'#^RjJ3IDX1\COb)%nErZbP:U^$qV\k/"GP&R4LcFZiPG'?Q'<m
%=19VLe-l(%,F#FhF]jt""-?dZ%GBh%G-E=:j8)f3f6qt>&USIHZWrinV.p$O%@#KujS"Q\GW*O*7fCnCc`R&UXE"o*HgT#Sd[03p
%0@RPI4@//jnH;!a<b^Tj0?:]=*%u_#?M^tBlc]:UQi3a6qph%\U'^!_/.U!M:T3OiG@^`lo$WfbV(8/WobT8Xhh\?S)\.a]l6Z#3
%$R%J`9.Fd/Zg'TmE$=XBd"Qk4X.67>F'Z5UDVaO[f(7,70o/ZGe8^]?e2abUp:uB0Q#"uuSX3X>ZYoI,Kms=Xcqt[P=G"IGZkL>0
%<V_<pHK"F1!P9@X+:96A2fRWPhjfdtoJ536`r'u4l!;lBi]AN0K'U+q40:Gkrk,^UcYd[u?/=6kG,l"8a<WtXTr6:]AH2K0U<pl8
%iq)A7Lt:Hj7Y'lm9@i^'20YS"M=7=/$X>?mDU`S\bl2n&CESb_^4AH7mY8!*JNiG^=Ki^b^.ci86MBm(^sn8%03'O(j6QD=b!JiV
%>g%R6goE*OoWBRg0VIUjKFJttGlG)+$"s).#9*,I2\&YqY02oH``H5l?j$*54Me?E^b%'bDl`%JrQ@t2[;Nrrod`WGM)p?,5VF]h
%BZMHP9J1i&2D+<Q/.%`9H&Moa<O"/7ajN;o@`>$K4e'5c&.k=%&Od`W1V'J7='#k@\5M,?Tk#!e',2B#,cP$i77*Do4_.9A`VRW*
%$[tW[=VmCDBRK%eKLd;%<2CHn*<5\;)gqNCs8L3B0RW]Tar#Uoch(s1M!uO)akgL4<qiLn1g?[#/jC@=,:r"LFB\M:\ObU*+Z*uV
%L)S`$&P64rrKe//rd$%BD"UJHWjPrQAX8uoM8Q]t>.8]P^7`7fjUimj+nO\\*?Fe$$)qdhB1jD3*lY+W2>?sP5<J93mCQpSN;WBL
%/X,_:##Ar-qu.$VaC%9ok#d;De]`G>eIq*YN*ilYQ`_l73>jb?R]EorTZ7o&rIMes,>a<CB@p^f74Ip,h4et?[`8T;d,T&jpWN&8
%+MM`#J^_+)e!mQ>&+3&7PGt9OM)oZ\[9b9LMiM?mI%ucHe34NlWs1&L_21E`,qRn(GVp2<K7cKB7!_C8,%XgLW](3+KuBnGcst\X
%-7.<igEjk0bPp:MrHCK4?2]@F=6*O2LUKCLEA@==S+$:dmX_961N/f>na7ip_&L5.rVcppW*%CHSTm:!bn'Aa4SWQg9(Q8l.hY&c
%Y-%sHoGH6mFU`O#a%WPr_M'>7a)AFsA^#CGmbpOBiF+o5.GWPPa('ZsIsV(95JY?r;HngN"NR`bBU:,YJ3_Vgd2#Y[=j`DM-g"A"
%m9&q+:usu0mQ`YR29n\+6!u/=QP[Xu$U)<b9?7akI=!@Hasele]c8M+6mYg6:ZrFZIIjRjTM]^r$_tkZri2`e_si[hVs&YXY-T9B
%TlctC8aJn"cc<ccIdQ0E/Ln[ko]<dom4itbomn77^HN2ZZe#G"f5;+H]rrNFY!7m4$dY<<Y^PL'^p/=Hot\:iiQHZ$"7+\Hp9tR&
%D]dWh54I[J041+;gFoYs^+eYm?^T9R022*e/aEr*gmns,lR(OISI[:;J`jG%qmG/\?gkUcVOi:iRP_3[!jUlCRX%)9CXVP&Yr1e3
%I:'a.]_fSEJ_M!$[pReFIc5N9/B@g=)&AGAIMipa[?(3mmtSf1mCc)0&+"3V38Zp(^O>%`I:&Fb^,;ATenF2MUR?%[k4oCg5E'fX
%-A8j&3o2c/J(pdZ0/_uU/%n/d^3sC=qnSQq^3H+9ep3%[c9&[]hVkU.%Y)TGLUYPj]QN)iXn*$@SbM^XhgT!_qh=k5(Zr26pj1iL
%-@P3mj'1[ehE(,pep3%c0^rukguc+j<dK,Nethc9o]^q!<Gqe1%7i$7$4afp(LtOP3OUR8SdiZR&8qAgTFf^h%+1^\)FTRGG:_,6
%'gEI<`SkT>n#PZqk8XX%<LBZo"ZZarJ1?5Z5TkUlDaN+>'dTb9#.SUb0U/%2[%B:Q_@rT>74I;r:^@Gj-'o57NlmP7.)2E++9XW4
%jI%UH3i%6[Q.j4c)&e_l'&JANdBbdcA7BseS&Vo-V*N0R<,QbXmt@2gOP[?O`K:d#5A9aF\Ud%S/[C1$ku\J..j>TlJ0^sK;a^Ab
%[QB.Krm3;-nrRtLmD;=2OhV?h@35Cui!I4g`0`*j>,iaf2QjKD;Ue(4ZaMso6YF/FQ?]o^j\qLa`rlQ!c0>hpJgD-\`G^'cP]Tq_
%MpI%Ts8%=tXPQ#G.7pVZ+)gWF]:O;CQOD?hLBWgTHcVJ^JO#H.!X&kc5Zi@8aCldi'Vqk:*l.=)'4D5q,02H3&aLjUR+"hrH>#XD
%\HQLfN>(L",h%58h,lS0JL4Xb:I$D07KY(f'jc+fJhbrU%RWJQrdth#TThCi'h%8YpAkg6s$G+:MW7Cp7M]k-U,8j(Nr!_$\V+/k
%oS#7[&l0sck..t\mr??QNh&ljhn3B=/^Fbj#5Vt@!2s!q+<H!20L<>8B+=)Lpe!6F,?tJmj,XXX!I:+=)itd9[CV%Pg`BFC;t.J>
%(/7!<%N):?;:[3B6@KB"UbXCQYNR.F>[TdX>K+\aOMW2>%6C1_#[8:P5T25(=B/Jb$Sm$j.9rh)aX;]:eLNl3<oHFrRT#=k$]ig'
%1"(X"bY]\t@]6pB+\I3C8?0J(KYur01tJ`PKmOcr3oY(qgFU#ec]2.mi@n+%34S6N$?GYRFHpk`KnTl$8VqJG3$udM/Omk362g4b
%YROL\-jEL#F@=7IIbR/!GX6m2c`0qOS7io`R:g`CQHniAh[;<G0k#1T)*@[!d^%qEG:$N>,00VILo_<fJo\RR..W(u!*oNnTe4rY
%9R:\6Z_C3\ZR[(2a>^*26"E%M@!`;E[5_5(#rDfIY,*3sld<NbOtf,RC/,=$UpKo8-ccE5gl59@*_i?62sg@mp/]_D#S88F:IBk)
%Oe*1,!jC&Xro$g\n-FSu)(fu7WeW!;1PFu_)B$SKr)UuDYc&8/(F/b/i7-Yu3r!>#'abFi9<t]):YNPkFh7N<!?LU0#YIUfY[qE<
%L3Q2K<aBo#d%JX$_C-ZQd1-HF32SP,U2bctKHVKW'W5YolrY^]Pc_oCZ\1*==pRJG+!s#sdYQ\oWi6WTo$jceGmpCh+aVooC=G/3
%:i;@a/Z5'G?).+uK?1_-Z^q73R8"]2*s2LVkP/:%WZuAC_mXjAkcD+R3SF_!g<eJCF<JHlc^!q@+''f6$B,gk]G5R9Z)m5>@&0D[
%$C<U!!)=m(+!:rW'\;.#fm_Eg3g#9("/JK+K75"P*l2"f.O&Q[_1?eQEH!s(e@`obYZCLRr'Xu-(aUQF6@WZr\kf:POcDUG/CS-*
%6.q)(P,lshpd1=NGhg]DU?->9Bd@J!A-e4R\O6>u3sF03,FE"bTOcA>f3gUM(bnqf!?I)h.O[>`JR6=<1+n.diuFRLDo:XM4Dg!_
%fSZ]W_Z#IN$N[?M]eWN\d\KhC*<UnZd>s\UM;q3:&'l`G#DmJPN/e=X\82g.flI7]"k0OhGT-J>L*HX'W@!=u'l1hL7$!%QlO4q(
%c\6m07[&QYj>)IE?6<)'j=j<,mKKPCkeUN6cpM#]::?g)[MdWc!Rm+k8.r;gA4K'O>e-4>8Fhn__H$--:n^`71jS"H-p9&4WQLac
%+^<NQAtaIY_T*)hh%<XXbFkd<Vo5U;#<nq2mWMDOAP08B^r9-k^/G,!6NW*KXC0PQ:5CXeGfY+0<-,mEN.cZf[KZ%QO]YQ+4(Js5
%b_#YmUshT&Mmc"c5I_8<Vgm@7YQ?+1APUC&m%i0mT3_uu2mMTX2g>bY@QC'>C=;"iOPY04X<aT[Dm*1!i=dOshHHpGitQ21R_@f@
%$L$+pHEk;V4$WhB(;<gfeVfceEfEIiTb#LDai\BmT#,E44+\iHe-_b2cGC^DPeG[=UXX"+D/uB/i*u%GEa(&nW>`rr3^t[7aqN4\
%X$K&D#%YumMFI3&Dfm6]$8k,UQYutSB-nk^PG(SJ:ts3e[t3%-eAk\TDJu\UG5VU!ZaWt%,tK*SOmQU.#ni_Z_G]gF8=hI49I!Eb
%/ArKQ*r4V4X^KC?!NA1/FltLrWF84Y+S@V0Bd?r_k[bnp$n0AC@Hd]-X5/Z#S45^'^7*V73:3ka&fkut,RbpX)bANZ\b28S5uao(
%][k*?7D3ps25;fElU"&T!$*j2=&'JL%XB[;9F$HdibR:2mDE[PBU7Fa+&R%a=%g4`kmuH;02Rt3Z;uaKPr3rMh%CM</-bA.jib'(
%Ag"a/orZ9A([62KmM6/.ac"*?@Zu>B]Ef]5d9`X3AIWle1`i;60+sbQ-\+&<;l".\0+uR0#<S0sT)&V'[_[T\Y(tB/]+HmC0XSok
%n-#??d%Fse>UfYiW%NSP<3Zu`9//MUal8Q(T02L0T^X'WK!oC_,*X('q:8e(mJ91NJjT++C&qY&(@p:T$#uRd=">58\an3CKQlR)
%(lFP(.upi+^+KsfKAQYqH8,tB&n:SH>?NIqQ?cJF=4^HRm=<oK.*i3QqO:0)RU0bpg8'jugnWl#C^2H3dh!C#@2WbMQg(!<3!EB=
%OR)OJ");&A'8ctsTbE6FGZd%?.(I`pl/[W#OF8=,QV%e``cE)2Q7&/r0n]^eqc*=0H#CMAo,1**+q6'^YTPFpWg_qA&(``1g<*tB
%lbqF+g]nnl,8mdj4k1"XMU19@(Pn"QfRn'cU(N+$Nt/[kJE:eR6g]15ptlRP%N\/;p4mH[QK2a1bau^tH8Eti`3KM(oXK<,'Z(F%
%I:uoXg6+alR*@I/7pjo1=h[2Kh90@\pMUb$@V\\fTa;H&?p3+/&/SgbjeW>K55?Hq4)#]cN-0"Ll?1[NPFj!"D6Hk#iV?;W#>+h?
%[QXEJeQcY-7Qb39,r9K?3o>bM-"6DJl0iS[a!a(H33Q42d:Jh+B\<WmAt_%-heuqOW!Y(c!*lN?aa%B+2C&.f66,;cW&o6U%!8]l
%3lYWaa+]Tm,m/JD*U'\jl]#rFK&LW8)-KlfZ5sZ,J2R5AFLYmCTk+gB7N.QbGWNE4%-CC!N6Ki_k/NK5+<<I/Tt@cigaL</X4.pQ
%d?3*"][-#:0tt52[fu<n?;OEf?DUpl:L!$4Q_5Q]LG'2`S>u!^)ItCW2jr/8IG@X.c"F7iql1kp2_9q"*S$maF85)q**f)6Bk@R,
%oG4!rh(8EUn8FGCdnCTDNJ]8D97JQ*:.cgRO:VbG\Ib7,*F->unDf6i!#GkJN+(1?R>M=Ij^iU/GI,XG**cLh3/!WV:SL^1;k=&d
%C9C_MW98'<4B:?53RoejAlLi?SF!hpPCupX2cT3b]V5R.*.>Zi95p2PBK0X:=tR]8K28Om7*WLQ[WaD:F]QgaO<QUGDpQg3*Sb$'
%VMA3%f)1&u.R]4&L[hCgS=U2Fd$'#"?&h+N+lf2U<Kj+B2Zk!/VSH#^ZR(m.o4DPC%QNX5[%m<X*N2P/DNKYL>)S-e8`E,OnuQ>0
%aAt&\%)\gEYL/*c17Upa/?dfM"L:?mE,?305b,JqN,X7r3.0EPZhaX(=]kpIE-UjU:*3K8]`:`srXJn-50Vk[SA1G=Yh^J=iO3CK
%pXN^G@4RFIaR[tS4h*WcRGoBKqr=?Zd/=I+cP+P"B`5u`S,-PmWYUV3XQ1Z#n#urZe(6n4WTi`W4.tNAUp]+8G<HKb9$&GU%;_@!
%G8+4@3eO;Z,%h!LNd3a\$%e1?G56Gc5;$U4>;,6n@Of6L,1A!$Fm)!=7S&@s[X6>66?#MepN#$=H'!#@l_jkB?FYYSD:[^_`+\#f
%NoC.B:L//M+LJ%ZeG&V<&IDGE%uU\4kN="9g?S;$\n[HomPf[0fSX!Qlc39XLW-2@&D)n-;bo<1%6[1.I5[fk02\?,hfX>eH:QEL
%%3_e8ecaSZ\G%lqeOQA@;:ch-)!)A*HJdo3j6!kYQNn^8fB2Z,;5gZ]I0qJkGIPQWI33501uBT%RMGP^pumKK(d.BJQGiF#%4rBE
%9M03Q;XKB+`hK6Z%_Lq7DsmMie!%+fZ_-q-\Q8K7Th2srC?e:)HZW)nR,LG!4D@P*;kZDIh,\hRVG04,AeeQ/]a>#[W7f$5@GRW'
%hTf49WU''_P5GJ3=_-8$0trJiq3.1V+6]ft0K+`.p(01c(BT0C[.+fTn.OBm&PndG>W!j56oUbI>n\M/Nl>b0C1c0>09Yg*1r&HG
%brg*H>jC!A5`^Ut&PCJXU3,,S,uXU?*Rg4%]/Y=+8OcQ1JLj@Zf[ANV04-bg><%6@gs04K[u;YbVsl;T%?7>#=d4]">.360>r8oI
%\,BTHB^FcB9]7]8NRkmS5mmgibng"V=G6d,1)0eTFo&,qKjd.VM-[cO,1fNiBU0?E=Wf7SS#eUbT?DX37BQ(ka<WD5AOJ!\W,S+c
%OUq`a8cWEt>sbr!]E:-&LnK-HnUTU'KXCp7X+p`H7b"n0&;IVXA?Zr&21AttWs'=P:gl_%)_i)eDG>1j_;BlsQ>gTVZZ^/<jILjA
%"hu_kR<:s&JVn9%X<@qh4KDFem0abtbIC.L9?6Bh_A85b!]*(WY:H;?B11Z5,Gf/qh2SORJH:ieI(7<%EI'Nl4GdUa-M#K&1\/d'
%C2L3G-M'rQiU7Tp#-t1CM$8X&hO\H\5U+_fnNC9r,oS09'WtRL`;(js0T&__=.]NK#itt2)H0M$'t0CLGlT'FUsYphK;0UP!o1`'
%Ie_YOd#dG=Wjp[t"792`UL'j5<\=Fl)BbcS-KpcVT-]`>R]M?YqUpSpMg]c"i)Z7o[Xh$:Z\80Vi(3o7e2_['j88roVs.goO-XPa
%8O%iE%!%384.h@#0C4@8da-9AX9W"1fOstM*(G"REe:Eh7H0JZP0]60P::Opb1YdG+fB$.Y)3>.U\>tB#)p7T6lZH/(IB]MF3ca$
%?0&=42>[e.$\ue2am?>>jcIS5110Z0TX.pg!U)(brE>sPO?l*h4M;IIr1]h&M.rD)pp0-sr7V^qO!+DfNJ79]r@DI/E:i_Y"oA];
%dp5j^ER0H/-?&OG:hkGb-sIET`!DKa_PFB<*=8)pFd^V#DIsUd-JM@rYZ9\^0W?V/$OVjg8-Q\2-!Z<GKatSrSn/Dgb)gHS&YZ9V
%eXN))*P*XG)_/JL)WF.NoV#Y%hM75*SDJlU7BuYn--=Z1I?3%jKlm++XCnC1$q=:"YifM0OZe`@(Wi8"(^Q.Q&cttT0gOhH;niSJ
%S213,%sq,$oF$jP%a+uqN2B:E\s>cO('.(n<cP5AP_$)EUKD:sT[\_5k,,R!imGU$EQEY4,/7BH=E8d/Ad1qJ89_KQ@[SctUtd!&
%XlHVK-e&f]>MG6_;P,SG?d,DU*2WhTdiM."eJ]`H0Hp/5C,",e`'6A51LkDbWaOgR*aK_?Cq_))FX<]3e9!s@o;Qo'Emu)oiiQha
%,aenj<k0-+$EtZDoUo?_90P_JiG<Za`R)fP:F#![gpV?EC<(Z;Xrsr1O:VN.S(_K_j8@'P--iJdTG_'?)&q)6&/c,`XO3-F``c$p
%JQdQ(4q'[bUf8pI9OcP+SAXAS""rDbdc6@VeeP/shFt6uq+J+\*""0rlI![&5#$,/m>KsP?M@j7&'b8b+cB'LqLh\<QTK2k@'q2o
%&U>o4`sj@1U!'4h^mqj,X\s=JW=KHi9\gQ8Xmco`L15:C"gQR]Vm;^G^j[I*,->20ZMVZObTmC%p7J..@%<otOmJ4-#2UO@!^*p"
%Kck&b!!^ur&at<D-'2Vn3J\["f[hgH,gZY3g7(<;).<r'E#OPN3pdL./HEnC!dJsoVPOFA\KMsrfbttNdlEM"AkD/P0\\/Ccahhe
%/T.H_@c5"Xil2u)g+?g=-uN-ZLnbd87<*ZqmAC.Y5%>f!)k(-AQu\>^#f>@n5UNi`'>sn4+lrqbaZe2e/;9d=+L'-46<VfAoHqr6
%0_`,NF>A]4=.*ZHZ/'pWQ(C?(4cZ5hgpItC'onK!>kNqf'HEaDZ)FsdB&l+.*kP>%8s\m*$519d)%.)TGa6o4l!a\qj[k@f/,\/[
%#gCk):[S!'X9RH?O!Vf\Qu_uO>eALd(K9bHV11I/iu?FeQ]lC/p10K<M5o$jKKdLiC>pQ(:0*g#NE*hE1eg`-D66qqS^@G>o7IU[
%iFkFa.R7"iX?#-sWH2!`D/<j2Y;m<:LfB8$"N\usM6Sl>'tMHLUPU/UY#rH1`'<N%W.nj(U'Ca?"EKX-D.7"XZ4A3#dQAPrgKNj@
%3If,g84DJ'S5-4-HN6K)^9Hn/X7!],q+!4p]qE<\(LI\\Ub>pp&2AQ`+==qi:%VsEPV_^JL;QYXF2Tp7&?%&ci*gBiUZTc3_K?Y+
%<rW"P2W[?:<9en,+rPN&C#q]Qi[,4C$*TCf2'D[Bkk-f!:KOiI#b:No1Kpqr(7Q9>#+KgC6go`*WsOS5H:6r8MEq)JG4^#tSpN!e
%Lfn`KAI:IB9kNQC%YYh3?Z8tRG2DPMIk\5"$V#"h(<I(pA0IoU!XUD%"pA0iXJ/,u"ofL*\.;$k-s_h>hl)05?l?@+d4V6I!BF2!
%6:eur_BR!,auJ(#!4ht/85^P!3#ggR+@CR9?U2mCr4iiVIcG!aSXHlh$mHR<@/t:a+&d@7+>hSQ.NTN_ZPF5'Cp4o"=+ZeD7-)_.
%D=1-nA$1]XXIU;e7Ie9IR9W-2*R4)kH870E&V??Wpa'l4JjNWdpg(Zpq0aXA0Cm;C%<MELHV[T;c8V+,YqICs>hjD>MqH&`#t6Jh
%`U)@+FA_q<O2ZQX;>[S]Lsg"]VY8D5[GVEamG":U;>W7.b`fH>UIitLlQJ6-KkG^Gpl@Z')..(CkcTm1Lp+5pj9]2:5'J42MC3f&
%+2+UU5cY:*R_o<MgWX-(f+*WLp7\+]mH?t[Mp1C#.m>r3:4VM>r<r#<99;q5p*nk&dpF?^^n\pXqPlu=1c*GCO=d;O'#G3Rm7=f*
%4<+--$O_r's"XMmK!q$^(rE4HHH0neY74`;c)<,ln5.cK@AMB"JXD6\!Nj>a'R:;fdt3Io-aKI6R;q>2)%#=pDMN&M%2k):G%%l=
%]>.j<-MNtHj\X%Z`61p\^laC8FM<Y6CmgE1YsWeMl!s[<2B/]s8LL^/Elo'<lf_2YRs42R@kcLVU!st"BtGh']V2uT>@MrQ,X&-*
%,&k-GCOB"06qsPhnJJ^;LQDpgLWGogkI!54MdaY0S5JWZZgegbMeb)3[Kib?Q+fM(+/%"@PbM<2VpS379i;6=5+Y;6%$5u@`]0Q'
%l9UUE0;Mr+gC(AW4Dn75l&ei^KQASq-grCl&5Hr<.+da5=]Hl*dgVgn=Uh7n-l^YIBD&>s\sluKVtB.'`3@OfEHtg[jE>4.*8:os
%(WU\d_9&)T3N4JL",P85_[tFLa)'Z0rBc0lF@MB]&%I?RCXLIK3]/\nQD$Hp1).?),\#6952#=eJcDl8]jhM(!]$0=CXMda\m^l>
%I^/N'n07+65JK1(YP3Elk+mf2R$0NTj!=J,0@qhNhZdCT^['MCiq^:CnoJ0*LCUuo72F[IoAU*pi'eC9IXX!T?gmg4YDftRL??#0
%L)[YTL9+Mq]Ye)e_\8OVeaW6dTDQ?ugU6#3@IY'kn=hE[lJF*1FO:hIoV="OhXkmH3DQ*gB^@:q@q:7h4.NW:O#qZ-*k*(nPfMCf
%IdTj]%+XYnG:DP4rd#B#E^qeBjF2`>3;ImT:N#H-h)M<Xa,:P?]jSJiOZRkD,540(N6!sPrS7-2rP?!gQ2:qq]ZM8.Ga7"m/m@B&
%>sJ"YJ"E/:<OIYiqb,'o^qS=p''gGhZqsq9?$I4-%2ie8C.F3SSfW)49.jb)7[>+<r\B5B.X*FbQa^6;I/pk7mXkAl&,irmhsk\V
%f=,#2fKT)0AUY/='h%(/o=>R["/i]OcuQsCE.L8"Jc^UI!'jFu9;$qPahAST@?LR5ARFZMi"V`)lp6eEem0;VR&9'M#;faJ'aET9
%(J-ck9TY)eXe,Sq7Y>:>OZ/Pk>T21X1TF\@d&F^uA@bG1WK8aT%4t>7.<(Lo-DlPRoV83VS8SYG+KA"V]aNJAd''-V1f":kB?&AO
%'tTGi9C0]RKa!sB6Aas-$rR*q2:g-.0%gZa6t>X-4F(uu+%F]1DZb;`.!,Y"Z)RF,](b7BL7hO]eop0`2?V!kO%q,G)i9\V`gR,B
%N*p8E*N;9FEoh!&%).DuB6\T=bR-E7(9,GGCabPC6Ll-M'Y?fT%2EK4F[<,M9lRb0m#:0n(fS(UL(rCb'KXep\T6//nXIFYG=#R?
%-\-g4Sf*cs5S5R""i?,ki1@9KL_<8sM,$_r`c#YDDio>X)7(I+&hi`K8Q<*rUN$VK/JsQQ&WrfA*:MF%#]&^76'hsBSi@j.p?dSY
%`t$FH\MbnBK"D@F3`>N`Tj9V.c&lfH`+Q<P,W_m;=ERaFL"qiJN2K;4T.]@&,j!0MWW<1>i,-gn,\;onK?+nJN*^A`B.7&7B8U+4
%ic6U8N])ElaEM8i0ZJO8J.rnl$^+4kaKj$EHAlL3.X1rXLE^J"Cr]*](s&OAXI5?7!3pkG=$9WJQ>$8d;WVskT)!t4r@"m$F;n-4
%#\C*m5;\7YDN5XS,:G[@;;ME62i_?FR5=,+oO`Yf*6mgU#;P&uL2%8Ma`g+aP.s":V\31FK&mkS#1a#JZM*etFpglnM?$3M_t]kL
%*X"L;FoF4NC3;TjLAXsk`lflSABEeJWdp&,"enG5XHf*WiY-JVic?Pq0Znb'Z91AV<u+WkbZ&j!?'b()b6#5,#r,C91\oKtA3p_p
%p^RU47\5V'N!i"PniKB8LZInkUK&5,=R:6BlF+.P(Ph=LY.t7hF]d\d6KL7m4E[>L9)/JD6tPcE&QkM<O&ZAi"u30tIdB)/5\FBe
%?PO&)g8pu>9.4be!!pe/5l<#s!tP%*Id9!*UBH-"(pL$9h8[mlT\JI\kUm06;8Wh2pKa`9T0]>,F40E>V1p\Ti=#b^KGcAgK8m%4
%d^lN_ABn?V1h"h<G0%,kTa@dWa2R)!_?(WMLHNL.%%?0_a3qqIZIg5Kd$3[NnP,8gElgg8gUeg,_E^jH+A$@a%oCG@?,1+2XMuba
%(tjueJN=n/os?+emRFc8V2M<-,AOfE2_C0g<MZOF9C>eX(qR.PV$GQc:BSd^?5Kt"nO&LB]Nad`L-eiF\[bC.Y$*p'^kTQug"=NW
%Bt_Wb6._Al#2&WCm5Ha$V*]pqVT`nI(cq[7P^[kCH4'I)YN\$<mAQQt>i`T\N*]\l@qf^'4*c:$,tG<FMrAXV7jopH$TKJ[A%fX6
%R>'17)sYasB(V`rHf,0=,/7g1Dm''4=dh%W[4En&MW26EM(P8HTW#-?qSZ3#JL"="IP'-'VQ8q3IHJ]_.OTl;c7,hl'TPE&jD:\?
%:M`DAS5&PKd*o;,2Nag?PX>ta0iF`JUr4mA**>OEBQ=,'JR5c3W2tMAY(i1=N?Lr;Bg=hQ>E-e-+=<Ul8S^`[$f;-Oi5,hcb$:QB
%lD[@)jSYCI$e[]2AL#9d2NTWF1LTbu0)Fu&[@_.UP.J]9kE<;@-W=mV6ih:;7>U7D5[Me[=Vqg<%HQ148"iMt;q"FMQ)BR/mAaBj
%rOu9Y0T`\S8lK2M[ZKMWP.,8c@fr_V4`fM7>qecL*o=)[?l<&n"6$&/c.V.[V8r_6-1(`SJd+K`rpU2ei&8>n3CTBZ.rLXiAK]Dj
%hcf<A8UnrL+HT4-4Z;sXg4O?8aQ!be<.'%>mH5?XPh[bS"#7F5>4U\@SgY_b%MJI_8S[fr*[G;GY^Fu>D%1aCV7l:cn,_LC./#8(
%!k*68#GIpWqKD!&hE(mrUEB[>l;TOuKilT>Cblk-:i9:&0^L$`'>i=R-4O75S-j"K01XYDd0tir'd%1X.Na92D9I]&SYE)l19EdD
%FktSK09,fQ-BaLP+S%OYP?!1I9`<FR!TVnQNI,a6B:0$D/_1+90SA!fR>J3W^f92!&,R89qbr]n`)O#?!45epP)dIr19sa*&t!K/
%p`qU!"0[]^Y0rP'oK\"X=AgM<>6<pO7mbHkp]\SV)50n=>+ft9[OauW,5VGLL([[Q>$MKs8r,Pb_)[^"<%N&V?)%q<8^#gE5q?5L
%@%]ATq$8DBE"jI4rROq$c1sa+"'`hi-],d[/tH?L%[h+cUi]]k[Zq"#%@P+MNs--dbBQ.E`RKpPQM8I(CnKqPQFH.6$Vf"JceRT`
%B4,F:5`<B`"qeV,Nqg,t39Ut;j:%I?b,>QPZHDf5bWlFXV5^pCPTZ]lQ8^a[4Qs%.9IG^^(lIrl%tRb-fEQ8_n`)EZ`9PJs@($]R
%bJ1e\"f8drs5!*t`6.C41oeG4<i@IChlTU[Cm*aDlV$dd!Fb-a5."R<9J[lR"^9e342X$fLt[WSM#1H;mf[2C15$>%[\bQuBXoH8
%D1]9f;1CJsQHKgUmbPg:mD@g5Ige4,8nQrRYaNLAbp1^SXpU?tBp.2'#.">4lAj$lLc0UO:H0V:4!\<=$V#cS.k?cf-uN=S(Q>aM
%a:fpomW:tJZ.ibPY@Ee0?qNO,J[cTXS+3o<Dh`5cEaS2<JOGblAMdu@Yo:T#FH[df-&oV^X0XpSa/rPf)i3@3"877tE%5O2,U72J
%o`D0OHDc(3!ku9L+,5(6/#ZK3)'46U#anJ\]qCG@W*&8($oQjiN=l]SR7$e8IKAGnF/iI,\<a-F+t)bnXt\-BXd)2:$Zak&V9$nR
%*]Gc7adk.SXbK[cQ6N3XBS9E=@gpt&`!3RoGs*!l<[j*;36&1A(<P+?06Zhd2m6#QQ="\QJa#+;`nZZ?i&mP>7Cq."4$jQ-CFl8J
%.Co/*,,=Oq*FJ73pe4biLZ2#>b`dJi>7TEe"Vt^%7jER2]ia]o>6I2_Bt8KC5RgHKfX:AYEA@,OCOsDQTVea'co=L/m5r8X]FXtl
%W'5^44'q-Um8Ao(f[*N=DJ72pBQ@',iFLO2%)pY5a>uWHTT3%90*QW4(=/UBHdK22atf2<F'\b,'=Afc:^i1sd15e&QZ>S59(i,c
%dL8n*33bqIDr.)oG=Xb;,g.!tE4?hD,8ZX3[JsVf6!:@t'eVS[nu9NNf1G\N\c?m%RgoupUl=K0[\VmhB'V<<m_9:T:OBaflf6Sn
%bC47AU:Oe*$-5!.+CkI"rA4dA<b(r>\4u/Q4PnofD_hSJNZ9U/HO[iGDPIaS_kG[1XH%VqUC_?Z)VHtR!B)?Z>b_Q9=%mgoBaXT#
%G\`Na%=nWG*/)CCWFbLMOGP_bT\9V/7.,'<q]I.`a$'k#gZZdqf-o_$:i=30$B#:nD*t:\@Wt0HfFt_k.-h`E@9>+RZOK9TEh`lI
%LETl/agp.[A2j1i&&YG(T0*#=5Xak^*[DYMNO_Y]kB7r'd$XEN@N0>Y%&i0[]Xd@S&&c4,Dt\fnoXI:,CZZq1lNq,j0$k4A$r#9*
%a!a7VP#6p2Z;hL<H!U;nhbW>II8U]2^9cPKL-hCqF0@Y4kZG^ThD-FI7(KR1X7VX7-B^P^6L[EH-j2>-g]6<r!D/(g:r/lYOQ(nC
%Z80PK\hU@I@2rHjJ>YV7HABrLGV=T-Q$ZIhoOB[$W"8Vr?0W1"D;\k=4.jU\*gBMN^+]c^aK*poXNP<dLl!C2^sGq[%`h#97OReV
%O8_Z4RjUIq4CllPPn]U73^ftLg<-df0UDj&K['R[<s*-+e="9`7qH-ZR))2V1s6R];f@2,^B5m]iN>PjF-6g$4U"pE?e+J4&(SW)
%Vug^-9=c"XPJumV$)iEMTJ?-Z+IdcQ=#0.OJkB/R'su\7CQk`"/;5+&K=^-h=mkq,D?&ms]r4%XkS?GH;D>CT%:&O9kSSN4fWcUd
%OceH>NXm#qfE0<\*1.<(UZd6rfHD^ekRdY[OZ,)?K%\NUf$LZgNG0io+gW$qF;QW>DO@+%.(`>(nq[P[Xa-TCK%2I8cL,6ToS*>K
%-78dB8c4tbX`3hXY_kTXitqk3DdNoQB]IJaUg!orhPq]86<\bKj9&pMBTmfWIpB!5#h?jj,o.=h(uWOM#K]&\EGJFW$RK^=l])q,
%1c,KD0kIP($X5>M,G7kUJ3[ZQX-E]c+;ni_WZsuB(O$*SZ;@#OTNMuH.6<^i.Vi]Y(k_F1%LYK].>@pk//56nD<>L,4F^EF9Q3/;
%3Frj4Z#8Hl&#$9$%:leC1Rh3/MIl'b%fg)$1g:l')MT\k;E,)HS"@e+oH]]p^IWOh)3dZY$jITQIE5g-VQFIq+ugfH-k`Qg6YV=M
%%MNj&$^G.h?@JRbPP@-TPotN0BLSV8=@]K8c3Z))F*p`W`FC9N.c0]#!Ag&830p.t8KLREl-@_rLs:Qd;c"1l,+/H`[<[#f-jIT(
%2[T[1)^3RNTIfg-'9iKnT7BHpUZhl>XM[EEPOSs/16.\K1`>"4*d^ts'@;k5,GN<^6@A<NA]h3!\L1AbTfdm[e``UAnEu2<h(i(P
%9`Mt!)lrH;RHNi%$/0lD%=*M'3i?r:3e)b#6.d/P//JIFU?'Wb4JHUG;2-IN2I*6W-!!G48Z^G(O>ccX'$D87!pgKl\NE7u$tu?m
%&+\n^q%Z%L=Mk7Q/%uU)0se'0W"81)6^4B-MEu9BTU1eL0@9m&Z?JD+jGZ@f=2Z,4Z)*t-Jci1]UK"WUjIcY=g81sr8NQJb=-aD<
%7($2I6@GN9,4m;/]0dVu*u^!r5/nXf<7D$FEu)Q4(pF^70+&)#&<A^,On#onHj\Oi#SLq/#uDIs'Qde+10cFb,>XlU`oR&gdrO]E
%+<77hflJtdH:t;/:dB"%rh2V_WAKDpT#n5ADKp<*fS!^O&$f;rG0\)TE_.LHi&Lo]2m=MX><,S,H-^Jcn0jqIGh@XBm8;2L-QX"V
%-#g!n-t_aq5cY,i^&]6!.1'HTkR[VmKd^%i2p%mmUIGeE'CZ%h%D%ED^3F7@k[Kd7G:l&dl+j7$a''f5.<1\NE",R8/1X=kV4\$Z
%-tC3?T\gUcD^#@I]eOU[!O9G>^a[c6qY;.,hS[sA5tPP8_8:b;"@KT"<a['/JgO5kZeKSq$,r$i_H7bGU(lOgB4/iLZBoKU)2,58
%e\O>%EG[hMbGag\4h7(2p9?,lmVq[F!BkU%&D&dcI6&lSUsgX`:7<]U.c?Zp@nb<:\.G.?$c$1h9l6^p)a0e0)M4"hR[ZpMDN@?+
%da#&PnF6b=4_H8XA$_PBgAP;miP]6u'BQMbUdIg+aXPMnLWCh6XE:2G-9KW1W2@`A(1hElR=qdE<$*M`MAG=uj?nYP.3hOO'ZPN6
%a"kajKtn]4@5?9JK=h61[S`YV=N0QWf'FK$L9N9uSld2'?uR47G">Z;_lFHYe]UTl-k9Is,D+I,(2WXP']PZ0^BiR"N`fk1X-I'6
%b"I!GTPQg,J9,a4NQhUT0NNU0DN#MdEG]U,0s5#'Q`4`>Q(6i\34;/*$_U>JD^gkKTqRc.A$qDK&7:<"X?&M2Y66lX@%^[1B6`d/
%EjX]nAP+U&G?Y5U4bbQI:j!l$UoP]s6BAOP@[ck#k_Q9f!KEh%^#!l+ClC*fLDDsFbYcq$;#E?-7M.q>7:+=rAt&LO0#N1o:e\5N
%C"XRW*R,>Le&NCnmppKPpZn!bit@Nfo//XVdKA8d6*XY<e2dtFQPG7PM?b2q*f;U]Kc33_)3PuA>cfMS_[M9+="$n<4EGlN%sr5R
%nh=[Y-H&am6YoAM_tp)$25V[HNpjn3mBsc=l6bZ`3#s`+l#@H/!H:>?!-20ooGjrn)`kP=!gEPLo57,Q-MM<<hbOhg''g7nE5K$N
%V-&$&l<lSDGCiCknAjqZ@(KQfroK`D)S&QEVHD@R"l[N!.q=^,T3iHB+drhB?UI(GANaC=q8mQ6&1sGTUe[U1\d]Z>]T_pjA)H78
%lZd28R45.enTs(gIICNKp#KlW7(I3#rP/E0e`1VE]/IY4ir$PUG?@P%G^6s6ko]F<@/J$=j<&k4G<ZH;i$\sUX=WV;`"6G4:0+_R
%2hql6)@&V?OCR+>ha70ULY/u&1G=u0lNZ64b&ckdgg760,NN+9H&@9bdeZcNA6*up*fG,IpIeFW(tUT(#ClqfOFK[3!b@rh.5LYh
%\(\.jV5>nm3cmh4i+k_HKdM"::Conc+)A&$dqKBM.paW!l*8Lm6Pt5I8M\tFS)UhRMc*$^=*Nq'WXE'^k<N8=rMct71VWPG;oe@s
%r&g2V`)`ech"Mc!<^1KJE.1k_1I%Qf?[hbB^;'U8n#pTe\AS)unUlA5gNUUSE_F[s#R@F2p!]2`ra8?MGeZGe<28a4GDA.mRN'EE
%H?.6j0SE':RG%nq>)Fi+3G3<F#V3nVUtM\FY:L;SRj(et#U)Gg"EfhoR6mVL"2&.1:*\`>%,74_#;R&sFXdSpHoIX,G^nAHR9djN
%[%%N?(qi%B_?-Xtgf?YuUm4>"T*'1P-bnr$dUhGt-ac9>C?aSS:MoqQe6PqjW\tn1kPqurWI&.TMGqW8mk4RVR9=[."`MJW8XgT]
%at?XVAq3CeCgX=@a">eRR0;$RlfeiNq7JJd!^8Th@5ntG"bn(8-]KnkAZiA4R[Hj+J-U;1BPH$:!5oOE-4MAHRn`VNG!j9:;5U@`
%7b2-Jn<#NJU5$*5FA5,!A"FV^MRS&bD^BqV:TcJ![^7XA:+m(Q6T,-P(K^7-12TP$C=#"!9e%IcmELoG1^h4uBj`WhC.FTAM8P0j
%a/a8L*"TiSTX894ToKcQa=rM+8mC7_OCLpL?44k+F9%\L_J65#)chqJk-5&]ID_u.Fb!%($5n1IU`pIk:1=!:/:>ds2jl+FW\@*/
%$s[B>Z%O$6n71+Qam,%iZ?)cj5DJ!3[NB!raCIU<:DP,!-pP/Le5MS1:ju$0-A+4%Ta.o212,JRCsJ^oaOa)b?rj-@<2@+k/E49<
%Ra$Nf')@2#^bNLG@u^eU'HL+8ed=uW?Y66_k71-7Nf-bH%oCM3SqlT=MhLl.KN`3SHQ7O<jH-(l"DSS.+XKVXQAI,B]#r0h]F0J+
%f8V!01"[S=(D<J.<^?4;nPCA-am[Z'M?/6q>rm'p"Q/D@6#:/u:)>cS(K5g%Wi%cRb@^I.Q1ZT<r6,N+r.5K%I.1ET,2)l^O.#rK
%;,_P+#qV9r#URqgk4%aY)chetB2fAeeG[>&Ik].H=M)%BZMM'3qLZgY6RU5f=<b:f?DW$?MSZ(548"&*F-s9(b*,*]$hMP<m6K>u
%XGIgKi(c7+ic5=>>Gnj,5E>oZ;/cjRq)&kiJG<;<c-;2G'SrbcRQcU0"L*t/"i^Lt3";+T:f)`npJB(%lZErV$<gGX<Km.#GVN$:
%4PQH"jB!kHG/l9*4hm"<Mb;@!+%\qco&`[]nQ-VjneSaB*6:5BknEV\3!!WrCF>LEg^c2NO+(]l.V1)kU^eZ%S4qAF3kWUW8GS$5
%2#IDJ#=N3"6'?Rc[4esL()Sh2gF:L3R75RBV]/(PljZ6s1TJPmE&(430^#H6pRh,6ac0RJ'j6YQg)O7OLaZ"&EFRgM&=!B<BpQ$$
%O*#Of,:-nkAV^T@m.(r9Lo?Z:^D6G5=qmLGi+Um\;k]I++'83T,^%]t4neO^But\[ZKcR3.E#jEogkHZTn'5'Kde)P;a:s(!Q=@,
%Rip[le1RjaRfa!c9LT2T:n/6EXJ4rm;PYu-\ti[]p04?>JSqe2$H03B3etEYKnFFpNTEKu9Y_b\B"DeKHnWbm6Rc0Zmt].6="?Sn
%&*q*]+-eN\16@/+](9X(*lQZ!4otB=\=;bep7_0QLJjC,S/MCTE@T)@,\_2VI%HL%*$q\ceS(Fpo'RoGS+:TE'O8KO;j@&ZKS)3>
%3-:Q!H6G0`%FkiGY"K'SW5Tgsd51_`.VZ/.GP'k/NS7sr=S]q9,"U8kbL@CCb1&9dq.;N<p9gNoTF`H`-&P9r4O%^**0e_I&107t
%YiB>Z#Y*(+T[@`jLun)%bQ,`4-^(PAf(C7\h3a7f;(sLLn&TB.$UdQRT"Q.M7a6<\NCJfSeOLImaQ9o.R&h;C\a-Qui)p2V$+_VA
%LGZoR^[cC_+G2R=;%j&YCf5F_3Adl%(dfOG32^cX:9c-+.hg:M"OV?KUddR3O%]&`VK?Vk_`7#c>k8E8g!N,6"g9pb,j%,Hg_-[B
%CD_82XfSLRqZG-WQ-EI"qLDMT6u<S'7mYhn9c9lOD_0u$'3&<TkFf;pLG5ZlfY=*ol!q:]bahC)S3AJ!!Ra[4H&rC*l)ecf6`DPX
%.d)[CW(#J\ZL][Sg4)DqkmPEJU^-/+l"4lOaa)9[-rpV%fZr'kTl^e_%-JEL"H1!>rQq0J:B#YjTeVrUi=_HUl<;:P.aFPq@urRJ
%BiV:p*eESMPY=J8VqK8T.C``@856lt%K[K<Uu.pTR3m>J[k:qDct57igJ5aen&f+]/@dp`KmZmh0*4H&72QZ6Bo:#<`^Z+9qE6*<
%4(dX/A)[XQBO]m>?<biP=GsZUs6b'T*?.&0b`"qqm:k?ZcV8`We`S;f6<7b08^8eiZ+u=Y.5_<E)e3bLO^";,0TqcZ\&!'m,Q_G+
%H:-R.!:pe\U!T.5-*8LD1gQ+WU?L]\rt#6J3(+0ah(G/QGIY/u%G=qQ7&O$<\K3",PuXa1gl,u93W6.Mj[j#Nl\rUnE1@VM^MpX5
%9=+UEU)!:<4!O6g]cOfAV3cJO3a.+LCc9&A]CO]hWF@"KRDPfU<_7'FO4-RXACSZKm_K3^<$@a6rR.HB?I-*-r('5Q%Eh\U86KuV
%?k&-L"&*@0]4G;%rNrH<p/_lW#RY[_%Hc$K[aK"edE3u[]$>mK9W-!;P2t]DH+i/I[1::6?([&ms(WQ"\OG+.MlV,0YPkijJQQ:,
%f*j5W2)G8#c0KX5%NGJ(4,`IM"\N&R5TSG#o6S:rD4Y')8W:mT5+AIV(,$S8VQ5!6Y5Q#qM,rB,>'N)tLU2\^<k=`UMdWaFgdF\q
%*,:GDL=b`cImFbHb(O&bX]6Z58DaZueMoE2>:O#.N2'Nd;T5tPEEiL):_NMn&Bf9L(XN_NViO;a#3JPg#?3%F1]6Y0i&G%NXPZe$
%^OSqE'BcJHW=\$]0IQ2O@`*L7a6LerZI%D"7$&p#AdE/fLP`5MfFYF[oSdpE'TA4Y-Vnu<J:RiR%"@]cZg"Q)TrsPZXS0i*Ns+d*
%UYr3np.7;-M@62*L:>A_E=^$_^l!Pn(j&nr%&8>lc)QX4cLt9R"\`0a0.+udj/PFI@&b.ITa/WIG-Ia//nYtaE&'8g2de6lZhg24
%9]ZM\5:2<8>F:Ss[E4<!67N"H^96i%i2Z6^j/1YNUkg1@VC2DHX%R63B.RKTLR?2QhNL?M,.I`:5T+:=U:mNV/@2F,:1+-"<3n12
%$Cs4B(IYg$;j,V&8OVI-d7G)j.tJKIP)<0t5Y_,Fe9=b^"?)g]C[65H"<hjb:$@\o9I,ZnnJ1HhZGQ/OOtKs!5qq)lN`e7O!LDeC
%RFE[Z(n,!O:P8M)YdsN39s=@?GuIZMCl1eH@h3"D>+?_i87rTd;V#0!1:7_-0Y3['a:q_S.PtarVbClk95?SiVuF2H"9R(U8%h4M
%/5NgOnVY\`-u9hM[m61b`9aGFodKXG$h1TXdK056dLrAR1'E7bhPo+Zbg"`0EWRFg:2A$]\2>>o9af)uL_?3F9hEkG%;4*?pq3?K
%/BTTbGGDt<<7,BF.S!g18+Y\nX*c<NPNC;oQ?17hU.^t8WCBmm1F+n)B*2d'cqRW.;j[c#QqABCKSe,p)2%'U!#[=e0X4!hnrGgH
%RSa;)INWA`I%arjO>lMglp>krPF1r<A5WCtH;rto\d0[NLt`@#A86n@>UfGj.MI)WjNg2a5]d-^Qr"HMjl7Neoj+C=\aWm`<GG!I
%9iKPq!-5/PRbTRFkUqP[S"FqW;_^^eLW"A..dbI%;k\1jb]lj%,;Dt)7q,X'=;DCqGd!RUYC/D%d69CHHc+-m3@tuAElClUG!"k[
%VU#CEA[m#sA1<VWM`G_i`"#58;#DRLa.fm*G.oNKiB[eaBL-Gj/MXSUT*qAlX\5M:./e'hSp#\\:HI_IE:qD<8%Wf6'd8j=gAIXf
%=I..nI"?%2._`UnUmpPYmHE0[k<^S$6ORs1WYYr:T$E&dI!9612".Ake)M=Bcobr>SU$!*RNJ=bL0Po\`/_dRa"ktQ74";\]smDC
%3lK6/(TM.%2\/:S>SIZ:77m^TC_3YJ&TQiWU,q4+K*]p`(ksq9l)ahS&c9Y*3Jo++dLF8pE$t]eY0rDiOh<S`1"m?U<Eu(G`NBSK
%m2/[:+Qg8d[Rmpr\H&M>"3+CaN0R@YHaI\4PMma&P7UNAZ]4(RIKtc8P$W65<T1oj,BL"LR6!?`jBC,DPibGs6_m;uRL#i)s4c"6
%auZLrKX?S]`G=e^$6umXB]A<1[7&;o/)n!t@&`M@N$KtbRreQ(4XuCN,K9&.jfrfkgE#b3S.g!j@c+3G*+T-E;)\AiXJG;;=b'SF
%$:h:Xi5f%[I05i``-!qtqE.\6$Fid,]4s[5/3+3o6OuL=.hJB3F/\74cXPcoD[.J3&9&\80Yt0q0N-rAZrS(*R1pbdZ=^HDd>f/d
%c#F\)_UMhU]2n?)S*QQO/]gb@`59)Dc)<2_aVgR&:i$-#+")>'<9RUSUCa#)YLc!9Ab=L#AVqM1$unom.o7I2R=G.`>,&qjUd/H(
%7Tpo60%6H@!:l1!k05U_L,89MF`iYF&J]uL8qS@mXQP;D6@<b%[>\+j&WrE[i#W%\Lerp$>Y_D"IF`,j3l6"dQ]HQ<`BPFJr&g[E
%3'l/4V?S)'VQ$k.-^p2\+UdhKD!f,jEuigX)IsaA%cbd,3&,<@-Z],FRiOsn0NnZP?_CJs84=IW:/l*dl"c*cKkXq+qW,0]VP-@=
%E\&hF;A'`8F`FcZig9:k,"M5F!XmU@(`,fT;^S/)gtQO0'Cl+io5Gt]&u/o:;&SM'AS)sGR6I.(28S7*K]po%ZUSpMV_'TefhK9n
%_,]bS+K+g#7s5VT)Ca,<:_%$?9)R4@=AXc7jR2ou?.aX+;<Sb39lMbQc+XR.Bp")jHQ4&$$^0=ke%mr;g-/^r@<3L?^6I/iS$>Wp
%gPch31f0"/bml8YJZKF!<uJYJ*Y(G=#Wm+LdY&doFlWQXNj!8sVNWtPF.#dZoaq7A;Q!o`1;l"Xn"fl@%5L5TeN.Ra[O#r.>dBYp
%`(I.c&ER4_Ph;ocFhDE]<uK,[2aeJsWX#Imc8r6L;bl(/]Ohu0Z?)Rt5uI8,r=$%hI?LupfnmE-f.JEeUGG"k-u2iZ<PLBuegIcd
%8/uO'!`2jr^bG@1Q_Iq?CfCt%i`ot#,8?Xb8Ln;ON3a-truC+2@V^</#HHKSe=d:B,X$gL(CNSsSd[-?Umq=r)!\P;hYT!A2c&j\
%38<%51Ui*e>=1i7m3<38pGZOld=PXRFbh9/;TfPsLS);RS&&Fpcr()A@PKT<N!9r]RX`;J.<`\d36E-c_+GLGN_FK;4Hu%"Md'^-
%W7;hZO`D-Y-ghb;Dbl%V.K_(IP/&=a\-\lJ)9Y.,nd5$Y25Y<qS,53"2!^?6:1YA@F&-RDW5,l.2m^+mBH\);HF[Hr94oWcW^\hH
%SV8c3.eVSEFc6?7pCS$H+-CZ@,j.Ur8?=]6Ut6SdJ)H5s9'97rUNmQqJL@:!0;^iVnXTLg)<!\Go&O@NYNGO[cNaD1qZ/#u?1n:_
%:Q2Id7Jmf%<]",a#mj/O:Qk8nnpPtMr*iN><6Z$=FKlFu0S2l>ktQBDRr8jY>Cs5*2O"eK\$p8\B*WR?l`iPTnmelT6P^N!>dobb
%/:RQHRudLue)T>LG#W!@<U1upIK+_hF[uHU<-F'-WNSp^6J6mOLGX)[fHkHtg/M&O$\`S%5(dESLW6$nS\RrtQ'\6rF':V;H0GDc
%6kD0_Ot4>EjV%QL?#u;Cg(0*fjmBA?6fKciE_rdH+I\npJM*1u=t//u.*XJ==Go4'atCK(I9O3)o'G/T'Zs>3ekt^;pGTbYcYYGJ
%^.0))<k2%L$tIG\dM.6hLg9[Uiq[@mXu;W.jU$2lb-lDQ+Pt?,i.PuRGG:HM^jnf,KqZ%b:`nHs1J_Pa`NVRHTu`^[#gJ(5Th6Oj
%P=h7QES1DY;k92<+Z$Q[.7]#P#t-2s;l8&_d&fr:'Q^t#8QerLB8\s_qemZ`0QAOAG?KS]_KYBu8mcAN_q!q8ZM&D-+"Z#rWAk=7
%dN9j[[\=g:TT27^@,"]ZgX@]o*fs=aWQfQ0;,]S;-2mMN5B76p+*T04-D&j"D,r%0C7W_pj+qVlYPk4RG$#/VfJR/MrYh>B:nT/H
%YlbB/2LQe`T,q<(Q>WCMhVHhfp\hA:B"Z0LWoi!e3)X?u+!\1`NW!nb+0Mj\3R?!.XCl$eM6g'u0"S;j-IF?g.;/>#2eH2NOsA;m
%I_"p.2)Z`jX#tIh=(A^)g"FRQZlAo(g-8tT.g-?KSC?$@.4qZq-"ANZ>,<HY],Ec,jDPIkC@%kqIPt8][81)5%AHaKAKVega^I+^
%3?NiK,[mW#j]Q<aAP3FjYbW9L4#ZV(a.14X+QVE($ALtaIbUY!8>=R<l\n`9P9:eM"%n;K11nFaN_&K`/$E\J)s.=%[2*Z8g`doT
%B<)LW'[>DVOB<7B]qYlgHVUmsJqppC?$_/aEj:kE8=epR<K7s.Yc-?tRGVRu0_852%(1GN/'VOQjrN>6AQhJL+\A*<Jt]d><=s_p
%\O>!nZ\MU?Z8UWS0?-*e7C6>SX]$HgK9/MFB$Q,X:f"#i>9V)M&iq7K74huR"9XQ$IlNYH$H8[beE5;M5!Pgh[RA8mjPup\ctjCI
%'ZWH]gHA->bV:>c(rN6GXjV$*"<,UgZ1GE7Y"O(P,s)`k'4QFW?n+,/66i!]YYBGcpr\Hg>$@h7r(44WkCWOF<OpK#dR$tZ^/1WP
%9`7*(lle1iQdJJ4Aa216aZM>YaZ`md2^Ma^r(BX:FY9Y@E2qLJ3df'jiZZp2)&^DNd]R+J&VV-`lk]Cs`0BO_YJ^>MYYY1M*?pZT
%](Oi7'&:2/[4M2A)*Z0];,Ze/D@i<46OWmIZABmp[%Tq!:m=Xgg1oj8Q=JPn.=K]X?SdS8$%hr#EbJXk9GPF='1p?r*icMRpK5md
%&j+9W'@MU\/I_bf[8PiHYR7YCEo_glRS,es^,!t_`@Gp3eM(`1iVChNcQ%<Udg`,G0g,NA%AZ9YPnC0^?M2p)ff^ffPE3tOoX-e1
%82gh2Trl^_JPl"EZ?LoLoi_6Y$6pcJPq>h`r5P1Di`$dZ:1&WN2gc(?D5dB$fd+V5\C12QQtP>%&?!]G@B#sEHk+[N4b-^*hOkV=
%c8jc7XH5*,H:D_<q3Y>A1d+[Zog<W-9!f,&e/%,lL.WRBmA\YU1f`;K0&:3X$!u2$e*,B=NB(Ziku5#(\Vp/L;KV&aS9IBKM/q1O
%[":T+8-V5^Ou_b&6X:bHq:$oD-qYLD4r"sUdJZkO):'RV/31MoLDm1W4P!aXoX0er`MJQVqYJoG5SSQ;cZHkA/C*F!]>$^?jh"Y@
%I(sXc(db[e32p314r^"?B7kX_)"og)YbZlXT=[8d1$_JRR9_K7)nJO>F`&ES;KV%#dS+Cr3$:_<(7/16gt.IVgES9efWA70^CQ*'
%YSsdpK2E,9e/Vn/_4sa("H=Hu[mS"8B545lF8=rR'MXN%0(MWDQ_5&$=+_:0L5?.i`5+_&r[fFd!Km4(!=P6TV&"D_b=4+GE8@I!
%E>C#niW2mt#%\!B\H5gf]qpfML0NUsAk&;5/b3AW"Cdf0`Q,qte\6eG1T1tmr&lnp2oP=)LM!!/,0/S]f*plPAL%liUq86p-^H>\
%5>DS2dGtf1[JDu$AY5#r[+6RLl9<hJ\NPu]6d(+@So,?R9FXK*]K/E914!tSdt`JkXu1H5+jWKT.a>Gt:_`l9c8f;;H,R*?N8pFG
%-ufVe8+U5C%aNNQa9!0D>$GlJqYh>RD-[sY(S1dnX]iZD:bb+nT?75NFF"%EF.?ZD5:(n.?KCdB,gq:i7G"9Iadg91or;1PLs*_^
%TQl=LS7#")WXU$7%Y2(-q<rFgf5]ag&&4kb@VVsj]Xl_j/KlTZ!NJfM]Rk*#NA>U6-;-h,jrgKD:(@\\eT3nn3cGqqdn7i=VchYa
%/0V)I4XR[q_\\kB@>URn_jWAeO*cZ51ht,1PI(Y//kdI4&rN7PKa<!.(IWOT]:1!IFY%dkOK46k[KDC)#OdbPd'fdr1WURf;O^6b
%e_X6R@ohDHHI9*761_a0SVWWt8Q32bE@!_\PGIkP8W$:[n8[U$JaB'`\(n@P,s-#=e1WHQ[h*/#1M7\LA*mD[a<M=,b0Zk7D+=V`
%q#dQN;>:>aS:#b8D\ib4fJ-04PXeZI6AH">R6g<oP46dYZK6#B143`&""?h$EEVl^T[&+H'!oJ<hAOS)Po(Ou%S%`B5Bp<27`a/S
%,I>UtX-,BfQP7u@N/I93'U7:ErDRpiD:6?:h-9<DM*HGTki]EJjS3uY9-W28-m&G'T*iFd'[Z-&TFCSB<8Ej2?6olUqdP7p[eiF"
%B&Z$O&f(JLg.Y3YU:b5]`BpH.2'G`F(`'3)*X>YY!XY0C\>Q'CNU,+pW>>):E;WKE!K+WnB7rR\83n5+1scXRhrOW8#dt[m&S71K
%mrEM8Q*JMn#/_Dl$hN0nl`!m68SA%&S285\CM%=G02#s'R?X.[$jB6U\\m>i2A8_%'@@@"RQdmCFi5;03rYDV?kh/<k:0b`Ta]^)
%LYpF.a@6^&cg#(&<$&EY7%/.9D3T<<&OW6?"ni6XOEu:DdE!U_n)O9:A!"`r+,OH6g/TAET`tto,lYmg-,89/_-1f`P7-Kf'm4p,
%;8<=g8*;+!Y9&,ldL..hWF"&U;Xu+=f;iCJUj6Dc$HRl.AGD9-%Fl52pR161g60j&q+ZgVlr9ThZ7ZO/\-=j,=`SA;qBmFJa,N*X
%pjT)MlqfYh\IDiQoXLS?.)fljlRIP/:^$R<;.mfTqC4[R<"/E1d&4U2a;Y3\4_`@Q=f-)u>Y'ei5,;b0ODQYAkIjBL0`0dAs3jht
%Nrk4;#2,d#>Y]CNT]"jjZH/@Z',Kd0Jl6\";O*c=8BFS6Ad;+*ppWk2@#?.T)*'C9b=W>Z1"ti*R(I<(G&gCB6S=nLl2/fC[-./O
%J.NdG,;3KW#rNV9n>$tkigZl^>[3<\68_*q.nX7bTWYS[[)FLciCIM&9Z:a&eVCAVTG\tV7=/[,P0L:>L;:7jh2S7(36qc/.:@4j
%n6"MT2^QYW5u.uoh[TF%8!aJ*9A:Q*'.'R4qOi.Fd6%+b`g,cV-qEe=W^If#fN`"1$*.gfe39*nf>'f6OY_Xd:til)em>H.aj2=a
%?eM$u-L*Sg_JD-Z#(eu@'%6D0"^]:+j!E$Ud&q\R;*[Cr-A,o]$52j;$D(qLZ1-QL"gQ9_OsIfhg):]\?skP[Q+2JLn,2qaC[':D
%:??;<HD+X!1I1UQD[ke^G/sdW6be%QJNiMcb'%9G,`]a:HRNR:NKE;V>9A$U/mUUc)Ja>J*j\kbq(!e-`%c1rpgUPDL7n&C&e2hE
%,,hGoBSZi>$MCqFQs"?6X)We,WRXrnb!h+!9l,_?<Cmo+G)[aE;i7YY#3I=XmI3*`>e8D4baLdHO6J\jO%4J<k9A7.=`dp)je:b5
%-lO+p]iZP[W$iNbEN@#68q`%?JF#0^W[T:Fcc']YPa^2%605&[lF2op`YVRpXBEV\DlA#0r]]Xk17Y\PQgq$C6F.$W///Z+Uk5u+
%btF*5$_(iVWWl0YX`kASnYF`t_K78R;^rC5fa@Hn&4MQZ8cFb0h9DBj:s)fI*js`6PbSj^=ch-#Tgkc5$<Kr7PbL!'?c<r(b1hZD
%A`D@9Wl&"kGnZ'W;D-ElZR3UYYHPM^V:G4gLsH.n_I.;bVfr#E\e>6[\1d5H\U*-:3qU,4b_\b'784g,Pg5-LR&J`fW.^J_bG[g-
%5E3f$?Uc?#rcM0a>OuQ.[dZ%%0oA(C\b\O+hdN3j"dkfZeM*pC4.oIgAVS83XHkn%3P&dR"d2\lFU%:lG`tg,_$-BHF`5adHXQQV
%"1,`Pbl0XWWRn,#8Mq@RU8TSYXW0jP=I:L0if:B^(G%D]R$C-mK:5'I<[Gmu4j'aK;\kYD$A`1m)nKi=Z&Qs'1bSGQm<)[Bf5]L#
%Nm%D_0)OtEm(_Sj]H0/k]%QW=B#gsA*LiPS#3NP^ZFs#"m<-!VDl:eP3aK2Gl*=UDjjfdZXcjd/:3O92g%!Y8N`RSi?CgHXX%rA,
%V@JT?TXa9RR)+/K5pb(qV1uOs`.\68Tk7?lc@i"Q"2lLmYs.O'G=tVFJpo6Y'ZQZ.42F?2oooKBPl9&XH/UCgB1Ef9oSI]onZClL
%9(`Y6iY7;49>NtP/%6jiTf#)?M<i$/ii6r#&q7_A>;KIfNZdh^=o3O1]"u#;'EllJn&F!0eEGmGVn+Z!,"bFfM)qm(Of11.W:,MM
%CD+j'"#OWo_0FFD@P0KNPPO(tpTF>Yn/4Tu8Q)]nd&Hb:,Ak`ceGG8`^_dVVO,K0i,2jV4cB@H),=N]$l4(TZ7M(>i6c#HghPtE@
%=E`f(lOirs^Rqt/5dG"/"=c=F4;j&:5oq2O$:%&m$uLmK0t8@rFsN)Z=#7M')I$OtHR4P7GOcamKU!18a-!o^Co+Zl]T>H#1*'(q
%+S*O[jh*j!AT4/\4b36c*e/&,O$?rWVq[O)Km>8BFlGlcTeH$HYn<^T,9Vgq5`[G,U_L,u#:<G-,;ZU[/X+ZaF:1$q6u`c2rTm]i
%"-Q#Kl5\/JaC'=&I=sX.(W=^XBF\Shc3mM3^<r`+p`LaJOSVo]<#Z`T&+OX,iSJOrbgP(Di</aTYo!;:J\m#]X6s@gPc@,8lr?Z"
%8XU!XP+g`CR*qVBEEuD+^dR^D'>b_Vkt3DNXp^s!9VjVDjG^et9dP`])?k.83\#E+6WH0M*][%\p_]"?cO"0^H(q0/)eW`9&bs?L
%#.9>HTBJ0Sn#5;/OD-B02crU/PWb>%/FTWgS#X%0D3S%-i>A"n1Vl#Y\oU:#&"<Cs,H8'2<B]8.!@=bq"6*gSF=!e,SjIp?'P)\*
%&+3EXiWM1V[@q!cJ]PqOj/!Z/%4'F`-2pPn,eMNQkW;U@XuSB^R!*+`A7^*eQn>?\V;lM<mV^ao!gd=XDP/dH=\;^meOWto[RNXN
%S7Yo^m6]6IPG!Jsp!&#KDi,)*d(":.9X%N<YWL,?WTd&8Xo`'PkNAS$kQS(sqOrH^mR-hj6P7?Ah#g=H=R:%UZR7Kg,m"r?gN?5e
%/iYdd>^dXceN4<=3Xau`P+Z1DM5b%nIP5873lRD'<qpF4^MAo^5mp*L^(S"_i2/H40,k'oag6r-2[7$Q1,rRGS\e62oi#V<&>W>6
%TOZepB,QJu`i=Sl<?:D@["^h>;@1@[Wh3;NTfY])N#8]9XHY_emKpL`Kp!H%'kZ3:=Z-Yb#8Dnpa#?dI/k_`f(sWaB>ZnN"d`GUQ
%%GP]6fd"0)BSS/AJIb!sLp]1m9<8%5RlCm6&n!D>QtlZWCE\QFS1#M"*')6IK]eZ.GqDtHP.T]NbpXkFE1I('=QrH-i.-j]2RH*#
%e,7>^Me((X!<>>(VU<9f%67^Zj8`&>g#/&<T8)VboaN9-@p6g!Q6_5[rZ7D1@GQoc9)uA5\IR,qRE9>XUud(KCm<a0KD\(f:eE35
%D=uDW^NX&1[s^8Dqf4mpja>gLo<g6lCL<+.0=PqXC18jV&o=q0A!:\5Jq!>K0#]Yn*g[`C:ZE'e[&7mM=0fj-esGuF?d@9;S?I?$
%J&f8kBdh)QJq8shs1?WfeXJH2:_'J*q0BQr1Tm%W,&:s]MhBW]%Hl*+F^ilUXZ]pM)Gj"/BQPu=T6g+"QR/VThRkBtDj48ZHLn8*
%9s7k]]mAA=H!)g1#$2#Ug/$;")!F]>(dKIib;]sk!SXZ`Sso=r*gu,lQS#CI[QJoio%)!M="dca]klB8Cb_o[X33?F$LM;1""iGL
%!2B1\S,s&#,b1%0OYLD-A-Z-h%-82)O$Qi;afh#C)t.e&/SI-b0!>431<WlT>NfYY4u1<^QS!^;bJ"\&rLA=Jd@Z\a:['t5/!AM,
%ArL<k.W:;8IjX2'G]c_\,.8HpH`6h(0lA7\Q$!Fo-I.%1Zj%0E#n6nTHi.G:X0K;1$L;M/AhSn7kTj)Q<6uKoN[b'@APqKs`G/K9
%e<C7n.?J&_aY!so^Z$J7CoaBYj'hpMN^oo:(M>`cRXi]%2;E<L23tEd$R3c\7qXXT[oVAgW18i,EUF*M20k&.,mIilF$B%..DS+t
%a3Vf\?MYt9URr,cD;#Dspg?4:W/MQGO:bFYFh,H8MN5uu9c*+b3qo:MKSLsO>^9bNLIAho%W;:]PFYJ$s)8sY;#_PBE=)R$aGf:!
%XO3E?iTSt[[&d#YS4,3_8BZu(UJ9,:;J%+!Tb[-4J3mi?ZnYSG%_k0hq&q0^7%[o50`?F%3K-k<gr-)3+=AE-WSPnW>#29sZQB$C
%_r=\E%a@FF\FBU>Yfag4nh#s5`l]CbkY<8c3&!ZAW:^n?"96f'3BHeiCFn7kId'GH`td#OFNQ#n<92seAmHlfJZdQln,jNKmRN2/
%`9M=GjDl.NjS@^H7]=);B!S@F!2V0hGl5rt5R&),TKOFrTOM@W/#urKWZ%'Oq6h`;/%c%k7@;9:;apVM4EsO:*C6g&)(T1_'RB&2
%Hc'VQ%A:8s)A7+9)&S0G7&2T2SL#9!Js7a@;kjF?Cjc"W+EBSWG<GQOB8=ZG+K%lifPlpk=@HZG95FbtOI_P`.KaKC*'W<!#r9GQ
%F@?<JW4IF/VDa+AO5BL1&Xu&$n8SPmpNsQgFaooLTinPM(sp4M3H)a$A$.k,ITZl.3kWt8"QNT_ed4Z-)]Z9+rjC*t2.N[R^R,.R
%krX[<Nf^Qfkf@;!^?c,ZX./HhJLnU:lA-AbAaP"S>n>kEl1&>gXo=aL;Lc6rJf2>B:_0]iH(gMoHZWGbl'*2"PP,8>.>4D>A^>=J
%c;$!fJdp9ZN:$uD@:0<95i'OQK1N$Y+T?<\;5O#'+N.eIVgSi/MNehc*'=bkaN"[SOi0%Y^fNW_9Bt`P#WY$Rm@guCYoKZ=<G6W,
%JaP:j;g.5"GK4Ms'gG0s8T($\oLChuW?mS'ZB#gKUk$HH)3^K@+r9<p,ljJ:,$b250c3XDaZX/hqll898<&eHr&i\uQDA!M3.l`R
%,[?a;gPpTGIhN"cG1d?#hf2e@SEd[:\D0-4TOlJHFW`jk$mG(rQ'1cgS!"R048:oB09dIXW)3bd2?t*$5U)06139mJY:?;A&-jhp
%l`Ti1dt1q#I>a(l-3AVc;!$F5'9a48]BV;]RG7Fb)^>gAfJ;1$N\t[mn?C+O4U(pXVjF@lf0n_&.V<$s-Q"[V&5e&q3AHVsJ0\aD
%NhJ7A+;m:J+NNcHW[lAc.$iG*fZPjGY&Ct'gn+T*<'7:l$)"W9_o,uldbOo7ncH7=6f!h`QP#XFLmXb2TaiJ-VQrmaRB7!N>bP)^
%+8RfJ_Rd+g_iq2@nW[lP2s:i'J`ZL$=bgILm"PO.P(W*c88h##70..kJ/VF\[oFbtGI7SW^b3F_f^:rkj8H5ma<YG_DdUW]^tomM
%rRVnOBK2,)krgIt7llp4%Y-T*7g]UY*ul1TE)1P'2X-ipSj2T^s+aC1VAE'GR1"kgJ((G'`&u.[?XU^$!Rp]!e]T[m!mt$W>N7'f
%h3C89-kq+\<C2So?f32G8B*(+mnW6=bM[L%:(j/e5oR"^FXXcR0Z"nAS,7?]`%joNFiYd-d?.sPJf30WA]A5U@u^]d$8O7<q\QAH
%5b>eKF!4QT(4UR\i!LK?"PemnNiT9gRe5ahcL6Q?SFBhO-7('M!*kO@BgoEQ>I0lf-2qn*-&^\(#cltPlPkmX^UeW7/qRuXW@F"*
%dcFcb:UY0qi`9Q/Q0klUP4uIL@sT*"\(V-tZ./D2T%AN:fDVF%-b'K_%fK%\>Xs(Dl7^rHl)?E;l9Wq_&"hh/\#ARSLIR=.5o'Yi
%P\([D:G<[m/N"]ZM9oM)'BZee_5tj`L!h#5dK'#T6b9Z%^O#G_aE0R>2*<jR^Og7<".?3:,5b_fBn5NT/hI8MR>WZ,@>&hjC@%u_
%Ve`\J9o-oc6<]pQ4!Zm&cL_J^5tifS6mn@dJW3kS]D]=KePh+gA*<[oEr=J?eVAOl!(^fGYtU6bDTL@?-g3fHmOj7[J>W<#Z(9d4
%"NER[8LFD?PJW]7j2b,G5UP7Pr.]GCkMo2;A<s^JVR7gK=W6B3DTHS"$Uj7d2Sshc_jfHjnB7EE$sc)6SnM*DIHV>3:Kq<l[HR'C
%J1Ak.R=ZY2W-qF+qW>Z)]OY%tAf/VQE%=>9HQ4qGSI2V(<q+%TEqhp)+]O-u4.KfW[K/s64T*k=,&hj%H^+s(2*$=F,G2HfZ4l`=
%b!e_EX$HG!l7)uSJB/srTPt9gf`/=ER;ktaDtmEQMZk_>/u4BV`o!=02Ki>Lo0B0k/bRV`g[I5<!KT\.MXQSf/9</ZO:9`b,O-so
%6hWu25m.X4AeRbHE)\PF[u\T'X3S+%(lYk]-9\\-FkNKPGR!PYq[+Q_[Jbu*FMno?D0P&UYnI8`ZVTF]7gO'"1ZmMXU.32g>D`ES
%`]MbHr4H.shGR/:q9'RpO8o-=s6rhal$o`5a+*p:s8)NRs6n;6p>sHur6t]:ci<S!s7P:Kq>^<bkC<BLJ,#@[s6'F]kF_bL?iLid
%\j-5Pa.IhWQ[eo(^]-OumGIp@e%bpTs6]giJfgOJpnrW<0E:YDplGIErr\,oY.O~>
%AI9_PrivateDataEnd
